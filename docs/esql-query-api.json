{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.187272",
        "size": 4195,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-query-api.html",
        "type": "documentation",
        "role": [
            "child_attributes",
            "child_attributes"
        ],
        "has_code": false,
        "title": "esql-query-api",
        "version": "8.15"
    },
    "doc": "[[esql-query-api]]\n=== {esql} query API\n++++\n<titleabbrev>{esql} query API</titleabbrev>\n++++\n\nReturns search results for an <<esql,ES|QL ({es} query language)>> query.\n\n[source,console]\n----\nPOST /_query\n{\n  \"query\": \"\"\"\n    FROM library\n    | EVAL year = DATE_TRUNC(1 YEARS, release_date)\n    | STATS MAX(page_count) BY year\n    | SORT year\n    | LIMIT 5\n  \"\"\"\n}\n----\n// TEST[setup:library]\n\n[discrete]\n[[esql-query-api-request]]\n==== {api-request-title}\n\n`POST _query`\n\n[discrete]\n[[esql-query-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `read`\n<<privileges-list-indices,index privilege>> for the data stream, index,\nor alias you search.\n\n[discrete]\n[[esql-query-api-query-params]]\n==== {api-query-parms-title}\n\n`delimiter`::\n(Optional, string) Separator for CSV results. Defaults to `,`. The API only\nsupports this parameter for CSV responses.\n\n`drop_null_columns`::\n(Optional, boolean) Should columns that are entirely `null` be removed from\nthe `columns` and `values` portion of the results? Defaults to `false`. If\n`true` the the response will include an extra section under the name\n`all_columns` which has the name of all columns.\n\n`format`::\n(Optional, string) Format for the response. For valid values, refer to\n<<esql-rest-format>>.\n+\nYou can also specify a format using the `Accept` HTTP header. If you specify\nboth this parameter and the `Accept` HTTP header, this parameter takes\nprecedence.\n\n[discrete]\n[role=\"child_attributes\"]\n[[esql-query-api-request-body]]\n==== {api-request-body-title}\n\n`columnar`::\n(Optional, Boolean) If `true`, returns results in a columnar format. Defaults to\n`false`. The API only supports this parameter for CBOR, JSON, SMILE, and YAML\nresponses. See <<esql-rest-columnar>>.\n\n`include_ccs_metadata`::\n(Optional, boolean) If `true`, cross-cluster searches will include metadata about the query\non each cluster. Defaults to `false`. The API only supports this parameter for CBOR, JSON, SMILE,\nand YAML responses. See <<ccq-cluster-details>>.\n\n`locale`::\n(Optional, string) Returns results (especially dates) formatted per the conventions of the locale.\nFor syntax, refer to <<esql-locale-param>>.\n\n`params`::\n(Optional, array) Values for parameters in the `query`. For syntax, refer to\n<<esql-rest-params>>.\n\n`profile`::\n(Optional, boolean) If provided and `true` the response will include an extra `profile` object\nwith information about how the query was executed. It provides insight into the performance\nof each part of the query. This is for human debugging as the object's format might change at any time.\nThink of this like https://www.postgresql.org/docs/current/sql-explain.html[EXPLAIN ANALYZE] or\nhttps://en.wikipedia.org/wiki/Query_plan[EXPLAIN PLAN].\n\n`query`::\n(Required, string) {esql} query to run. For syntax, refer to <<esql-syntax>>.\n\n\nifeval::[\"{release-state}\"==\"unreleased\"]\n`table`::\n(Optional, object) Named \"table\" parameters that can be referenced by the <<esql-lookup>> command.\nendif::[]\n\n[discrete]\n[role=\"child_attributes\"]\n[[esql-query-api-response-body]]\n==== {api-response-body-title}\n\n`columns`::\n(array of objects)\nColumn `name` and `type` for each column returned in `values`. Each object is a single column.\n\n`all_columns`::\n(array of objects)\nColumn `name` and `type` for each queried column. Each object is a single column. This is only\nreturned if `drop_null_columns` is sent with the request.\n\n`values`::\n(array of arrays)\nValues for the search results.\n\n`_clusters`::\n(object)\nMetadata about clusters involved in the execution of a cross-cluster query. Only returned (1) for\ncross-cluster searches and (2) when `include_ccs_metadata` is sent in the body and set to `true`\nand (3) when `format` of the response is set to JSON (the default), CBOR, SMILE, or YAML.\nSee <<ccq-cluster-details>> for more information.\n\n`profile`::\n(object)\nProfile describing the execution of the query. Only returned if `profile` was sent in the body.\nThe object itself is for human debugging and can change at any time. Think of this like\nhttps://www.postgresql.org/docs/current/sql-explain.html[EXPLAIN ANALYZE] or\nhttps://en.wikipedia.org/wiki/Query_plan[EXPLAIN PLAN].\n"
}