{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.213068",
        "size": 5382,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/reroute-processor.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "reroute-processor",
        "version": "8.15"
    },
    "doc": "[[reroute-processor]]\n=== Reroute processor\n++++\n<titleabbrev>Reroute</titleabbrev>\n++++\n\nThe `reroute` processor allows to route a document to another target index or data stream.\nIt has two main modes:\n\nWhen setting the `destination` option, the target is explicitly specified and the `dataset` and `namespace` options can't be set.\n\nWhen the `destination` option is not set, this processor is in a data stream mode.\nNote that in this mode, the `reroute` processor can only be used on data streams that follow the {fleet-guide}/data-streams.html#data-streams-naming-scheme[data stream naming scheme].\nTrying to use this processor on a data stream with a non-compliant name will raise an exception.\n\nThe name of a data stream consists of three parts: `<type>-<dataset>-<namespace>`.\nSee the {fleet-guide}/data-streams.html#data-streams-naming-scheme[data stream naming scheme] documentation for more details.\n\nThis processor can use both static values or reference fields from the document to determine the `dataset` and `namespace` components of the new target.\nSee <<reroute-options>> for more details.\n\nNOTE: It's not possible to change the `type` of the data stream with the `reroute` processor.\n\nAfter a `reroute` processor has been executed, all the other processors of the current pipeline are skipped, including the final pipeline.\nIf the current pipeline is executed in the context of a <<pipeline-processor>>, the calling pipeline will be skipped, too.\nThis means that at most one `reroute` processor is ever executed within a pipeline,\nallowing to define mutually exclusive routing conditions,\nsimilar to a if, else-if, else-if, \u2026 condition.\n\nThe reroute processor ensures that the `data_stream.<type|dataset|namespace>` fields are set according to the new target.\nIf the document contains a `event.dataset` value, it will be updated to reflect the same value as `data_stream.dataset`.\n\nNote that the client needs to have permissions to the final target.\nOtherwise, the document will be rejected with a security exception which looks like this:\n\n[source,js]\n--------------------------------------------------\n{\"type\":\"security_exception\",\"reason\":\"action [indices:admin/auto_create] is unauthorized for API key id [8-dt9H8BqGblnY2uSI--] of user [elastic/fleet-server] on indices [logs-foo-default], this action is granted by the index privileges [auto_configure,create_index,manage,all]\"}\n--------------------------------------------------\n// NOTCONSOLE\n\n[[reroute-options]]\n.Reroute options\n[options=\"header\"]\n|======\n| Name          | Required  | Default                      | Description\n| `destination` | no        | -                            | A static value for the target. Can't be set when the `dataset` or `namespace` option is set.\n| `dataset`     | no        | `{{data_stream.dataset}}`   a| Field references or a static value for the dataset part of the data stream name. In addition to the criteria for <<indices-create-api-path-params, index names>>, cannot contain `-` and must be no longer than 100 characters. Example values are `nginx.access` and `nginx.error`.\n\nSupports field references with a mustache-like syntax (denoted as `{{double}}` or `{{{triple}}}` curly braces). When resolving field references, the processor replaces invalid characters with `_`. Uses the `<dataset>` part of the index name as a fallback if all field references resolve to a `null`, missing, or non-string value.\n| `namespace`   | no        | `{{data_stream.namespace}}` a| Field references or a static value for the namespace part of the data stream name. See the criteria for <<indices-create-api-path-params, index names>> for allowed characters. Must be no longer than 100 characters.\n\nSupports field references with a mustache-like syntax (denoted as `{{double}}` or `{{{triple}}}` curly braces). When resolving field references, the processor replaces invalid characters with `_`. Uses the `<namespace>` part of the index name as a fallback if all field references resolve to a `null`, missing, or non-string value.\ninclude::common-options.asciidoc[]\n|======\n\nThe `if` option can be used to define the condition in which the document should be rerouted to a new target.\n\n[source,js]\n--------------------------------------------------\n{\n  \"reroute\": {\n    \"tag\": \"nginx\",\n    \"if\" : \"ctx?.log?.file?.path?.contains('nginx')\",\n    \"dataset\": \"nginx\"\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nThe dataset and namespace options can contain either a single value or a list of values that are used as a fallback.\nIf a field reference evaluates to `null`, is not present in the document, the next value or field reference is used.\nIf a field reference evaluates to a non-`String` value, the processor fails.\n\nIn the following example, the processor would first try to resolve the value for the `service.name` field to determine the value for `dataset`.\nIf that field resolves to `null`, is missing, or is a non-string value, it would try the next element in the list.\nIn this case, this is the static value `\"generic`\".\nThe `namespace` option is configured with just a single static value.\n\n[source,js]\n--------------------------------------------------\n{\n  \"reroute\": {\n    \"dataset\": [\n        \"{{service.name}}\",\n        \"generic\"\n    ],\n    \"namespace\": \"default\"\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n"
}