{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.119593",
        "size": 11589,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-bulk-put-role.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-api-bulk-put-role",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-bulk-put-role]]\n=== Bulk create or update roles API\npreview::[]\n++++\n<titleabbrev>Bulk create or update roles API</titleabbrev>\n++++\n\nBulk adds and updates roles in the native realm.\n\n[[security-api-bulk-put-role-request]]\n==== {api-request-title}\n\n`POST /_security/role/` +\n\n[[security-api-bulk-put-role-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have at least the `manage_security` cluster\nprivilege.\n\n[[security-api-bulk-put-role-desc]]\n==== {api-description-title}\n\nThe role management APIs are generally the preferred way to manage roles, rather than using\n<<roles-management-file,file-based role management>>. The bulk create\nor update roles API cannot update roles that are defined in roles files.\n\n[[security-api-bulk-put-role-path-params]]\n==== {api-path-parms-title}\n\n`refresh`::\nOptional setting of the {ref}/docs-refresh.html[refresh policy] for the write request. Defaults to Immediate.\n\n[[security-api-bulk-put-role-request-body]]\n==== {api-request-body-title}\n\nThe following parameters can be specified in the body of a POST request\nand pertain to adding a set of roles:\n\n`roles`::\n(object) The roles to add as a role name to role map.\n\n====\n`<role_name>` (required):: (string) The role name.\n`applications`:: (list) A list of application privilege entries.\n`application` (required)::: (string) The name of the application to which this entry applies.\n`privileges`::: (list) A list of strings, where each element is the name of an application\nprivilege or action.\n`resources`::: (list) A list resources to which the privileges are applied.\n\n`cluster`:: (list) A list of cluster privileges. These privileges define the\ncluster level actions that users with this role are able to execute.\n\n`global`:: (object) An object defining global privileges. A global privilege is\na form of cluster privilege that is request-aware. Support for global privileges\nis currently limited to the management of application privileges.\n\n`indices`:: (list) A list of indices permissions entries.\n`field_security`::: (object) The document fields that the owners of the role have\nread access to. For more information, see\n<<field-and-document-access-control>>.\n`names` (required)::: (list) A list of indices (or index name patterns) to which the\npermissions in this entry apply.\n`privileges`(required)::: (list) The index level privileges that the owners of the role\nhave on the specified indices.\n`query`::: A search query that defines the documents the owners of the role have\nread access to. A document within the specified indices must match this query in\norder for it to be accessible by the owners of the role.\n\n`metadata`:: (object) Optional meta-data. Within the `metadata` object, keys\nthat begin with `_` are reserved for system usage.\n\n`run_as`:: (list) A list of users that the owners of this role can impersonate.\nFor more information, see\n<<run-as-privilege>>.\n\n`remote_indices`:: beta:[] (list) A list of remote indices permissions entries.\n+\n--\nNOTE: Remote indices are effective for <<remote-clusters-api-key,remote clusters configured with the API key based model>>.\nThey have no effect for remote clusters configured with the <<remote-clusters-cert,certificate based model>>.\n--\n`clusters` (required)::: (list) A list of cluster aliases to which the permissions\nin this entry apply.\n`field_security`::: (object) The document fields that the owners of the role have\nread access to. For more information, see\n<<field-and-document-access-control>>.\n`names` (required)::: (list) A list of indices (or index name patterns) on the remote clusters\n(specified with `clusters`) to which the permissions in this entry apply.\n`privileges`(required)::: (list) The index level privileges that the owners of the role\nhave on the specified indices.\n`query`::: A search query that defines the documents the owners of the role have\nread access to. A document within the specified indices must match this query in\norder for it to be accessible by the owners of the role.\n\nFor more information, see <<defining-roles>>.\n====\n\n[[security-bulk-api-put-role-example]]\n==== {api-examples-title}\n\nThe following example adds the roles called `my_admin_role` and `my_user_role`:\n\n[source,console]\n--------------------------------------------------\nPOST /_security/role\n{\n    \"roles\": {\n        \"my_admin_role\": {\n            \"cluster\": [\n                \"all\"\n            ],\n            \"indices\": [\n                {\n                    \"names\": [\n                        \"index1\",\n                        \"index2\"\n                    ],\n                    \"privileges\": [\n                        \"all\"\n                    ],\n                    \"field_security\": {\n                        \"grant\": [\n                            \"title\",\n                            \"body\"\n                        ]\n                    },\n                    \"query\": \"{\\\"match\\\": {\\\"title\\\": \\\"foo\\\"}}\"\n                }\n            ],\n            \"applications\": [\n                {\n                    \"application\": \"myapp\",\n                    \"privileges\": [\n                        \"admin\",\n                        \"read\"\n                    ],\n                    \"resources\": [\n                        \"*\"\n                    ]\n                }\n            ],\n            \"run_as\": [\n                \"other_user\"\n            ],\n            \"metadata\": {\n                \"version\": 1\n            }\n        },\n        \"my_user_role\": {\n            \"cluster\": [\n                \"all\"\n            ],\n            \"indices\": [\n                {\n                    \"names\": [\n                        \"index1\"\n                    ],\n                    \"privileges\": [\n                        \"read\"\n                    ],\n                    \"field_security\": {\n                        \"grant\": [\n                            \"title\",\n                            \"body\"\n                        ]\n                    },\n                    \"query\": \"{\\\"match\\\": {\\\"title\\\": \\\"foo\\\"}}\"\n                }\n            ],\n            \"applications\": [\n                {\n                    \"application\": \"myapp\",\n                    \"privileges\": [\n                        \"admin\",\n                        \"read\"\n                    ],\n                    \"resources\": [\n                        \"*\"\n                    ]\n                }\n            ],\n            \"run_as\": [\n                \"other_user\"\n            ],\n            \"metadata\": {\n                \"version\": 1\n            }\n        }\n    }\n}\n--------------------------------------------------\n\nA successful call returns a JSON structure that shows whether the role has been\ncreated, updated, or had no changes made.\n\n[source,console-result]\n--------------------------------------------------\n{\n    \"created\": [ <1>\n        \"my_admin_role\", <2>\n        \"my_user_role\"\n    ]\n}\n--------------------------------------------------\n\n<1> Result type, one of `created`, `updated`, `noop`, `errors`.\n<2> A list of the roles that were created.\n\nBecause errors are handled individually for each role create or update, the API allows partial success.\n\nThe following query would throw an error for `my_admin_role` because the privilege `bad_cluster_privilege`\ndoesn't exist, but would be successful for the `my_user_role`.\n\n[source,console]\n--------------------------------------------------\nPOST /_security/role\n{\n    \"roles\": {\n        \"my_admin_role\": {\n            \"cluster\": [\n                \"bad_cluster_privilege\"\n            ],\n            \"indices\": [\n                {\n                    \"names\": [\n                        \"index1\",\n                        \"index2\"\n                    ],\n                    \"privileges\": [\"all\"],\n                    \"field_security\": {\n                        \"grant\": [\n                            \"title\",\n                            \"body\"\n                        ]\n                    },\n                    \"query\": \"{\\\"match\\\": {\\\"title\\\": \\\"foo\\\"}}\"\n                }\n            ],\n            \"applications\": [\n                {\n                    \"application\": \"myapp\",\n                    \"privileges\": [\n                        \"admin\",\n                        \"read\"\n                    ],\n                    \"resources\": [\n                        \"*\"\n                    ]\n                }\n            ],\n            \"run_as\": [\n                \"other_user\"\n            ],\n            \"metadata\": {\n                \"version\": 1\n            }\n        },\n        \"my_user_role\": {\n            \"cluster\": [\n                \"all\"\n            ],\n            \"indices\": [\n                {\n                    \"names\": [\n                        \"index1\"\n                    ],\n                    \"privileges\": [\n                        \"read\"\n                    ],\n                    \"field_security\": {\n                        \"grant\": [\n                            \"title\",\n                            \"body\"\n                        ]\n                    },\n                    \"query\": \"{\\\"match\\\": {\\\"title\\\": \\\"foo\\\"}}\"\n                }\n            ],\n            \"applications\": [\n                {\n                    \"application\": \"myapp\",\n                    \"privileges\": [\n                        \"admin\",\n                        \"read\"\n                    ],\n                    \"resources\": [\n                        \"*\"\n                    ]\n                }\n            ],\n            \"run_as\": [\n                \"other_user\"\n            ],\n            \"metadata\": {\n                \"version\": 1\n            }\n        }\n    }\n}\n--------------------------------------------------\n\nThe result would then have the `errors` field set to `true` and hold the error for the `my_admin_role` update.\n\n\n[source,console-result]\n--------------------------------------------------\n{\n    \"created\": [\n        \"my_user_role\" <1>\n    ],\n    \"errors\": { <2>\n        \"count\": 1, <3>\n        \"details\": {\n            \"my_admin_role\": { <4>\n                \"type\": \"action_request_validation_exception\",\n                \"reason\": \"Validation Failed: 1: unknown cluster privilege [bad_cluster_privilege]. a privilege must be either one of the predefined cluster privilege names [manage_own_api_key,manage_data_stream_global_retention,monitor_data_stream_global_retention,none,cancel_task,cross_cluster_replication,cross_cluster_search,delegate_pki,grant_api_key,manage_autoscaling,manage_index_templates,manage_logstash_pipelines,manage_oidc,manage_saml,manage_search_application,manage_search_query_rules,manage_search_synonyms,manage_service_account,manage_token,manage_user_profile,monitor_connector,monitor_enrich,monitor_inference,monitor_ml,monitor_rollup,monitor_snapshot,monitor_text_structure,monitor_watcher,post_behavioral_analytics_event,read_ccr,read_connector_secrets,read_fleet_secrets,read_ilm,read_pipeline,read_security,read_slm,transport_client,write_connector_secrets,write_fleet_secrets,create_snapshot,manage_behavioral_analytics,manage_ccr,manage_connector,manage_enrich,manage_ilm,manage_inference,manage_ml,manage_rollup,manage_slm,manage_watcher,monitor_data_frame_transforms,monitor_transform,manage_api_key,manage_ingest_pipelines,manage_pipeline,manage_data_frame_transforms,manage_transform,manage_security,monitor,manage,all] or a pattern over one of the available cluster actions;\"\n            }\n        }\n    }\n}\n--------------------------------------------------\n\n<1> The successfully created role.\n<2> The errors encountered.\n<3> The number of put role requests that resulted in an error.\n<4> The error keyed by role name.\n"
}