{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.841076",
        "size": 8899,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/verify-repo-integrity-api.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": false,
        "title": "verify-repo-integrity-api",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[verify-repo-integrity-api]]\n=== Verify repository integrity API\n++++\n<titleabbrev>Verify repository integrity</titleabbrev>\n++++\n\nVerifies the integrity of the contents of a snapshot repository.\n\n////\n[source,console]\n----\nPUT /_snapshot/my_repository\n{\n  \"type\": \"fs\",\n  \"settings\": {\n    \"location\": \"my_backup_location\"\n  }\n}\n----\n// TESTSETUP\n////\n\n[source,console]\n----\nPOST /_snapshot/my_repository/_verify_integrity\n----\n\n[[verify-repo-integrity-api-request]]\n==== {api-request-title}\n\n`POST /_snapshot/<repository>/_verify_integrity`\n\n[[verify-repo-integrity-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API. For more\ninformation, see <<security-privileges>>.\n\n[[verify-repo-integrity-api-desc]]\n==== {api-description-title}\n\nThis API allows you to perform a comprehensive check of the contents of a\nrepository, looking for any anomalies in its data or metadata which might\nprevent you from restoring snapshots from the repository or which might cause\nfuture snapshot create or delete operations to fail.\n\nIf you suspect the integrity of the contents of one of your snapshot\nrepositories, cease all write activity to this repository immediately, set its\n`read_only` option to `true`, and use this API to verify its integrity. Until\nyou do so:\n\n* It may not be possible to <<snapshots-restore-snapshot,restore some\n  snapshots>> from this repository.\n\n* <<searchable-snapshots>> may report errors when searched, or may have\n  unassigned shards.\n\n* <<snapshots-take-snapshot,Taking snapshots>> into this repository may fail,\n  or may appear to succeed having created a snapshot which cannot be restored.\n\n* <<delete-snapshot-api,Deleting snapshots>> from this repository may fail, or\n  may appear to succeed leaving the underlying data on disk.\n\n* Continuing to write to the repository while it is in an invalid state may\n  causing additional damage to its contents.\n\nIf the <<verify-repo-integrity-api>> API finds any problems with the integrity\nof the contents of your repository, {es} will not be able to repair the damage.\nThe only way to bring the repository back into a fully working state after its\ncontents have been damaged is by restoring its contents from a\n<<snapshots-repository-backup,repository backup>> which was taken before the\ndamage occurred. You must also identify what caused the damage and take action\nto prevent it from happening again.\n\nIf you cannot restore a repository backup,\n<<snapshots-register-repository,register a new repository>> and use this for\nall future snapshot operations. In some cases it may be possible to recover\nsome of the contents of a damaged repository, either by\n<<snapshots-restore-snapshot,restoring>> as many of its snapshots as needed and\n<<snapshots-take-snapshot,taking new snapshots>> of the restored data, or by\nusing the <<docs-reindex>> API to copy data from any <<searchable-snapshots>>\nmounted from the damaged repository.\n\nAvoid all operations which write to the repository while the\n<<verify-repo-integrity-api>> API is running. If something changes the\nrepository contents while an integrity verification is running then {es} may\nincorrectly report having detected some anomalies in its contents due to the\nconcurrent writes. It may also incorrectly fail to report some anomalies that\nthe concurrent writes prevented it from detecting.\n\nNOTE: This API is intended for exploratory use by humans. You should expect the\nrequest parameters and the response format to vary in future versions.\n\nNOTE: This API may not work correctly in a mixed-version cluster.\n\n[[verify-repo-integrity-api-path-params]]\n==== {api-path-parms-title}\n\n`<repository>`::\n(Required, string)\nName of the snapshot repository whose integrity to verify.\n\n[[verify-repo-integrity-api-query-params]]\n==== {api-query-parms-title}\n\nThe default values for the parameters of this API are designed to limit the\nimpact of the integrity verification on other activities in your cluster. For\ninstance, by default it will only use at most half of the `snapshot_meta`\nthreads to verify the integrity of each snapshot, allowing other snapshot\noperations to use the other half of this thread pool.\n\nIf you modify these parameters to speed up the verification process, you risk\ndisrupting other snapshot-related operations in your cluster. For large\nrepositories, consider setting up a separate single-node {es} cluster just for\nrunning the integrity verification API.\n\n`snapshot_verification_concurrency`::\n(Optional, integer) Specifies the number of snapshots to verify concurrently.\nDefaults to `0` which means to use at most half of the `snapshot_meta` thread\npool at once.\n\n`index_verification_concurrency`::\n(Optional, integer) Specifies the number of indices to verify concurrently.\nDefaults to `0` which means to use the entire `snapshot_meta` thread pool.\n\n`meta_thread_pool_concurrency`::\n(Optional, integer) Specifies the maximum number of snapshot metadata\noperations to execute concurrently. Defaults to `0` which means to use at most\nhalf of the `snapshot_meta` thread pool at once.\n\n`index_snapshot_verification_concurrency`::\n(Optional, integer) Specifies the maximum number of index snapshots to verify\nconcurrently within each index verification. Defaults to `1`.\n\n`max_failed_shard_snapshots`::\n(Optional, integer) Limits the number of shard snapshot failures to track\nduring integrity verification, in order to avoid excessive resource usage. If\nyour repository contains more than this number of shard snapshot failures then\nthe verification will fail. Defaults to `10000`.\n\n`verify_blob_contents`::\n(Optional, boolean) Specifies whether to verify the checksum of every data blob\nin the repository. Defaults to `false`. If this feature is enabled, {es} will\nread the entire repository contents, which may be extremely slow and expensive.\n\n`blob_thread_pool_concurrency`::\n(Optional, integer) If `?verify_blob_contents` is `true`, this parameter\nspecifies how many blobs to verify at once. Defaults to `1`.\n\n`max_bytes_per_sec`::\n(Optional, <<size-units, size units>>)\nIf `?verify_blob_contents` is `true`, this parameter specifies the maximum\namount of data that {es} will read from the repository every second. Defaults\nto `10mb`.\n\n[role=\"child_attributes\"]\n[[verify-repo-integrity-api-response-body]]\n==== {api-response-body-title}\n\nThe response exposes implementation details of the analysis which may change\nfrom version to version. The response body format is therefore not considered\nstable and may be different in newer versions.\n\n`log`::\n(array) A sequence of objects that report the progress of the analysis.\n+\n.Properties of `log`\n[%collapsible%open]\n====\n`timestamp_in_millis`::\n(integer) The timestamp of this log entry, represented as the number of\nmilliseconds since the {wikipedia}/Unix_time[Unix epoch].\n\n`timestamp`::\n(string) The timestamp of this log entry, represented as a string formatted\naccording to {wikipedia}/ISO_8601[ISO 8601]. Only included if the\n<<common-options,`?human`>> flag is set.\n\n`snapshot`::\n(object) If the log entry pertains to a particular snapshot then the snapshot\nwill be described in this object.\n\n`index`::\n(object) If the log entry pertains to a particular index then the index will be\ndescribed in this object.\n\n`snapshot_restorability`::\n(object) If the log entry pertains to the restorability of an index then the\ndetails will be described in this object.\n\n`anomaly`::\n(string) If the log entry pertains to an anomaly in the repository contents then\nthis string will describe the anomaly.\n\n`exception`::\n(object) If the log entry pertains to an exception that {es} encountered during\nthe verification then the details will be included in this object.\n\n====\n\n`results`::\n(object) An object which describes the final results of the analysis.\n+\n.Properties of `results`\n[%collapsible%open]\n====\n`status`::\n(object) The final status of the analysis task.\n\n`final_repository_generation`::\n(integer) The repository generation at the end of the analysis. If there were\nany writes to the repository during the analysis then this value will be\ndifferent from the `generation` reported in the task status, and the analysis\nmay have detected spurious anomalies due to the concurrent writes, or may even\nhave failed to detect some anomalies in the repository contents.\n\n`total_anomalies`::\n(integer) The total number of anomalies detected during the analysis.\n\n`result`::\n(string) The final result of the analysis. If the repository contents appear to\nbe intact then this will be the string `pass`. If this field is missing, or\ncontains some other value, then the repository contents were not fully\nverified.\n\n====\n\n`exception`::\n(object) If the analysis encountered an exception which prevented it from\ncompleting successfully then this exception will be reported here.\n"
}