{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.101580",
        "size": 7106,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/behavioral-analytics-start.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "behavioral-analytics-start",
        "version": "8.15"
    },
    "doc": "[[behavioral-analytics-start]]\n=== Get started with Behavioral Analytics\n++++\n<titleabbrev>Get started</titleabbrev>\n++++\n\nYou can manage your analytics in the {kib} UI.\nGo to *Search > Behavioral Analytics* to get started.\n\nUsing behavioral analytics is a three-step process:\n\n1. *Create a <<behavioral-analytics-start-collections, collection>>*.\nA collection is a logical grouping of your analytics events.\n2. *Set up* a <<behavioral-analytics-start-ui-integration, UI integration>>.\n3. *Analyze* the data collected.\n\n[discrete]\n[[behavioral-analytics-start-collections]]\n==== Collections\n\n[NOTE]\n====\nThis guide focuses on using the Behavioral Analytics UI in {kib} to create and manage collections.\nYou can also use the <<behavioral-analytics-apis, Behavioral Analytics APIs>> to create, list, and delete collections, as well as post events to a collection.\n====\n\nA collection is a set of analytics events.\n\nThe first step in setting up behavioral analytics is to create a collection.\nTo do this in the {kib} UI:\n\n1. Go to *Search > Behavioral Analytics*.\n2. Select *Create collection*.\n3. Name your collection carefully, because you can't change it later.\n4. Select *Create*.\n\nWhen you create a collection we automatically create a {kibana-ref}/data-views.html[data view^] for the collection.\nThis allows {kib} to access your analytics data stored in {es}.\n\nThis means that once you integrate analytics into your application or website, you can immediately use {kibana-ref}/discover.html[Discover^] to view events, set filters, and create visualizations using {kibana-ref}/lens.html[Lens^].\n\nOnce you've created a collection, you need to complete your UI integration.\n\n[discrete]\n[[behavioral-analytics-start-ui-integration]]\n==== UI integration\n\n[NOTE]\n====\nDetailed integration instructions are provided in the {kib} UI.\nFind these in the *Integrate* tab under *Search > Behavioral Analytics >* _<your-collection>_.\n====\n\nChoose _one_ of the following integration options:\n\n* <<behavioral-analytics-start-ui-integration-js-embed>>\n* <<behavioral-analytics-start-ui-integration-js-client>>\n\nOnce embedded, users of the https://docs.elastic.co/search-ui/getting-started[Search UI^] JavaScript library can use the following integration for simplified event shipping:\n\n* <<behavioral-analytics-start-ui-integration-search-ui>>\n\n[discrete]\n[[behavioral-analytics-start-ui-integration-js-embed]]\n===== Option 1: Browser tracker\n\nAdd a JavaScript snippet to your website or application source files, using the https://github.com/elastic/behavioral-analytics-tracker/blob/main/packages/browser-tracker/README.md[Browser tracker^].\n\nThis approach is best for web browsers.\nNode apps and Search UI users shouldn't choose this option.\n\nInstructions for getting started are available in the {kib} UI.\n\n*Follow these steps*:\n\n1. Embed the behavioral analytics JavaScript snippet on every page of the website or application you\u2019d like to track.\n+\n[source,js]\n----\n<script src=\"https://cdn.jsdelivr.net/npm/@elastic/behavioral-analytics-browser-tracker@2\"></script>\n----\n// NOTCONSOLE\n\n2. Initialize the client to start tracking events.\nFor example:\n+\n[source,js]\n----\n<script type=\"text/javascript\">\nwindow.elasticAnalytics.createTracker({\n  endpoint: \"https://77561m8ivn1olhs5fczpls0xa85bueqt.us-west2.gcp.elastic-cloud.com:443\",\n  collectionName: \"my-collection\",\n  apiKey: \"########\",\n  // Optional: sampling rate percentage: 0-1, 0 = no events, 1 = all events\n  // sampling: 1,\n});\n</script>\n----\n// NOTCONSOLE\n\n3. Track search events, like result clicks and searches, by using the `trackSearch` or `trackSearchClick` methods.\n\n[discrete]\n[[behavioral-analytics-start-ui-integration-js-client]]\n===== Option 2: JavaScript tracker\n\nThe JavaScript client is available as an https://www.npmjs.com/package/@elastic/behavioral-analytics-javascript-tracker[NPM package^].\nWe recommend this approach if your application bundles JavaScript from NPM packages.\nThis is a good option for Node apps (server-side apps).\nAnalytics will be bundled with your app.\n\nThis allows the browser to optimize the JavaScript download.\n\nInstructions for getting started are also available in the {kib} UI.\n\n*Follow these steps* to get started:\n\n1. *Download* the behavioral analytics JavaScript tracker client from NPM:\n+\n`npm install @elastic/behavioral-analytics-javascript-tracker`\n\n2. *Import* the client into your application:\n+\n[source,js]\n----\nimport {\n  createTracker,\n  trackPageView,\n  trackSearch,\n  trackSearchClick\n} from \"@elastic/behavioral-analytics-javascript-tracker\";\n----\n// NOTCONSOLE\n\n3. *Initialize* the client to start tracking events:\n+\nUse the `createTracker` method to initialize the tracker with your configuration.\nYou can then use the tracker to send events to Behavioral Analytics.\n+\nExample initialization:\n+\n[source,js]\n----\ncreateTracker({\n  endpoint: \"https://77561m8ivn1olhs5fczpls0xa85bueqt.us-west2.gcp.elastic-cloud.com:443\",\n  collectionName: \"my-collection\",\n  apiKey: \"<api-key>\"\n});\n----\n// NOTCONSOLE\n+\n4. *Dispatch* Pageview and search behavior events.\n+\nOnce you have called `createTracker`, you can use the tracker methods such as `trackPageView` to send events to Behavioral Analytics.\n\nOnce integrated, you should be able to see page view events within the *Explorer* tab.\n\n[TIP]\n====\n*Session-based sampling*\n\nYou don't always want all sessions to be sent to your Elastic cluster.\nYou can introduce session-based sampling by adding a sampling parameter to the `createTracker` method.\n\nIf sampling is set to 1 (default), all sessions will send events.\nIf sampling is set to 0, no sessions will send events.\n\nHere's an example:\n\n[source,js]\n----\ncreateTracker({\n  // ... tracker settings\n  sampling: 0.3, // 30% of sessions will send events to the server\n});\n----\n// NOTCONSOLE\n\n====\n\n[discrete]\n[[behavioral-analytics-start-ui-integration-search-ui]]\n==== Search UI integration\n\nhttps://docs.elastic.co/search-ui[Search UI^] is a JavaScript library for building search experiences.\nUse the https://www.npmjs.com/package/@elastic/search-ui-analytics-plugin[Search UI analytics plugin^] available on NPM to integrate behavioral analytics with Search UI.\n\nThis integration enables you to dispatch events from Search UI to the behavioral analytics client.\nThe advantage of this integration is that you don't need to set up custom events.\nEvents fired by Search UI are dispatched automatically.\n\nTo use this integration, follow these steps:\n\n1. Embed Behavioral Analytics into your site using <<behavioral-analytics-start-ui-integration-js-embed>> *or* the <<behavioral-analytics-start-ui-integration-js-client>>.\n2. Install the https://www.npmjs.com/package/@elastic/search-ui-analytics-plugin[`@elastic/search-ui-analytics-plugin`^] by importing it into your app.\n3. Add the plugin to your Search UI configuration.\n\nSee the https://docs.elastic.co/search-ui/api/core/plugins/analytics-plugin[Search UI analytics plugin documentation^] for details.\n\n[discrete]\n[[behavioral-analytics-start-next-steps]]\n==== Next steps\n\n* Refer to the <<behavioral-analytics-api, analytics API reference>>.\n"
}