{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.849579",
        "size": 3212,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ldap-realm.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "ldap-realm",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ldap-realm]]\n=== LDAP user authentication\n\nYou can configure the {stack} {security-features} to communicate with a\nLightweight Directory Access Protocol (LDAP) server to authenticate users. See\n<<ldap-realm-configuration>>.\n\nLDAP stores users and groups hierarchically, similar to the way folders are\ngrouped in a file system. An LDAP directory's hierarchy is built from containers\nsuch as the _organizational unit_ (`ou`), _organization_ (`o`), and\n_domain component_ (`dc`).\n\nThe path to an entry is a _Distinguished Name_ (DN) that uniquely identifies a\nuser or group. User and group names typically have attributes such as a\n_common name_ (`cn`) or _unique ID_ (`uid`). A DN is specified as a string,\nfor example  `\"cn=admin,dc=example,dc=com\"` (white spaces are ignored).\n\nThe `ldap` realm supports two modes of operation, a user search mode\nand a mode with specific templates for user DNs.\n\n[[mapping-roles-ldap]]\n==== Mapping LDAP groups to roles\n\nAn integral part of a realm authentication process is to resolve the roles\nassociated with the authenticated user. Roles define the privileges a user has\nin the cluster.\n\nSince with the `ldap` realm the users are managed externally in the LDAP server,\nthe expectation is that their roles are managed there as well. In fact, LDAP\nsupports the notion of groups, which often represent user roles for different\nsystems in the organization.\n\nThe `ldap` realm enables you to map LDAP users to roles via their LDAP\ngroups or other metadata. This role mapping can be configured via the\n<<security-api-put-role-mapping,add role mapping API>> or by using a\nfile stored on each node. When a user authenticates with LDAP, the privileges\nfor that user are the union of all privileges defined by the roles to which\nthe user is mapped.\n\n[[ldap-realm-configuration]]\n==== Configuring an LDAP realm\n\ninclude::configuring-ldap-realm.asciidoc[]\n\n[[ldap-user-metadata]]\n==== User metadata in LDAP realms\nWhen a user is authenticated via an LDAP realm, the following properties are\npopulated in the user's _metadata_:\n\n|=======================\n| Field               | Description\n| `ldap_dn`           | The distinguished name of the user.\n| `ldap_groups`       | The distinguished name of each of the groups that were\n                        resolved for the user (regardless of whether those\n                        groups were mapped to a role).\n|=======================\n\nThis metadata is returned in the\n<<security-api-authenticate,authenticate API>>, and can be used with\n<<templating-role-query, templated queries>> in roles.\n\nAdditional fields can be included in the user's metadata by configuring\nthe `metadata` setting on the LDAP realm. This metadata is available for use\nwith the <<mapping-roles-api, role mapping API>> or in\n<<templating-role-query, templated role queries>>.\n\n[[ldap-load-balancing]]\n==== Load balancing and failover\nThe `load_balance.type` setting can be used at the realm level to configure how\nthe {security-features} should interact with multiple LDAP servers. The\n{security-features} support both failover and load balancing modes of operation.\n\nSee <<load-balancing>>.\n\ninclude::../securing-communications/tls-ldap.asciidoc[]\n"
}