{
    "meta": {
        "size": 10645,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-transform.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": true,
        "title": "put-transform",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[put-transform]]\n= Create {transform} API\n\n[subs=\"attributes\"]\n++++\n<titleabbrev>Create {transform}</titleabbrev>\n++++\n\nInstantiates a {transform}.\n\n[[put-transform-request]]\n== {api-request-title}\n\n`PUT _transform/<transform_id>`\n\n[[put-transform-prereqs]]\n== {api-prereq-title}\n\nRequires the following privileges:\n\n* cluster: `manage_transform` (the `transform_admin` built-in role grants this\n  privilege)\n* source indices: `read`, `view_index_metadata`\n* destination index: `read`, `create_index`, `index`. If a `retention_policy` is configured, the `delete` privilege is\n  also required.\n\n[[put-transform-desc]]\n== {api-description-title}\n\nThis API defines a {transform}, which copies data from source indices,\ntransforms it, and persists it into an entity-centric destination index. If you\nchoose to use the pivot method for your {transform}, the entities are defined by\nthe set of `group_by` fields in the `pivot` object. If you choose to use the\nlatest method, the entities are defined by the `unique_key` field values in the\n`latest` object.\n\nYou can also think of the destination index as a two-dimensional tabular data\nstructure (known as a {dataframe}). The ID for each document in the {dataframe}\nis generated from a hash of the entity, so there is a unique row per entity. For\nmore information, see <<transforms>>.\n\nWhen the {transform} is created, a series of validations occur to ensure its\nsuccess. For example, there is a check for the existence of the source indices\nand a check that the destination index is not part of the source index pattern.\nYou can use the `defer_validation` parameter to skip these checks.\n\nDeferred validations are always run when the {transform} is started, with the\nexception of privilege checks.\n\n[IMPORTANT]\n====\n\n* The {transform} remembers which roles the user that created it had at the time\nof creation and uses those same roles. If those roles do not have the required\nprivileges on the source and destination indices, the {transform} fails when it\nattempts unauthorized operations. If you provide\n<<http-clients-secondary-authorization,secondary authorization headers>>, those\ncredentials are used instead.\n* You must use {kib} or this API to create a {transform}. Do not add a\n{transform} directly into any `.transform-internal*` indices using the {es}\nindex API. If {es} {security-features} are enabled, do not give users any\nprivileges on `.transform-internal*` indices. If you used {transforms} prior to\n7.5, also do not give users any privileges on `.data-frame-internal*` indices.\n\n====\n\nYou must choose either the latest or pivot method for your {transform}; you\ncannot use both in a single {transform}.\n\n[[put-transform-path-parms]]\n== {api-path-parms-title}\n\n`<transform_id>`::\n(Required, string)\nIdentifier for the {transform}. This identifier can contain lowercase\nalphanumeric characters (a-z and 0-9), hyphens, and underscores. It has a 64\ncharacter limit and must start and end with alphanumeric characters.\n\n[[put-transform-query-parms]]\n== {api-query-parms-title}\n\n`defer_validation`::\n(Optional, Boolean) When `true`, deferrable validations are not run. This\nbehavior may be desired if the source index does not exist until after the\n{transform} is created.\n\n`timeout`::\n(Optional, time)\nPeriod to wait for a response. If no response is received before the timeout\nexpires, the request fails and returns an error. Defaults to `30s`.\n\n\n[role=\"child_attributes\"]\n[[put-transform-request-body]]\n== {api-request-body-title}\n\n`description`::\n  (Optional, string) Free text description of the {transform}.\n\n//Begin dest\n`dest`::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest]\n+\n.Properties of `dest`\n[%collapsible%open]\n====\n\n`index`:::\n(Required, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest-index]\n\n//Begin aliases\n`aliases`:::\n(Optional, array of objects)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest-aliases]\n+\n.Properties of `aliases`\n[%collapsible%open]\n=====\n\n`alias`::::\n(Required, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest-aliases-alias]\n\n`move_on_creation`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest-aliases-move-on-creation]\n\n=====\n//End aliases\n\n`pipeline`:::\n(Optional, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=dest-pipeline]\n====\n//End dest\n\n`frequency`::\n(Optional, <<time-units, time units>>)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=frequency]\n\n//Begin latest\n`latest`::\n(Required^*^, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-latest]\n+\n.Properties of `latest`\n[%collapsible%open]\n====\n\n`sort`:::\n(Required, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-sort]\n\n`unique_key`:::\n(Required, array of strings)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-unique-key]\n\n====\n//End latest\n\n//Begin _meta\n`_meta`::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-metadata]\n//End _meta\n\n//Begin pivot\n`pivot`::\n(Required^*^, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=pivot]\n+\n.Properties of `pivot`\n[%collapsible%open]\n====\n\n`aggregations` or `aggs`:::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=pivot-aggs]\n\n`group_by`:::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=pivot-group-by]\n====\n//End pivot\n\n//Begin retention policy\n`retention_policy`::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-retention]\n+\n.Properties of `retention_policy`\n[%collapsible%open]\n====\n`time`:::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-retention-time]\n+\n.Properties of `time`\n[%collapsible%open]\n=====\n`field`:::\n(Required, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-retention-time-field]\n\n`max_age`:::\n(Required, <<time-units, time units>>)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-retention-time-max-age]\n=====\n====\n//End retention policy\n\n//Begin settings\n`settings`::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings]\n+\n.Properties of `settings`\n[%collapsible%open]\n====\n`align_checkpoints`:::\n(Optional, boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-align-checkpoints]\n`dates_as_epoch_millis`:::\n(Optional, boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-dates-as-epoch-milli]\n`deduce_mappings`:::\n(Optional, boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-deduce-mappings]\n`docs_per_second`:::\n(Optional, float)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-docs-per-second]\n`max_page_search_size`:::\n(Optional, integer)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-max-page-search-size]\n`num_failure_retries`:::\n(Optional, integer)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-num-failure-retries]\n`unattended`:::\n(Optional, boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-settings-unattended]\n====\n//End settings\n\n//Begin source\n`source`::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=source-transforms]\n+\n.Properties of `source`\n[%collapsible%open]\n====\n\n`index`:::\n(Required, string or array)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=source-index-transforms]\n\n`query`:::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=source-query-transforms]\n\n`runtime_mappings`:::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=source-runtime-mappings-transforms]\n====\n//End source\n\n//Begin sync\n`sync`::\n(Optional, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=sync]\n+\n.Properties of `sync`\n[%collapsible%open]\n====\n\n//Begin time\n`time`:::\n(Required, object)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=sync-time]\n+\n.Properties of `time`\n[%collapsible%open]\n=====\n`delay`::::\n(Optional, <<time-units, time units>>)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=sync-time-delay]\n\n`field`::::\n(Required, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=sync-time-field]\n+\n--\nTIP: It is strongly recommended to use a field that contains the\n<<access-ingest-metadata,ingest timestamp>>. If you use a different field,\nyou might need to set the `delay` such that it accounts for data transmission\ndelays.\n\n--\n=====\n//End time\n====\n//End sync\n\n\n[[put-transform-example]]\n== {api-examples-title}\n\nThe following {transform} uses the `pivot` method:\n\n[source,console]\n--------------------------------------------------\nPUT _transform/ecommerce_transform1\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_ecommerce\",\n    \"query\": {\n      \"term\": {\n        \"geoip.continent_name\": {\n          \"value\": \"Asia\"\n        }\n      }\n    }\n  },\n  \"pivot\": {\n    \"group_by\": {\n      \"customer_id\": {\n        \"terms\": {\n          \"field\": \"customer_id\",\n          \"missing_bucket\": true\n        }\n      }\n    },\n    \"aggregations\": {\n      \"max_price\": {\n        \"max\": {\n          \"field\": \"taxful_total_price\"\n        }\n      }\n    }\n  },\n  \"description\": \"Maximum priced ecommerce data by customer_id in Asia\",\n  \"dest\": {\n    \"index\": \"kibana_sample_data_ecommerce_transform1\",\n    \"pipeline\": \"add_timestamp_pipeline\"\n  },\n  \"frequency\": \"5m\",\n  \"sync\": {\n    \"time\": {\n      \"field\": \"order_date\",\n      \"delay\": \"60s\"\n    }\n  },\n  \"retention_policy\": {\n    \"time\": {\n      \"field\": \"order_date\",\n      \"max_age\": \"30d\"\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:kibana_sample_data_ecommerce,add_timestamp_pipeline]\n\nWhen the {transform} is created, you receive the following results:\n\n[source,console-result]\n----\n{\n  \"acknowledged\" : true\n}\n----\n\nThe following {transform} uses the `latest` method:\n\n[source,console]\n--------------------------------------------------\nPUT _transform/ecommerce_transform2\n{\n  \"source\": {\n    \"index\": \"kibana_sample_data_ecommerce\"\n  },\n  \"latest\": {\n    \"unique_key\": [\"customer_id\"],\n    \"sort\": \"order_date\"\n  },\n  \"description\": \"Latest order for each customer\",\n  \"dest\": {\n    \"index\": \"kibana_sample_data_ecommerce_transform2\"\n  },\n  \"frequency\": \"5m\",\n  \"sync\": {\n    \"time\": {\n      \"field\": \"order_date\",\n      \"delay\": \"60s\"\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:kibana_sample_data_ecommerce]\n"
}