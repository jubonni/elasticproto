{
    "meta": {
        "size": 3925,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-polygon-query.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-geo-polygon-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-geo-polygon-query]]\n=== Geo-polygon query\n++++\n<titleabbrev>Geo-polygon</titleabbrev>\n++++\ndeprecated::[7.12,Use <<query-dsl-geo-shape-query>> instead where polygons are defined in GeoJSON or http://docs.opengeospatial.org/is/18-010r7/18-010r7.html[Well-Known Text (WKT)].]\n\nA query returning hits that only fall within a polygon of\npoints. Here is an example:\n\n[source,console]\n--------------------------------------------------\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_polygon\": {\n          \"person.location\": {\n            \"points\": [\n              { \"lat\": 40, \"lon\": -70 },\n              { \"lat\": 30, \"lon\": -80 },\n              { \"lat\": 20, \"lon\": -90 }\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[warning:Deprecated field [geo_polygon] used, replaced by [[geo_shape] query where polygons are defined in geojson or wkt]]\n\n[discrete]\n==== Query options\n\n[cols=\"<,<\",options=\"header\",]\n|=======================================================================\n|Option |Description\n|`_name` |Optional name field to identify the filter\n\n|`validation_method` |Set to `IGNORE_MALFORMED` to accept geo points with\ninvalid latitude or longitude, `COERCE` to try and infer correct latitude\nor longitude, or `STRICT` (default is `STRICT`).\n|=======================================================================\n\n[discrete]\n==== Allowed formats\n\n[discrete]\n===== Lat long as array\n\nFormat as `[lon, lat]`\n\nNote: the order of lon/lat here must\nconform with http://geojson.org/[GeoJSON].\n\n[source,console]\n--------------------------------------------------\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_polygon\": {\n          \"person.location\": {\n            \"points\": [\n              [ -70, 40 ],\n              [ -80, 30 ],\n              [ -90, 20 ]\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[warning:Deprecated field [geo_polygon] used, replaced by [[geo_shape] query where polygons are defined in geojson or wkt]]\n\n[discrete]\n===== Lat lon as string\n\nFormat in `lat,lon`.\n\n[source,console]\n--------------------------------------------------\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_polygon\": {\n          \"person.location\": {\n            \"points\": [\n              \"40, -70\",\n              \"30, -80\",\n              \"20, -90\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[warning:Deprecated field [geo_polygon] used, replaced by [[geo_shape] query where polygons are defined in geojson or wkt]]\n\n[discrete]\n===== Geohash\n\n[source,console]\n--------------------------------------------------\nGET /_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_polygon\": {\n          \"person.location\": {\n            \"points\": [\n              \"drn5x1g8cu2y\",\n              \"30, -80\",\n              \"20, -90\"\n            ]\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[warning:Deprecated field [geo_polygon] used, replaced by [[geo_shape] query where polygons are defined in geojson or wkt]]\n\n[discrete]\n==== `geo_point` type\n\nThe query *requires* the <<geo-point,`geo_point`>> type to be set on the\nrelevant field.\n\n[discrete]\n==== Ignore unmapped\n\nWhen set to `true` the `ignore_unmapped` option will ignore an unmapped field\nand will not match any documents for this query. This can be useful when\nquerying multiple indexes which might have different mappings. When set to\n`false` (the default value) the query will throw an exception if the field\nis not mapped.\n"
}