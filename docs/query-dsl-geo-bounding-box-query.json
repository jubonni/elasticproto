{
    "meta": {
        "size": 9601,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-bounding-box-query.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-geo-bounding-box-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-geo-bounding-box-query]]\n=== Geo-bounding box query\n++++\n<titleabbrev>Geo-bounding box</titleabbrev>\n++++\n\nMatches <<geo-point,`geo_point`>> and <<geo-shape,`geo_shape`>> values that\nintersect a bounding box.\n\n[discrete]\n[[geo-bounding-box-query-ex]]\n==== Example\nAssume the following documents are indexed:\n\n[source,console]\n--------------------------------------------------\nPUT /my_locations\n{\n  \"mappings\": {\n    \"properties\": {\n      \"pin\": {\n        \"properties\": {\n          \"location\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\nPUT /my_locations/_doc/1\n{\n  \"pin\": {\n    \"location\": {\n      \"lat\": 40.12,\n      \"lon\": -71.34\n    }\n  }\n}\n\nPUT /my_geoshapes\n{\n  \"mappings\": {\n    \"properties\": {\n      \"pin\": {\n        \"properties\": {\n          \"location\": {\n            \"type\": \"geo_shape\"\n          }\n        }\n      }\n    }\n  }\n}\n\nPUT /my_geoshapes/_doc/1\n{\n  \"pin\": {\n    \"location\": {\n      \"type\" : \"polygon\",\n      \"coordinates\" : [[[13.0 ,51.5], [15.0, 51.5], [15.0, 54.0], [13.0, 54.0], [13.0 ,51.5]]]\n    }\n  }\n}\n--------------------------------------------------\n// TESTSETUP\n\nUse a `geo_bounding_box` filter to match `geo_point` values that intersect a bounding\nbox. To define the box, provide geopoint values for two opposite corners.\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": {\n              \"lat\": 40.73,\n              \"lon\": -74.1\n            },\n            \"bottom_right\": {\n              \"lat\": 40.01,\n              \"lon\": -71.12\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nUse the same filter to match `geo_shape` values that intersect the bounding box:\n\n[source,console]\n--------------------------------------------------\nGET my_geoshapes/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": {\n              \"lat\": 40.73,\n              \"lon\": -74.1\n            },\n            \"bottom_right\": {\n              \"lat\": 40.01,\n              \"lon\": -71.12\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nTo match both `geo_point` and `geo_shape` values, search both indices:\n\n[source,console]\n--------------------------------------------------\nGET my_locations,my_geoshapes/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": {\n              \"lat\": 40.73,\n              \"lon\": -74.1\n            },\n            \"bottom_right\": {\n              \"lat\": 40.01,\n              \"lon\": -71.12\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n==== Query options\n\n[cols=\"<,<\",options=\"header\",]\n|=======================================================================\n|Option |Description\n|`_name` |Optional name field to identify the filter\n\n|`validation_method` |Set to `IGNORE_MALFORMED` to\naccept geo points with invalid latitude or longitude, set to\n`COERCE` to also try to infer correct latitude or longitude. (default is `STRICT`).\n\n|=======================================================================\n\n[[query-dsl-geo-bounding-box-query-accepted-formats]]\n[discrete]\n==== Accepted formats\n\nIn much the same way the `geo_point` type can accept different\nrepresentations of the geo point, the filter can accept it as well:\n\n[discrete]\n===== Lat lon as properties\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": {\n              \"lat\": 40.73,\n              \"lon\": -74.1\n            },\n            \"bottom_right\": {\n              \"lat\": 40.01,\n              \"lon\": -71.12\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Lat lon as array\n\nFormat in `[lon, lat]`, note, the order of lon/lat here in order to\nconform with http://geojson.org/[GeoJSON].\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": [ -74.1, 40.73 ],\n            \"bottom_right\": [ -71.12, 40.01 ]\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Lat lon as string\n\nFormat in `lat,lon`.\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": \"POINT (-74.1 40.73)\",\n            \"bottom_right\": \"POINT (-71.12 40.01)\"\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Bounding box as well-known text (WKT)\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"wkt\": \"BBOX (-74.1, -71.12, 40.73, 40.01)\"\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Geohash\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top_left\": \"dr5r9ydj2y73\",\n            \"bottom_right\": \"drj7teegpus6\"\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\nWhen geohashes are used to specify the bounding the edges of the\nbounding box, the geohashes are treated as rectangles. The bounding\nbox is defined in such a way that its top left corresponds to the top\nleft corner of the geohash specified in the `top_left` parameter and\nits bottom right is defined as the bottom right of the geohash\nspecified in the `bottom_right` parameter.\n\nIn order to specify a bounding box that would match entire area of a\ngeohash the geohash can be specified in both `top_left` and\n`bottom_right` parameters:\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"geo_bounding_box\": {\n      \"pin.location\": {\n        \"top_left\": \"dr\",\n        \"bottom_right\": \"dr\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nIn this example, the geohash `dr` will produce the bounding box\nquery with the top left corner at `45.0,-78.75` and the bottom right\ncorner at `39.375,-67.5`.\n\n[discrete]\n==== Vertices\n\nThe vertices of the bounding box can either be set by `top_left` and\n`bottom_right` or by `top_right` and `bottom_left` parameters. Instead of \nsetting the values pairwise, one can use the simple names `top`, `left`, \n`bottom` and `right` to set the values separately.\n\n[source,console]\n--------------------------------------------------\nGET my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"pin.location\": {\n            \"top\": 40.73,\n            \"left\": -74.1,\n            \"bottom\": 40.01,\n            \"right\": -71.12\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n==== Multi location per document\n\nThe filter can work with multiple locations / points per document. Once\na single location / point matches the filter, the document will be\nincluded in the filter\n\n[discrete]\n==== Ignore unmapped\n\nWhen set to `true` the `ignore_unmapped` option will ignore an unmapped field\nand will not match any documents for this query. This can be useful when\nquerying multiple indexes which might have different mappings. When set to\n`false` (the default value) the query will throw an exception if the field\nis not mapped.\n\n[discrete]\n==== Notes on precision\n\nGeopoints have limited precision and are always rounded down during index time.\nDuring the query time, upper boundaries of the bounding boxes are rounded down,\nwhile lower boundaries are rounded up. As a result, the points along on the\nlower bounds (bottom and left edges of the bounding box) might not make it into\nthe bounding box due to the rounding error. At the same time points alongside\nthe upper bounds (top and right edges) might be selected by the query even if\nthey are located slightly outside the edge. The rounding error should be less\nthan 4.20e-8 degrees on the latitude and less than 8.39e-8 degrees on the\nlongitude, which translates to less than 1cm error even at the equator.\n\nGeoshapes also have limited precision due to rounding. Geoshape edges along the\nbounding box's bottom and left edges may not match a `geo_bounding_box` query.\nGeoshape edges slightly outside the box's top and right edges may still match\nthe query.\n"
}