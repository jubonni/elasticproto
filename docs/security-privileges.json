{
    "meta": {
        "size": 18041,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-privileges.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "security-privileges",
        "version": "8.15"
    },
    "doc": "[[security-privileges]]\n=== Security privileges\n:frontmatter-description: A list of privileges that can be assigned to user roles.\n:frontmatter-tags-products: [elasticsearch]\n:frontmatter-tags-content-type: [reference]\n:frontmatter-tags-user-goals: [secure]\n\nThis section lists the privileges that you can assign to a role.\n\n[[privileges-list-cluster]]\n==== Cluster privileges\n\n[horizontal]\n`all`::\nAll cluster administration operations, like snapshotting, node shutdown/restart,\nsettings update, rerouting, or managing users and roles.\n\n`cancel_task`::\nPrivileges to cancel tasks and delete async searches.\nSee <<delete-async-search,delete async search>> API for more informations.\n\n`create_snapshot`::\nPrivileges to create snapshots for existing repositories. Can also list and view\ndetails on existing repositories and snapshots.\n+\nThis privilege is not available in {serverless-full}.\n\n`cross_cluster_replication`::\nPrivileges to connect to <<remote-clusters-api-key,remote clusters configured with the API key based model>>\nfor cross-cluster replication.\n+\n--\nThis privilege is not available in {serverless-full}.\n\nNOTE: This privilege should _not_ be directly granted. It is used internally by\n<<security-api-create-cross-cluster-api-key>> and <<security-api-update-cross-cluster-api-key>>\nto manage cross-cluster API keys.\n--\n\n`cross_cluster_search`::\nPrivileges to connect to <<remote-clusters-api-key,remote clusters configured with the API key based model>>\nfor cross-cluster search.\n+\n--\nThis privilege is not available in {serverless-full}.\n\nNOTE: This privilege should _not_ be directly granted. It is used internally by\n<<security-api-create-cross-cluster-api-key>> and <<security-api-update-cross-cluster-api-key>>\nto manage cross-cluster API keys.\n--\n\n`grant_api_key`::\nPrivileges to create {es} API keys on behalf of other users.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage`::\nBuilds on `monitor` and adds cluster operations that change values in the cluster.\nThis includes snapshotting, updating settings, and rerouting. It also includes\nobtaining snapshot and restore status. This privilege does not include the\nability to manage security.\n\n`manage_api_key`::\nAll security-related operations on {es} REST API keys including\n<<security-api-create-api-key,creating new API keys>>,\n<<security-api-get-api-key,retrieving information about API keys>>,\n<<security-api-query-api-key,querying API keys>>,\n<<security-api-update-api-key,updating API key>>,\n<<security-api-bulk-update-api-keys,bulk updating API keys>>, and\n<<security-api-invalidate-api-key,invalidating API keys>>.\n+\n--\n[NOTE]\n======\n\n* When you create new API keys, they will always be owned by the authenticated\nuser.\n* When you have this privilege, you can invalidate your own API keys and those\nowned by other users.\n\n======\n\n--\n\n`manage_autoscaling`::\nAll operations related to managing autoscaling policies.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_ccr`::\nAll {ccr} operations related to managing follower indices and auto-follow\npatterns. It also includes the authority to grant the privileges necessary to\nmanage follower indices and auto-follow patterns. This privilege is necessary\nonly on clusters that contain follower indices.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_data_frame_transforms`::\nAll operations related to managing {transforms}.\ndeprecated[7.5] Use `manage_transform` instead.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_data_stream_global_retention`::\nThis privilege has no effect.deprecated[8.16]\n\n`manage_enrich`::\nAll operations related to managing and executing enrich policies.\n\n`manage_ilm`::\nAll {ilm} operations related to managing policies.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_index_templates`::\nAll operations on index templates.\n\n`manage_inference`::\nAll operations related to managing {infer}.\n\n`manage_ingest_pipelines`::\nAll operations on ingest pipelines.\n\n`manage_logstash_pipelines`::\nAll operations on logstash pipelines.\n\n`manage_ml`::\nAll {ml} operations, such as creating and deleting {dfeeds}, jobs, and model\nsnapshots.\n+\n--\nNOTE: {dfeeds-cap} that were created prior to version 6.2 or created when\n{security-features} were disabled run as a system user with elevated privileges,\nincluding permission to read all indices. Newer {dfeeds} run with the security\nroles of the user who created or updated them.\n\n--\n\n`manage_oidc`::\nEnables the use of {es} APIs\n(<<security-api-oidc-prepare-authentication,OpenID connect prepare authentication>>,\n<<security-api-oidc-authenticate,OpenID connect authenticate>>, and\n<<security-api-oidc-logout,OpenID connect logout>>)\nto initiate and manage OpenID Connect authentication on behalf of other users.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_own_api_key`::\nAll security-related operations on {es} API keys that are owned by the current\nauthenticated user. The operations include\n<<security-api-create-api-key,creating new API keys>>,\n<<security-api-get-api-key,retrieving information about API keys>>,\n<<security-api-query-api-key,querying API keys>>,\n<<security-api-update-api-key,updating API key>>,\n<<security-api-bulk-update-api-keys,bulk updating API keys>>, and\n<<security-api-invalidate-api-key,invalidating API keys>>.\n\n`manage_pipeline`::\nAll operations on ingest pipelines.\n\n`manage_rollup`::\nAll rollup operations, including creating, starting, stopping and deleting\nrollup jobs.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_saml`::\nEnables the use of internal {es} APIs to initiate and manage SAML authentication\non behalf of other users.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_search_application`::\nAll CRUD operations on <<search-application-apis, search applications>>.\n\n`manage_search_query_rules`::\nAll CRUD operations on <<query-rules-apis, query rules>>.\n\n`manage_search_synonyms`::\nAll synonyms management operations on <<synonyms-apis>>.\n\n`manage_security`::\nAll security-related operations such as CRUD operations on users and roles and\ncache clearing.\n\n`manage_service_account`::\nAll security-related operations on {es} service accounts including\n<<security-api-get-service-accounts>>,\n<<security-api-create-service-token>>, <<security-api-delete-service-token>>,\nand <<security-api-get-service-credentials>>.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_slm`::\nAll {slm} ({slm-init}) actions, including creating and updating policies and\nstarting and stopping {slm-init}.\n+\nThis privilege is not available in {serverless-full}.\n+\ndeprecated:[8.15] Also grants the permission to start and stop {Ilm}, using\nthe {ref}/ilm-start.html[ILM start] and {ref}/ilm-stop.html[ILM stop] APIs.\nIn a future major release, this privilege will not grant any {Ilm} permissions.\n\n`manage_token`::\nAll security-related operations on tokens that are generated by the {es} Token\nService.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_transform`::\nAll operations related to managing {transforms}.\n\n`manage_watcher`::\nAll watcher operations, such as putting watches, executing, activate or acknowledging.\n+\n--\nThis privilege is not available in {serverless-full}.\n\nNOTE: Watches that were created prior to version 6.1 or created when the\n{security-features} were disabled run as a system user with elevated privileges,\nincluding permission to read and write all indices. Newer watches run with the\nsecurity roles of the user who created or updated them.\n--\n\n`monitor`::\nAll cluster read-only operations, like cluster health and state, hot threads,\nnode info, node and cluster stats, and pending cluster tasks.\n\n`monitor_data_stream_global_retention`::\nThis privilege has no effect.deprecated[8.16]\n\n`monitor_enrich`::\nAll read-only operations related to managing and executing enrich policies.\n\n`monitor_inference`::\nAll read-only operations related to {infer}.\n\n`monitor_ml`::\nAll read-only {ml} operations, such as getting information about {dfeeds}, jobs,\nmodel snapshots, or results.\n\n`monitor_rollup`::\nAll read-only rollup operations, such as viewing the list of historical and\ncurrently running rollup jobs and their capabilities.\n+\nThis privilege is not available in {serverless-full}.\n\n`monitor_snapshot`::\nPrivileges to list and view details on existing repositories and snapshots.\n+\nThis privilege is not available in {serverless-full}.\n\n`monitor_text_structure`::\nAll read-only operations related to the <<find-structure,find structure API>>.\n+\nThis privilege is not available in {serverless-full}.\n\n`monitor_transform`::\nAll read-only operations related to {transforms}.\n\n`monitor_watcher`::\nAll read-only watcher operations, such as getting a watch and watcher stats.\n+\nThis privilege is not available in {serverless-full}.\n\n`read_ccr`::\nAll read-only {ccr} operations, such as getting information about indices and\nmetadata for leader indices in the cluster. It also includes the authority to\ncheck whether users have the appropriate privileges to follow leader indices.\nThis privilege is necessary only on clusters that contain leader indices.\n+\nThis privilege is not available in {serverless-full}.\n\n`read_ilm`::\nAll read-only {Ilm} operations, such as getting policies and checking the\nstatus of {Ilm}\n+\nThis privilege is not available in {serverless-full}.\n\n`read_pipeline`::\nRead-only access to ingest pipeline (get, simulate).\n\n`read_slm`::\nAll read-only {slm-init} actions, such as getting policies and checking the\n{slm-init} status.\n+\nThis privilege is not available in {serverless-full}.\n+\ndeprecated:[8.15] Also grants the permission to get the {Ilm} status, using\nthe {ref}/ilm-get-status.html[ILM get status API]. In a future major release,\nthis privilege will not grant any {Ilm} permissions.\n\n`read_security`::\nAll read-only security-related operations, such as getting users, user profiles,\n{es} API keys, {es} service accounts, roles and role mappings.\nAllows <<security-api-query-api-key,querying>> and <<security-api-get-api-key,retrieving information>>\non all {es} API keys.\n\n`transport_client`::\nAll privileges necessary for a transport client to connect. Required by the remote\ncluster to enable <<remote-clusters,{ccs}>>.\n+\nThis privilege is not available in {serverless-full}.\n\n[[privileges-list-indices]]\n==== Indices privileges\n\n[horizontal]\n`all`::\nAny action on an index or data stream.\n\n`auto_configure`::\nPermits auto-creation of indices and data streams. An auto-create action is the\nresult of an <<docs-index_,index>> or <<docs-bulk,bulk>> request that targets a\nnon-existent index or data stream rather than an explicit\n<<indices-create-index,create index>> or\n<<indices-create-data-stream,create data stream>> request. Also permits\nauto-update of mappings on indices and data streams if they do not contradict\nexisting mappings. An auto-update mapping action is the result of an index or\nbulk request on an index or data stream that contains new fields that may\nbe mapped rather than an explicit <<indices-put-mapping,update mapping>> request.\n\n`create`::\nPrivilege to index documents.\n+\ndeprecated:[8.0] Also grants the permission to update the index mapping (but\nnot the data streams mapping), using\nthe {ref}/indices-put-mapping.html[updating mapping API] or by relying on\n{ref}/dynamic-mapping.html[dynamic field mapping]. In a future major release,\nthis privilege will not grant any mapping update permissions.\n+\n--\nNOTE: This privilege does not restrict the index operation to the creation\nof documents but instead restricts API use to the index API. The index API\nallows a user to overwrite a previously indexed document. See the `create_doc`\nprivilege for an alternative.\n\n--\n\n`create_doc`::\nPrivilege to index documents.\nIt does not grant the permission to update or overwrite existing documents.\n+\ndeprecated:[8.0] Also grants the permission to update the index mapping (but\nnot the data streams mapping), using\nthe {ref}/indices-put-mapping.html[updating mapping API] or by relying on\n{ref}/dynamic-mapping.html[dynamic field mapping]. In a future major release,\nthis privilege will not grant any mapping update permissions.\n+\n--\n[NOTE]\n====\n\nThis privilege relies on the `op_type` of indexing requests (<<docs-index_>> and\n<<docs-bulk>>). When ingesting documents as a user who has the `create_doc`\nprivilege (and no higher privilege such as `index` or `write`), you must ensure that\n'op_type' is set to 'create' through one of the following:\n\n* Explicitly setting the `op_type` in the index or bulk APIs\n* Using the `_create` endpoint for the index API\n* Creating a document with an auto-generated `_id`\n====\n\n--\n\n`create_index`::\nPrivilege to create an index or data stream. A create index request may contain\naliases to be added to the index once created. In that case the request\nrequires the `manage` privilege as well, on both the index and the aliases\nnames.\n\n`cross_cluster_replication`::\nPrivileges to perform cross-cluster replication for indices located on\n<<remote-clusters-api-key,remote clusters configured with the API key based model>>.\nThis privilege should only be used for\nthe `privileges` field of <<roles-remote-indices-priv,remote indices privileges>>.\n+\nThis privilege is not available in {serverless-full}.\n\n`cross_cluster_replication_internal`::\nPrivileges to perform supporting actions for cross-cluster replication from\n<<remote-clusters-api-key,remote clusters configured with the API key based model>>.\n+\n--\nThis privilege is not available in {serverless-full}.\n\nNOTE: This privilege should _not_ be directly granted. It is used internally by\n<<security-api-create-cross-cluster-api-key>> and <<security-api-update-cross-cluster-api-key>>\nto manage cross-cluster API keys.\n--\n\n`delete`::\nPrivilege to delete documents.\n\n`delete_index`::\nPrivilege to delete an index or data stream.\n\n`index`::\nPrivilege to index and update documents.\n+\ndeprecated:[8.0] Also grants the permission to update the index mapping (but\nnot the data streams mapping), using\nthe {ref}/indices-put-mapping.html[updating mapping API] or by relying on\n{ref}/dynamic-mapping.html[dynamic field mapping]. In a future major release,\nthis privilege will not grant any mapping update permissions.\n\n`maintenance`::\nPermits refresh, flush, synced flush and force merge index administration operations.\nNo privilege to read or write index data or otherwise manage the index.\n\n`manage`::\nAll `monitor` privileges plus index and data stream administration (aliases,\nanalyze, cache clear, close, delete, exists, flush, mapping, open, field capabilities,\nforce merge, refresh, settings, search shards, validate query).\n\n`manage_data_stream_lifecycle`::\nAll <<data-stream-lifecycle, Data stream lifecycle>> operations relating to reading and managing the built-in lifecycle of a data stream.\nThis includes operations such as adding and removing a lifecycle from a data stream.\n\n`manage_follow_index`::\nAll actions that are required to manage the lifecycle of a follower index, which\nincludes creating a follower index, closing it, and converting it to a regular\nindex. This privilege is necessary only on clusters that contain follower indices.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_ilm`::\nAll {Ilm} operations relating to managing the execution of policies of an index\nor data stream. This includes operations such as retrying policies and removing\na policy from an index or data stream.\n+\nThis privilege is not available in {serverless-full}.\n\n`manage_leader_index`::\nAll actions that are required to manage the lifecycle of a leader index, which\nincludes <<ccr-post-forget-follower,forgetting a follower>>. This\nprivilege is necessary only on clusters that contain leader indices.\n+\nThis privilege is not available in {serverless-full}.\n\n`monitor`::\nAll actions that are required for monitoring (recovery, segments info, index\nstats and status).\n\n`read`::\nRead-only access to actions (count, explain, get, mget, get indexed scripts,\nmore like this, multi percolate/search/termvector, percolate, scroll,\nclear_scroll, search, suggest, tv).\n\n`read_cross_cluster`::\nRead-only access to the search action from a <<remote-clusters,remote cluster>>.\n+\nThis privilege is not available in {serverless-full}.\n\n`view_index_metadata`::\nRead-only access to index and data stream metadata (aliases, exists,\nfield capabilities, field mappings, get index, get data stream, ilm explain,\nmappings, search shards, settings, validate query).\nThis privilege is available for use primarily by {kib} users.\n\n`write`::\nPrivilege to perform all write operations to documents, which includes the\npermission to index, update, and delete documents as well as performing bulk\noperations, while also allowing to dynamically update the index mapping.\n+\ndeprecated:[8.0] It also grants the permission to update the index mapping (but\nnot the data streams mapping), using the {ref}/indices-put-mapping.html[updating mapping API].\nThis will be retracted in a future major release.\n\n\n==== Run as privilege\n\nThe `run_as` permission enables an authenticated user to submit requests on\nbehalf of another user. The value can be a user name or a comma-separated list\nof user names. (You can also specify users as an array of strings or a YAML\nsequence.) For more information, see\n<<run-as-privilege>>.\n\nThis privilege is not available in {serverless-full}.\n\n[[application-privileges]]\n==== Application privileges\n\nApplication privileges are managed within {es} and can be retrieved with the\n<<security-api-has-privileges,has privileges API>> and the\n<<security-api-get-privileges,get application privileges API>>. They do\nnot, however, grant access to any actions or resources within {es}. Their\npurpose is to enable applications to represent and store their own privilege\nmodels within {es} roles.\n\nTo create application privileges, use the\n<<security-api-put-privileges,add application privileges API>>. You can\nthen associate these application privileges with roles, as described in\n<<defining-roles>>.\n"
}