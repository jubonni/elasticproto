{
    "meta": {
        "timestamp": "2024-11-01T03:07:08.795301",
        "size": 2430,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/binary.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "binary",
        "version": "8.15"
    },
    "doc": "[[binary]]\n=== Binary field type\n++++\n<titleabbrev>Binary</titleabbrev>\n++++\n\nThe `binary` type accepts a binary value as a\n{wikipedia}/Base64[Base64] encoded string. The field is not\nstored by default and is not searchable:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"name\": {\n        \"type\": \"text\"\n      },\n      \"blob\": {\n        \"type\": \"binary\"\n      }\n    }\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  \"name\": \"Some binary blob\",\n  \"blob\": \"U29tZSBiaW5hcnkgYmxvYg==\" <1>\n}\n--------------------------------------------------\n\n<1> The Base64 encoded binary value must not have embedded newlines `\\n`.\n\n[[binary-params]]\n==== Parameters for `binary` fields\n\nThe following parameters are accepted by `binary` fields:\n\n[horizontal]\n\n<<doc-values,`doc_values`>>::\n\n    Should the field be stored on disk in a column-stride fashion, so that it\n    can later be used for sorting, aggregations, or scripting? Accepts `true`\n    or `false` (default). This parameter will be automatically set to `true` for TSDB indices\n(indices that have `index.mode` set to `time_series`).\n\n<<mapping-store,`store`>>::\n\n    Whether the field value should be stored and retrievable separately from\n    the <<mapping-source-field,`_source`>> field. Accepts `true` or `false`\n    (default).\n\n[[binary-synthetic-source]]\n==== Synthetic `_source`\n\nIMPORTANT: Synthetic `_source` is Generally Available only for TSDB indices\n(indices that have `index.mode` set to `time_series`). For other indices\nsynthetic `_source` is in technical preview. Features in technical preview may\nbe changed or removed in a future release. Elastic will work to fix\nany issues, but features in technical preview are not subject to the support SLA\nof official GA features.\n\nSynthetic source may sort `binary` values in order of their byte representation. For example:\n[source,console,id=synthetic-source-binary-example]\n----\nPUT idx\n{\n  \"settings\": {\n    \"index\": {\n      \"mapping\": {\n        \"source\": {\n          \"mode\": \"synthetic\"\n        }\n      }\n    }\n  },\n  \"mappings\": {\n    \"properties\": {\n      \"binary\": { \"type\": \"binary\", \"doc_values\": true }\n    }\n  }\n}\nPUT idx/_doc/1\n{\n  \"binary\": [\"IAA=\", \"EAA=\"]\n}\n----\n// TEST[s/$/\\nGET idx\\/_doc\\/1?filter_path=_source\\n/]\n\nWill become:\n[source,console-result]\n----\n{\n  \"binary\": [\"EAA=\", \"IAA=\"]\n}\n----\n// TEST[s/^/{\"_source\":/ s/\\n$/}/]\n"
}