{
    "meta": {
        "size": 5167,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-flatten-graph-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "analysis-flatten-graph-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-flatten-graph-tokenfilter]]\n=== Flatten graph token filter\n++++\n<titleabbrev>Flatten graph</titleabbrev>\n++++\n\nFlattens a <<token-graphs,token graph>> produced by a graph token filter, such\nas <<analysis-synonym-graph-tokenfilter,`synonym_graph`>> or\n<<analysis-word-delimiter-graph-tokenfilter,`word_delimiter_graph`>>.\n\nFlattening a token graph containing\n<<token-graphs-multi-position-tokens,multi-position tokens>> makes the graph\nsuitable for <<analysis-index-search-time,indexing>>. Otherwise, indexing does\nnot support token graphs containing multi-position tokens.\n\n[WARNING]\n====\nFlattening graphs is a lossy process.\n\nIf possible, avoid using the `flatten_graph` filter. Instead, use graph token\nfilters in <<analysis-index-search-time,search analyzers>> only. This eliminates\nthe need for the `flatten_graph` filter.\n====\n\nThe `flatten_graph` filter uses Lucene's\n{lucene-analysis-docs}/core/FlattenGraphFilter.html[FlattenGraphFilter].\n\n[[analysis-flatten-graph-tokenfilter-analyze-ex]]\n==== Example\n\nTo see how the `flatten_graph` filter works, you first need to produce a token\ngraph containing multi-position tokens.\n\nThe following <<indices-analyze,analyze API>> request uses the `synonym_graph`\nfilter to add `dns` as a multi-position synonym for `domain name system` in the\ntext `domain name system is fragile`:\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"synonym_graph\",\n      \"synonyms\": [ \"dns, domain name system\" ]\n    }\n  ],\n  \"text\": \"domain name system is fragile\"\n}\n----\n\nThe filter produces the following token graph with `dns` as a multi-position\ntoken.\n\nimage::images/analysis/token-graph-dns-synonym-ex.svg[align=\"center\"]\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"dns\",\n      \"start_offset\": 0,\n      \"end_offset\": 18,\n      \"type\": \"SYNONYM\",\n      \"position\": 0,\n      \"positionLength\": 3\n    },\n    {\n      \"token\": \"domain\",\n      \"start_offset\": 0,\n      \"end_offset\": 6,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"name\",\n      \"start_offset\": 7,\n      \"end_offset\": 11,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"system\",\n      \"start_offset\": 12,\n      \"end_offset\": 18,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"is\",\n      \"start_offset\": 19,\n      \"end_offset\": 21,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 3\n    },\n    {\n      \"token\": \"fragile\",\n      \"start_offset\": 22,\n      \"end_offset\": 29,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 4\n    }\n  ]\n}\n----\n////\n\nIndexing does not support token graphs containing multi-position tokens. To make\nthis token graph suitable for indexing, it needs to be flattened.\n\nTo flatten the token graph, add the `flatten_graph` filter after the\n`synonym_graph` filter in the previous analyze API request.\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"synonym_graph\",\n      \"synonyms\": [ \"dns, domain name system\" ]\n    },\n    \"flatten_graph\"\n  ],\n  \"text\": \"domain name system is fragile\"\n}\n----\n\nThe filter produces the following flattened token graph, which is suitable for\nindexing.\n\nimage::images/analysis/token-graph-dns-invalid-ex.svg[align=\"center\"]\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"dns\",\n      \"start_offset\": 0,\n      \"end_offset\": 18,\n      \"type\": \"SYNONYM\",\n      \"position\": 0,\n      \"positionLength\": 3\n    },\n    {\n      \"token\": \"domain\",\n      \"start_offset\": 0,\n      \"end_offset\": 6,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"name\",\n      \"start_offset\": 7,\n      \"end_offset\": 11,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"system\",\n      \"start_offset\": 12,\n      \"end_offset\": 18,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"is\",\n      \"start_offset\": 19,\n      \"end_offset\": 21,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 3\n    },\n    {\n      \"token\": \"fragile\",\n      \"start_offset\": 22,\n      \"end_offset\": 29,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 4\n    }\n  ]\n}\n----\n////\n\n[[analysis-keyword-marker-tokenfilter-analyzer-ex]]\n==== Add to an analyzer\n\nThe following <<indices-create-index,create index API>> request uses the\n`flatten_graph` token filter to configure a new\n<<analysis-custom-analyzer,custom analyzer>>.\n\nIn this analyzer, a custom `word_delimiter_graph` filter produces token graphs\ncontaining catenated, multi-position tokens. The `flatten_graph` filter flattens\nthese token graphs, making them suitable for indexing.\n\n[source,console]\n----\nPUT /my-index-000001\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"my_custom_index_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"filter\": [\n            \"my_custom_word_delimiter_graph_filter\",\n            \"flatten_graph\"\n          ]\n        }\n      },\n      \"filter\": {\n        \"my_custom_word_delimiter_graph_filter\": {\n          \"type\": \"word_delimiter_graph\",\n          \"catenate_all\": true\n        }\n      }\n    }\n  }\n}\n----"
}