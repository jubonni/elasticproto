{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.275580",
        "size": 2973,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/rank-features.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "rank-features",
        "version": "8.15"
    },
    "doc": "[[rank-features]]\n=== Rank features field type\n++++\n<titleabbrev>Rank features</titleabbrev>\n++++\n\nA `rank_features` field can index numeric feature vectors, so that they can\nlater be used to boost documents in queries with a\n<<query-dsl-rank-feature-query,`rank_feature`>> query.\n\nIt is analogous to the <<rank-feature,`rank_feature`>> data type but is better suited\nwhen the list of features is sparse so that it wouldn't be reasonable to add\none field to the mappings for each of them.\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"topics\": {\n        \"type\": \"rank_features\" <1>\n      },\n      \"negative_reviews\" : {\n        \"type\": \"rank_features\",\n        \"positive_score_impact\": false <2>\n      }\n    }\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  \"topics\": { <3>\n    \"politics\": 20,\n    \"economics\": 50.8\n  },\n  \"negative_reviews\": {\n    \"1star\": 10,\n    \"2star\": 100\n  }\n}\n\nPUT my-index-000001/_doc/2\n{\n  \"topics\": {\n    \"politics\": 5.2,\n    \"sports\": 80.1\n  },\n  \"negative_reviews\": {\n    \"1star\": 1,\n    \"2star\": 10\n  }\n}\n\nGET my-index-000001/_search\n{\n  \"query\": { <4>\n    \"rank_feature\": {\n      \"field\": \"topics.politics\"\n    }\n  }\n}\n\nGET my-index-000001/_search\n{\n  \"query\": { <5>\n    \"rank_feature\": {\n      \"field\": \"negative_reviews.1star\"\n    }\n  }\n}\n\nGET my-index-000001/_search\n{\n  \"query\": { <6>\n    \"term\": {\n      \"topics\": \"economics\"\n    }\n  }\n}\n--------------------------------------------------\n\n<1> Rank features fields must use the `rank_features` field type\n<2> Rank features that correlate negatively with the score need to declare it\n<3> Rank features fields must be a hash with string keys and strictly positive numeric values\n<4> This query ranks documents by how much they are about the \"politics\" topic.\n<5> This query ranks documents inversely to the number of \"1star\" reviews they received.\n<6> This query returns documents that store the \"economics\" feature in the \"topics\" field.\n\n\nNOTE: `rank_features` fields only support single-valued features and strictly\npositive values. Multi-valued fields and zero or negative values will be rejected.\n\nNOTE: `rank_features` fields do not support sorting or aggregating and may\nonly be queried using <<query-dsl-rank-feature-query,`rank_feature`>> or <<query-dsl-term-query, `term`>> queries.\n\nNOTE: <<query-dsl-term-query, `term`>> queries on `rank_features` fields are scored by multiplying the matched\nstored feature value by the provided `boost`.\n\nNOTE: `rank_features` fields only preserve 9 significant bits for the\nprecision, which translates to a relative error of about 0.4%.\n\nRank features that correlate negatively with the score should set\n`positive_score_impact` to `false` (defaults to `true`). This will be used by\nthe <<query-dsl-rank-feature-query,`rank_feature`>> query to modify the scoring formula\nin such a way that the score decreases with the value of the feature instead of\nincreasing.\n"
}