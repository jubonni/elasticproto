{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.737069",
        "size": 3428,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-multiplexer-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analysis-multiplexer-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-multiplexer-tokenfilter]]\n=== Multiplexer token filter\n++++\n<titleabbrev>Multiplexer</titleabbrev>\n++++\n\nA token filter of type `multiplexer` will emit multiple tokens at the same position,\neach version of the token having been run through a different filter. Identical\noutput tokens at the same position will be removed.\n\nWARNING: If the incoming token stream has duplicate tokens, then these will also be\nremoved by the multiplexer\n\n[discrete]\n=== Options\n[horizontal]\nfilters:: a list of token filters to apply to incoming tokens. These can be any\n  token filters defined elsewhere in the index mappings. Filters can be chained\n  using a comma-delimited string, so for example `\"lowercase, porter_stem\"` would\n  apply the `lowercase` filter and then the `porter_stem` filter to a single token.\n\nWARNING: <<analysis-shingle-tokenfilter,Shingle>> or multi-word synonym token filters will not function normally\n  when they are declared in the filters array because they read ahead internally\n  which is unsupported by the multiplexer\n\npreserve_original:: if `true` (the default) then emit the original token in\n  addition to the filtered tokens\n\n\n[discrete]\n=== Settings example\n\nYou can set it up like:\n\n[source,console]\n--------------------------------------------------\nPUT /multiplexer_example\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"my_analyzer\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [ \"my_multiplexer\" ]\n        }\n      },\n      \"filter\": {\n        \"my_multiplexer\": {\n          \"type\": \"multiplexer\",\n          \"filters\": [ \"lowercase\", \"lowercase, porter_stem\" ]\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nAnd test it like:\n\n[source,console]\n--------------------------------------------------\nPOST /multiplexer_example/_analyze\n{\n  \"analyzer\" : \"my_analyzer\",\n  \"text\" : \"Going HOME\"\n}\n--------------------------------------------------\n// TEST[continued]\n\nAnd it'd respond:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"tokens\": [\n    {\n      \"token\": \"Going\",\n      \"start_offset\": 0,\n      \"end_offset\": 5,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"going\",\n      \"start_offset\": 0,\n      \"end_offset\": 5,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"go\",\n      \"start_offset\": 0,\n      \"end_offset\": 5,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"HOME\",\n      \"start_offset\": 6,\n      \"end_offset\": 10,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"home\",          <1>\n      \"start_offset\": 6,\n      \"end_offset\": 10,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 1\n    }\n  ]\n}\n--------------------------------------------------\n\n<1> The stemmer has also emitted a token `home` at position 1, but because it is a\nduplicate of this token it has been removed from the token stream\n\nNOTE: The synonym and synonym_graph filters use their preceding analysis chain to\nparse and analyse their synonym lists, and will throw an exception if that chain\ncontains token filters that produce multiple tokens at the same position.\nIf you want to apply synonyms to a token stream containing a multiplexer, then you\nshould append the synonym filter to each relevant multiplexer filter list, rather than\nplacing it after the multiplexer in the main token chain definition.\n"
}