{
    "meta": {
        "size": 12054,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/discovery-azure-classic.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "discovery-azure-classic",
        "version": "8.15"
    },
    "doc": "[[discovery-azure-classic]]\n=== Azure Classic discovery plugin\n\nThe Azure Classic Discovery plugin uses the Azure Classic API to identify the\naddresses of seed hosts.\n\ndeprecated[5.0.0, This plugin will be removed in the future]\n\n:plugin_name: discovery-azure-classic\ninclude::install_remove.asciidoc[]\n\n\n[[discovery-azure-classic-usage]]\n==== Azure Virtual Machine discovery\n\nAzure VM discovery allows to use the Azure APIs to perform automatic discovery.\nHere is a simple sample configuration:\n\n[source,yaml]\n----\ncloud:\n    azure:\n        management:\n             subscription.id: XXX-XXX-XXX-XXX\n             cloud.service.name: es-demo-app\n             keystore:\n                   path: /path/to/azurekeystore.pkcs12\n                   password: WHATEVER\n                   type: pkcs12\n\ndiscovery:\n    seed_providers: azure\n----\n\n[IMPORTANT]\n.Binding the network host\n==============================================\n\nThe keystore file must be placed in a directory accessible by Elasticsearch like the `config` directory.\n\nIt's important to define `network.host` as by default it's bound to `localhost`.\n\nYou can use {ref}/modules-network.html[core network host settings]. For example `_en0_`.\n\n==============================================\n\n[[discovery-azure-classic-short]]\n===== How to start (short story)\n\n* Create Azure instances\n* Install Elasticsearch\n* Install Azure plugin\n* Modify `elasticsearch.yml` file\n* Start Elasticsearch\n\n[[discovery-azure-classic-settings]]\n===== Azure credential API settings\n\nThe following are a list of settings that can further control the credential API:\n\n[horizontal]\n`cloud.azure.management.keystore.path`::\n\n    /path/to/keystore\n\n`cloud.azure.management.keystore.type`::\n\n    `pkcs12`, `jceks` or `jks`. Defaults to `pkcs12`.\n\n`cloud.azure.management.keystore.password`::\n\n    your_password for the keystore\n\n`cloud.azure.management.subscription.id`::\n\n    your_azure_subscription_id\n\n`cloud.azure.management.cloud.service.name`::\n\n    your_azure_cloud_service_name. This is the cloud service name/DNS but without the `cloudapp.net` part.\n    So if the DNS name is `abc.cloudapp.net` then the `cloud.service.name` to use is just `abc`.\n\n\n[[discovery-azure-classic-settings-advanced]]\n===== Advanced settings\n\nThe following are a list of settings that can further control the discovery:\n\n`discovery.azure.host.type`::\n\n    Either `public_ip` or `private_ip` (default). Azure discovery will use the\n    one you set to ping other nodes.\n\n`discovery.azure.endpoint.name`::\n\n    When using `public_ip` this setting is used to identify the endpoint name\n    used to forward requests to Elasticsearch (aka transport port name).\n    Defaults to `elasticsearch`. In Azure management console, you could define\n    an endpoint `elasticsearch` forwarding for example requests on public IP\n    on port 8100 to the virtual machine on port 9300.\n\n`discovery.azure.deployment.name`::\n\n    Deployment name if any. Defaults to the value set with\n    `cloud.azure.management.cloud.service.name`.\n\n`discovery.azure.deployment.slot`::\n\n    Either `staging` or `production` (default).\n\nFor example:\n\n[source,yaml]\n----\ndiscovery:\n    type: azure\n    azure:\n        host:\n            type: private_ip\n        endpoint:\n            name: elasticsearch\n        deployment:\n            name: your_azure_cloud_service_name\n            slot: production\n----\n\n[[discovery-azure-classic-long]]\n==== Setup process for Azure Discovery\n\nWe will expose here one strategy which is to hide our Elasticsearch cluster from outside.\n\nWith this strategy, only VMs behind the same virtual port can talk to each\nother. That means that with this mode, you can use Elasticsearch unicast\ndiscovery to build a cluster, using the Azure API to retrieve information\nabout your nodes.\n\n[[discovery-azure-classic-long-prerequisites]]\n===== Prerequisites\n\nBefore starting, you need to have:\n\n* A https://azure.microsoft.com/en-us/[Windows Azure account]\n* OpenSSL that isn't from MacPorts, specifically `OpenSSL 1.0.1f 6 Jan\n  2014` doesn't seem to create a valid keypair for ssh. FWIW,\n `OpenSSL 1.0.1c 10 May 2012` on Ubuntu 14.04 LTS is known to work.\n* SSH keys and certificate\n+\n--\n\nYou should follow http://azure.microsoft.com/en-us/documentation/articles/linux-use-ssh-key/[this guide] to learn\nhow to create or use existing SSH keys. If you have already done it, you can skip the following.\n\nHere is a description on how to generate SSH keys using `openssl`:\n\n[source,sh]\n----\n# You may want to use another dir than /tmp\ncd /tmp\nopenssl req -x509 -nodes -days 365 -newkey rsa:2048 -keyout azure-private.key -out azure-certificate.pem\nchmod 600 azure-private.key azure-certificate.pem\nopenssl x509 -outform der -in azure-certificate.pem -out azure-certificate.cer\n----\n\nGenerate a keystore which will be used by the plugin to authenticate with a certificate\nall Azure API calls.\n\n[source,sh]\n----\n# Generate a keystore (azurekeystore.pkcs12)\n# Transform private key to PEM format\nopenssl pkcs8 -topk8 -nocrypt -in azure-private.key -inform PEM -out azure-pk.pem -outform PEM\n# Transform certificate to PEM format\nopenssl x509 -inform der -in azure-certificate.cer -out azure-cert.pem\ncat azure-cert.pem azure-pk.pem > azure.pem.txt\n# You MUST enter a password!\nopenssl pkcs12 -export -in azure.pem.txt -out azurekeystore.pkcs12 -name azure -noiter -nomaciter\n----\n\nUpload the `azure-certificate.cer` file both in the Elasticsearch Cloud Service (under `Manage Certificates`),\nand under `Settings -> Manage Certificates`.\n\nIMPORTANT: When prompted for a password, you need to enter a non empty one.\n\nSee this http://www.windowsazure.com/en-us/manage/linux/how-to-guides/ssh-into-linux/[guide] for\nmore details about how to create keys for Azure.\n\nOnce done, you need to upload your certificate in Azure:\n\n* Go to the https://account.windowsazure.com/[management console].\n* Sign in using your account.\n* Click on `Portal`.\n* Go to Settings (bottom of the left list)\n* On the bottom bar, click on `Upload` and upload your `azure-certificate.cer` file.\n\nYou may want to use\nhttp://www.windowsazure.com/en-us/develop/nodejs/how-to-guides/command-line-tools/[Windows Azure Command-Line Tool]:\n\n--\n\n* Install https://github.com/joyent/node/wiki/Installing-Node.js-via-package-manager[NodeJS], for example using\nhomebrew on MacOS X:\n+\n[source,sh]\n----\nbrew install node\n----\n\n* Install Azure tools\n+\n[source,sh]\n----\nsudo npm install azure-cli -g\n----\n\n* Download and import your azure settings:\n+\n[source,sh]\n----\n# This will open a browser and will download a .publishsettings file\nazure account download\n\n# Import this file (we have downloaded it to /tmp)\n# Note, it will create needed files in ~/.azure. You can remove azure.publishsettings when done.\nazure account import /tmp/azure.publishsettings\n----\n\n[[discovery-azure-classic-long-instance]]\n===== Creating your first instance\n\nYou need to have a storage account available. Check http://www.windowsazure.com/en-us/develop/net/how-to-guides/blob-storage/#create-account[Azure Blob Storage documentation]\nfor more information.\n\nYou will need to choose the operating system you want to run on. To get a list of official available images, run:\n\n[source,sh]\n----\nazure vm image list\n----\n\nLet's say we are going to deploy an Ubuntu image on an extra small instance in West Europe:\n\n[horizontal]\nAzure cluster name::\n\n    `azure-elasticsearch-cluster`\n\nImage::\n\n    `b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-13_10-amd64-server-20130808-alpha3-en-us-30GB`\n\nVM Name::\n\n    `myesnode1`\n\nVM Size::\n\n    `extrasmall`\n\nLocation::\n\n    `West Europe`\n\nLogin::\n\n    `elasticsearch`\n\nPassword::\n\n    `password1234!!`\n\n\nUsing command line:\n\n[source,sh]\n----\nazure vm create azure-elasticsearch-cluster \\\n                b39f27a8b8c64d52b05eac6a62ebad85__Ubuntu-13_10-amd64-server-20130808-alpha3-en-us-30GB \\\n                --vm-name myesnode1 \\\n                --location \"West Europe\" \\\n                --vm-size extrasmall \\\n                --ssh 22 \\\n                --ssh-cert /tmp/azure-certificate.pem \\\n                elasticsearch password1234\\!\\!\n----\n\nYou should see something like:\n\n[source,text]\n----\ninfo:    Executing command vm create\n+ Looking up image\n+ Looking up cloud service\n+ Creating cloud service\n+ Retrieving storage accounts\n+ Configuring certificate\n+ Creating VM\ninfo:    vm create command OK\n----\n\nNow, your first instance is started.\n\n[TIP]\n.Working with SSH\n===============================================\n\nYou need to give the private key and username each time you log on your instance:\n\n[source,sh]\n----\nssh -i ~/.ssh/azure-private.key elasticsearch@myescluster.cloudapp.net\n----\n\nBut you can also define it once in `~/.ssh/config` file:\n\n[source,text]\n----\nHost *.cloudapp.net\n User elasticsearch\n StrictHostKeyChecking no\n UserKnownHostsFile=/dev/null\n IdentityFile ~/.ssh/azure-private.key\n----\n===============================================\n\nNext, you need to install Elasticsearch on your new instance. First, copy your\nkeystore to the instance, then connect to the instance using SSH:\n\n[source,sh]\n----\nscp /tmp/azurekeystore.pkcs12 azure-elasticsearch-cluster.cloudapp.net:/home/elasticsearch\nssh azure-elasticsearch-cluster.cloudapp.net\n----\n\nOnce connected,  {ref}/install-elasticsearch.html[install {es}].\n\n[[discovery-azure-classic-long-plugin]]\n===== Install Elasticsearch cloud azure plugin\n\n[source,sh]\n----\n# Install the plugin\nsudo /usr/share/elasticsearch/bin/elasticsearch-plugin install discovery-azure-classic\n\n# Configure it\nsudo vi /etc/elasticsearch/elasticsearch.yml\n----\n\nAnd add the following lines:\n\n[source,yaml]\n----\n# If you don't remember your account id, you may get it with `azure account list`\ncloud:\n    azure:\n        management:\n             subscription.id: your_azure_subscription_id\n             cloud.service.name: your_azure_cloud_service_name\n             keystore:\n                   path: /home/elasticsearch/azurekeystore.pkcs12\n                   password: your_password_for_keystore\n\ndiscovery:\n    type: azure\n\n# Recommended (warning: non durable disk)\n# path.data: /mnt/resource/elasticsearch/data\n----\n\nStart Elasticsearch:\n\n[source,sh]\n----\nsudo systemctl start elasticsearch\n----\n\nIf anything goes wrong, check your logs in `/var/log/elasticsearch`.\n\n[[discovery-azure-classic-scale]]\n==== Scaling out!\n\nYou need first to create an image of your previous machine.\nDisconnect from your machine and run locally the following commands:\n\n[source,sh]\n----\n# Shutdown the instance\nazure vm shutdown myesnode1\n\n# Create an image from this instance (it could take some minutes)\nazure vm capture myesnode1 esnode-image --delete\n\n# Note that the previous instance has been deleted (mandatory)\n# So you need to create it again and BTW create other instances.\n\nazure vm create azure-elasticsearch-cluster \\\n                esnode-image \\\n                --vm-name myesnode1 \\\n                --location \"West Europe\" \\\n                --vm-size extrasmall \\\n                --ssh 22 \\\n                --ssh-cert /tmp/azure-certificate.pem \\\n                elasticsearch password1234\\!\\!\n----\n\n\n[TIP]\n=========================================\nIt could happen that azure changes the endpoint public IP address.\nDNS propagation could take some minutes before you can connect again using\nname. You can get from azure the IP address if needed, using:\n\n[source,sh]\n----\n# Look at Network `Endpoints 0 Vip`\nazure vm show myesnode1\n----\n\n=========================================\n\nLet's start more instances!\n\n[source,sh]\n----\nfor x in $(seq  2 10)\n\tdo\n\t\techo \"Launching azure instance #$x...\"\n\t\tazure vm create azure-elasticsearch-cluster \\\n\t\t                esnode-image \\\n\t\t                --vm-name myesnode$x \\\n\t\t                --vm-size extrasmall \\\n\t\t                --ssh $((21 + $x)) \\\n\t\t                --ssh-cert /tmp/azure-certificate.pem \\\n\t\t                --connect \\\n\t\t                elasticsearch password1234\\!\\!\n\tdone\n----\n\nIf you want to remove your running instances:\n\n[source,sh]\n----\nazure vm delete myesnode1\n----\n"
}