{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.168270",
        "size": 9748,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-lifecycle-error-handling.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "index-lifecycle-error-handling",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[index-lifecycle-error-handling]]\n== Troubleshooting {ilm} errors\n\nWhen <<index-lifecycle-management,{ilm-init}>> executes a lifecycle policy, it's possible for errors to occur\nwhile performing the necessary index operations for a step. \nWhen this happens, {ilm-init} moves the index to an `ERROR` step. \nIf {ilm-init} cannot resolve the error automatically, execution is halted  \nuntil you resolve the underlying issues with the policy, index, or cluster.\n\nSee this https://www.youtube.com/watch?v=VCIqkji3IwY[{ilm-init} health video] \nfor example troubleshooting walkthrough.\n\nFor example, you might have a `shrink-index` policy that shrinks an index to four shards once it\nis at least five days old: \n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/shrink-index\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"min_age\": \"5d\",\n        \"actions\": {\n          \"shrink\": {\n            \"number_of_shards\": 4\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nThere is nothing that prevents you from applying the `shrink-index` policy to a new\nindex that has only two shards:\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001\n{\n  \"settings\": {\n    \"index.number_of_shards\": 2,\n    \"index.lifecycle.name\": \"shrink-index\"\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\nAfter five days, {ilm-init} attempts to shrink `my-index-000001` from two shards to four shards.\nBecause the shrink action cannot _increase_ the number of shards, this operation fails \nand {ilm-init} moves `my-index-000001` to the `ERROR` step. \n\nYou can use the <<ilm-explain-lifecycle,{ilm-init} Explain API>> to get information about\nwhat went wrong: \n\n[source,console]\n--------------------------------------------------\nGET /my-index-000001/_ilm/explain\n--------------------------------------------------\n// TEST[continued]\n\nWhich returns the following information:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"indices\" : {\n    \"my-index-000001\" : {\n      \"index\" : \"my-index-000001\",\n      \"managed\" : true,                         \n      \"index_creation_date_millis\" : 1541717265865,\n      \"time_since_index_creation\": \"5.1d\",\n      \"policy\" : \"shrink-index\",                <1>\n      \"lifecycle_date_millis\" : 1541717265865,\n      \"age\": \"5.1d\",                            <2>\n      \"phase\" : \"warm\",                         <3>\n      \"phase_time_millis\" : 1541717272601,\n      \"action\" : \"shrink\",                      <4>\n      \"action_time_millis\" : 1541717272601,\n      \"step\" : \"ERROR\",                         <5>\n      \"step_time_millis\" : 1541717272688,\n      \"failed_step\" : \"shrink\",                 <6>\n      \"step_info\" : {\n        \"type\" : \"illegal_argument_exception\",  <7>\n        \"reason\" : \"the number of target shards [4] must be less that the number of source shards [2]\"\n      },\n      \"phase_execution\" : {\n        \"policy\" : \"shrink-index\",\n        \"phase_definition\" : {                  <8>\n          \"min_age\" : \"5d\",\n          \"actions\" : {\n            \"shrink\" : {\n              \"number_of_shards\" : 4\n            }\n          }\n        },\n        \"version\" : 1,\n        \"modified_date_in_millis\" : 1541717264230\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[skip:no way to know if we will get this response immediately]\n\n<1> The policy being used to manage the index: `shrink-index`\n<2> The index age: 5.1 days\n<3> The phase the index is currently in: `warm`\n<4> The current action: `shrink`\n<5> The step the index is currently in: `ERROR`\n<6> The step that failed to execute: `shrink`\n<7> The type of error and a description of that error.\n<8> The definition of the current phase from the `shrink-index` policy\n\nTo resolve this, you could update the policy to shrink the index to a single shard after 5 days:\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/shrink-index\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"min_age\": \"5d\",\n        \"actions\": {\n          \"shrink\": {\n            \"number_of_shards\": 1\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\n[discrete]\n=== Retrying failed lifecycle policy steps\n\nOnce you fix the problem that put an index in the `ERROR` step, \nyou might need to explicitly tell {ilm-init} to retry the step:\n\n[source,console]\n--------------------------------------------------\nPOST /my-index-000001/_ilm/retry\n--------------------------------------------------\n// TEST[skip:we can't be sure the index is ready to be retried at this point]\n\n{ilm-init} subsequently attempts to re-run the step that failed. \nYou can use the <<ilm-explain-lifecycle,{ilm-init} Explain API>> to monitor the progress.\n\n\n[discrete]\n=== Common {ilm-init} setting issues\n\n[discrete]\n[[min-age-calculation]]\n==== How `min_age` is calculated\n\nWhen setting up an <<set-up-lifecycle-policy,{ilm-init} policy>> or <<getting-started-index-lifecycle-management,automating rollover with {ilm-init}>>, be aware that `min_age` can be relative to either the rollover time or the index creation time.\n\nIf you use <<ilm-rollover,{ilm-init} rollover>>, `min_age` is calculated relative to the time the index was rolled over. This is because the <<indices-rollover-index,rollover API>> generates a new index and updates the `age` of the previous index to reflect the rollover time. If the index hasn't been rolled over, then the `age` is the same as the `creation_date` for the index.\n\nYou can override how `min_age` is calculated using the `index.lifecycle.origination_date` and `index.lifecycle.parse_origination_date` <<ilm-settings,{ilm-init} settings>>.\n\n\n[discrete]\n=== Common {ilm-init} errors\n\nHere's how to resolve the most common errors reported in the `ERROR` step.\n\nTIP: Problems with rollover aliases are a common cause of errors.\nConsider using <<data-streams, data streams>> instead of managing rollover with aliases.\n\n[discrete]\n==== Rollover alias [x] can point to multiple indices, found duplicated alias [x] in index template [z]\n\nThe target rollover alias is specified in an index template's `index.lifecycle.rollover_alias` setting.\nYou need to explicitly configure this alias _one time_ when you\n<<ilm-gs-alias-bootstrap, bootstrap the initial index>>.\nThe rollover action then manages setting and updating the alias to\n<<rollover-index-api-desc, roll over>> to each subsequent index.\n\nDo not explicitly configure this same alias in the aliases section of an index template.\n\nSee this https://www.youtube.com/watch?v=Ww5POq4zZtY[resolving `duplicate alias` video] for an example troubleshooting walkthrough.\n\n[discrete]\n==== index.lifecycle.rollover_alias [x] does not point to index [y]\n\nEither the index is using the wrong alias or the alias does not exist.\n\nCheck the `index.lifecycle.rollover_alias` <<indices-get-settings, index setting>>.\nTo see what aliases are configured, use <<cat-alias, _cat/aliases>>.\n\nSee this https://www.youtube.com/watch?v=NKSe67x7aw8[resolving `not point to index` video] for an example troubleshooting walkthrough.\n\n[discrete]\n==== Setting [index.lifecycle.rollover_alias] for index [y] is empty or not defined\n\nThe `index.lifecycle.rollover_alias` setting must be configured for the rollover action to work.\n\nUpdate the index settings to set `index.lifecycle.rollover_alias`.\n\nSee this https://www.youtube.com/watch?v=LRpMC2GS_FQ[resolving `empty or not defined` video] for an example troubleshooting walkthrough.\n\n[discrete]\n==== Alias [x] has more than one write index [y,z]\n\nOnly one index can be designated as the write index for a particular alias.\n\nUse the <<indices-aliases, aliases>> API to set `is_write_index:false` for all but one index.\n\nSee this https://www.youtube.com/watch?v=jCUvZCT5Hm4[resolving `more than one write index` video] for an example troubleshooting walkthrough.\n\n[discrete]\n==== index name [x] does not match pattern ^.*-\\d+\n\nThe index name must match the regex pattern `^.*-\\d+` for the rollover action to work.\nThe most common problem is that the index name does not contain trailing digits.\nFor example, `my-index` does not match the pattern requirement.\n\nAppend a numeric value to the index name, for example `my-index-000001`.\n\nSee this https://www.youtube.com/watch?v=9sp1zF6iL00[resolving `does not match pattern` video] for an example troubleshooting walkthrough.\n\n[discrete]\n==== CircuitBreakingException: [x] data too large, data for [y]\n\nThis indicates that the cluster is hitting resource limits.\n\nBefore continuing to set up {ilm-init}, you'll need to take steps to alleviate the resource issues.\nFor more information, see <<circuit-breaker-errors>>.\n\n[discrete]\n==== High disk watermark [x] exceeded on [y]\n\nThis indicates that the cluster is running out of disk space.\nThis can happen when you don't have {ilm} set up to roll over from hot to warm nodes.\nFor more information, see <<fix-watermark-errors,Fix watermark errors>>.\n\n[discrete]\n==== security_exception: action [<action-name>] is unauthorized for user [<user-name>] with roles [<role-name>], this action is granted by the index privileges [manage_follow_index,manage,all]\n\nThis indicates the ILM action cannot be executed because the user used by ILM to perform the action doesn't have the proper privileges. This can happen when user's privileges has been dropped after updating the ILM policy.\nILM actions are run as though they were performed by the last user who modify the policy. The account used to create or modify the policy from should have permissions to perform all operations that are part of that policy.\n"
}