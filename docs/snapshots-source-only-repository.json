{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.341579",
        "size": 3239,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/snapshots-source-only-repository.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "snapshots-source-only-repository",
        "version": "8.15"
    },
    "doc": "[[snapshots-source-only-repository]]\n=== Source-only repository\n\nYou can use a source-only repository to take minimal, source-only snapshots that\nuse up to 50% less disk space than regular snapshots.\n\nUnlike other repository types, a source-only repository doesn't directly store\nsnapshots. It delegates storage to another registered snapshot repository.\n\nWhen you take a snapshot using a source-only repository, {es} creates a\nsource-only snapshot in the delegated storage repository. This snapshot only\ncontains stored fields and metadata. It doesn't include index or doc values\nstructures and isn't immediately searchable when restored. To search the\nrestored data, you first have to <<docs-reindex,reindex>> it into a new data\nstream or index.\n\n[IMPORTANT]\n==================================================\n\nSource-only snapshots are only supported if the `_source` field is enabled and no source-filtering is applied.\nAs a result, indices adopting synthetic source cannot be restored. When you restore a source-only snapshot:\n\n * The restored index is read-only and can only serve `match_all` search or scroll requests to enable reindexing.\n\n * Queries other than `match_all` and `_get` requests are not supported.\n\n * The mapping of the restored index is empty, but the original mapping is available from the types top\n   level `meta` element.\n\n * Information such as document count, deleted document count and store size are not available for such indices\n   since these indices do not contain the relevant data structures to retrieve this information from. Therefore,\n   this information is not shown for such indices in APIs such as the <<cat-indices,cat indices API>>.\n==================================================\n\nBefore registering a source-only repository, use {kib} or the\n<<put-snapshot-repo-api,create snapshot repository API>> to register a snapshot\nrepository of another type to use for storage. Then register the source-only\nrepository and specify the delegated storage repository in the request.\n\n[source,console]\n----\nPUT _snapshot/my_src_only_repository\n{\n  \"type\": \"source\",\n  \"settings\": {\n    \"delegate_type\": \"fs\",\n    \"location\": \"my_backup_repository\"\n  }\n}\n----\n// TEST[setup:setup-repository]\n// TEST[s/my_backup_repository/my_repository/]\n\n[[source-only-repository-settings]]\n==== Repository settings\n\n`chunk_size`::\n(Optional, <<byte-units,byte value>>)\nMaximum size of files in snapshots. In snapshots, files larger than this are\nbroken down into chunks of this size or smaller. Defaults to `null` (unlimited\nfile size).\n\n`compress`::\n(Optional, Boolean)\nIf `true`, metadata files, such as index mappings and settings, are compressed\nin snapshots. Data files are not compressed. Defaults to `true`.\n\n`delegate_type`::\n(Optional, string)\nDelegated repository type. For valid values, see the\n<<put-snapshot-repo-api-request-type,`type` parameter>>.\n+\n`source` repositories can use `settings` properties for its delegated repository\ntype. See <<snapshots-source-only-repository>>.\n\n`max_number_of_snapshots`::\n(Optional, integer)\nMaximum number of snapshots the repository can contain.\nDefaults to `Integer.MAX_VALUE`, which is `2^31-1` or `2147483647`.\n\ninclude::repository-shared-settings.asciidoc[]\n"
}