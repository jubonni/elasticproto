{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.168066",
        "size": 5988,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-distance-query.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-geo-distance-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-geo-distance-query]]\n=== Geo-distance query\n++++\n<titleabbrev>Geo-distance</titleabbrev>\n++++\n\nMatches <<geo-point,`geo_point`>> and <<geo-shape,`geo_shape`>> values within\na given distance of a geopoint.\n\n[discrete]\n[[geo-distance-query-ex]]\n==== Example\n\nAssume the following documents are indexed:\n\n[source,console]\n--------------------------------------------------\nPUT /my_locations\n{\n  \"mappings\": {\n    \"properties\": {\n      \"pin\": {\n        \"properties\": {\n          \"location\": {\n            \"type\": \"geo_point\"\n          }\n        }\n      }\n    }\n  }\n}\n\nPUT /my_locations/_doc/1\n{\n  \"pin\": {\n    \"location\": {\n      \"lat\": 40.12,\n      \"lon\": -71.34\n    }\n  }\n}\n\nPUT /my_geoshapes\n{\n  \"mappings\": {\n    \"properties\": {\n      \"pin\": {\n        \"properties\": {\n          \"location\": {\n            \"type\": \"geo_shape\"\n          }\n        }\n      }\n    }\n  }\n}\n\nPUT /my_geoshapes/_doc/1\n{\n  \"pin\": {\n    \"location\": {\n      \"type\" : \"polygon\",\n      \"coordinates\" : [[[13.0 ,51.5], [15.0, 51.5], [15.0, 54.0], [13.0, 54.0], [13.0 ,51.5]]]\n    }\n  }\n}\n--------------------------------------------------\n// TESTSETUP\n\n\nUse a `geo_distance` filter to match `geo_point` values within a specified\ndistance of another geopoint:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"200km\",\n          \"pin.location\": {\n            \"lat\": 40,\n            \"lon\": -70\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nUse the same filter to match `geo_shape` values within the given distance:\n\n[source,console]\n--------------------------------------------------\nGET my_geoshapes/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"200km\",\n          \"pin.location\": {\n            \"lat\": 40,\n            \"lon\": -70\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nTo match both `geo_point` and `geo_shape` values, search both indices:\n\n[source,console]\n--------------------------------------------------\nGET my_locations,my_geoshapes/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"200km\",\n          \"pin.location\": {\n            \"lat\": 40,\n            \"lon\": -70\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[discrete]\n==== Accepted formats\n\nIn much the same way the `geo_point` type can accept different\nrepresentations of the geo point, the filter can accept it as well:\n\n[discrete]\n===== Lat lon as properties\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"12km\",\n          \"pin.location\": {\n            \"lat\": 40,\n            \"lon\": -70\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Lat lon as array\n\nFormat in `[lon, lat]`, note, the order of lon/lat here in order to\nconform with http://geojson.org/[GeoJSON].\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"12km\",\n          \"pin.location\": [ -70, 40 ]\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[discrete]\n===== Lat lon as WKT string\n\nFormat in https://docs.opengeospatial.org/is/12-063r5/12-063r5.html[Well-Known Text].\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"12km\",\n          \"pin.location\": \"POINT (-70 40)\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n===== Geohash\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"bool\": {\n      \"must\": {\n        \"match_all\": {}\n      },\n      \"filter\": {\n        \"geo_distance\": {\n          \"distance\": \"12km\",\n          \"pin.location\": \"drm3btev3e86\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[discrete]\n==== Options\n\nThe following are options allowed on the filter:\n\n[horizontal]\n\n`distance`::\n\n    The radius of the circle centred on the specified location. Points which\n    fall into this circle are considered to be matches. The `distance` can be\n    specified in various units. See <<distance-units>>.\n\n`distance_type`::\n\n    How to compute the distance. Can either be `arc` (default), or `plane` (faster, but inaccurate on long distances and close to the poles).\n\n`_name`::\n\n    Optional name field to identify the query\n\n`validation_method`::\n\n    Set to `IGNORE_MALFORMED` to accept geo points with invalid latitude or\n    longitude, set to `COERCE` to additionally try and infer correct\n    coordinates (default is `STRICT`).\n\n[discrete]\n==== Multi location per document\n\nThe `geo_distance` filter can work with multiple locations / points per\ndocument. Once a single location / point matches the filter, the\ndocument will be included in the filter.\n\n[discrete]\n==== Ignore unmapped\n\nWhen set to `true` the `ignore_unmapped` option will ignore an unmapped field\nand will not match any documents for this query. This can be useful when\nquerying multiple indexes which might have different mappings. When set to\n`false` (the default value) the query will throw an exception if the field\nis not mapped.\n"
}