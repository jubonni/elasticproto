{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.203290",
        "size": 4058,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/infer-service-anthropic.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "infer-service-anthropic",
        "version": "8.15"
    },
    "doc": "[[infer-service-anthropic]]\n=== Anthropic {infer} service\n\nCreates an {infer} endpoint to perform an {infer} task with the `anthropic` service.\n\n\n[discrete]\n[[infer-service-anthropic-api-request]]\n==== {api-request-title}\n\n`PUT /_inference/<task_type>/<inference_id>`\n\n[discrete]\n[[infer-service-anthropic-api-path-params]]\n==== {api-path-parms-title}\n\n`<inference_id>`::\n(Required, string)\ninclude::inference-shared.asciidoc[tag=inference-id]\n\n`<task_type>`::\n(Required, string)\ninclude::inference-shared.asciidoc[tag=task-type]\n+\n--\nAvailable task types:\n\n* `completion`\n--\n\n[discrete]\n[[infer-service-anthropic-api-request-body]]\n==== {api-request-body-title}\n\n`chunking_settings`::\n(Optional, object)\ninclude::inference-shared.asciidoc[tag=chunking-settings]\n\n`max_chunking_size`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-max-chunking-size]\n\n`overlap`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-overlap]\n\n`sentence_overlap`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-sentence-overlap]\n\n`strategy`:::\n(Optional, string)\ninclude::inference-shared.asciidoc[tag=chunking-settings-strategy]\n\n`service`::\n(Required, string)\nThe type of service supported for the specified task type. In this case,\n`anthropic`.\n\n`service_settings`::\n(Required, object)\ninclude::inference-shared.asciidoc[tag=service-settings]\n+\n--\nThese settings are specific to the `anthropic` service.\n--\n\n`api_key`:::\n(Required, string)\nA valid API key for the Anthropic API.\n\n`model_id`:::\n(Required, string)\nThe name of the model to use for the {infer} task.\nYou can find the supported models at https://docs.anthropic.com/en/docs/about-claude/models#model-names[Anthropic models].\n\n`rate_limit`:::\n(Optional, object)\nBy default, the `anthropic` service sets the number of requests allowed per minute to `50`.\nThis helps to minimize the number of rate limit errors returned from Anthropic.\nTo modify this, set the `requests_per_minute` setting of this object in your service settings:\n+\n--\ninclude::inference-shared.asciidoc[tag=request-per-minute-example]\n--\n\n`task_settings`::\n(Required, object)\ninclude::inference-shared.asciidoc[tag=task-settings]\n+\n.`task_settings` for the `completion` task type\n[%collapsible%closed]\n=====\n`max_tokens`:::\n(Required, integer)\nThe maximum number of tokens to generate before stopping.\n\n`temperature`:::\n(Optional, float)\nThe amount of randomness injected into the response.\n+\nFor more details about the supported range, see the https://docs.anthropic.com/en/api/messages[Anthropic messages API].\n\n`top_k`:::\n(Optional, integer)\nSpecifies to only sample from the top K options for each subsequent token.\n+\nRecommended for advanced use cases only. You usually only need to use `temperature`.\n+\nFor more details, see the https://docs.anthropic.com/en/api/messages[Anthropic messages API].\n\n`top_p`:::\n(Optional, float)\nSpecifies to use Anthropic's nucleus sampling.\n+\nIn nucleus sampling, Anthropic computes the cumulative distribution over all the options for each subsequent token in decreasing probability order and cut it off once it reaches a particular probability specified by `top_p`. You should either alter `temperature` or `top_p`, but not both.\n+\nRecommended for advanced use cases only. You usually only need to use `temperature`.\n+\nFor more details, see the https://docs.anthropic.com/en/api/messages[Anthropic messages API].\n=====\n\n[discrete]\n[[inference-example-anthropic]]\n==== Anthropic service example\n\nThe following example shows how to create an {infer} endpoint called\n`anthropic_completion` to perform a `completion` task type.\n\n[source,console]\n------------------------------------------------------------\nPUT _inference/completion/anthropic_completion\n{\n    \"service\": \"anthropic\",\n    \"service_settings\": {\n        \"api_key\": \"<api_key>\",\n        \"model_id\": \"<model_id>\"\n    },\n    \"task_settings\": {\n        \"max_tokens\": 1024\n    }\n}\n------------------------------------------------------------\n// TEST[skip:TBD]\n"
}