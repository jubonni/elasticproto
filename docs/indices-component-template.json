{
    "meta": {
        "size": 8633,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-component-template.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "indices-component-template",
        "version": "8.15"
    },
    "doc": "[[indices-component-template]]\n=== Create or update component template API\n++++\n<titleabbrev>Create or update component template</titleabbrev>\n++++\n\nCreates or updates a component template. Component templates are building blocks\nfor constructing <<index-templates,index templates>> that specify index\n<<mapping,mappings>>, <<index-modules-settings,settings>>, and\n<<aliases,aliases>>.\n\n[source,console]\n--------------------------------------------------\nPUT _component_template/template_1\n{\n  \"template\": {\n    \"settings\": {\n      \"number_of_shards\": 1\n    },\n    \"mappings\": {\n      \"_source\": {\n        \"enabled\": false\n      },\n      \"properties\": {\n        \"host_name\": {\n          \"type\": \"keyword\"\n        },\n        \"created_at\": {\n          \"type\": \"date\",\n          \"format\": \"EEE MMM dd HH:mm:ss Z yyyy\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTSETUP\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nDELETE _component_template/template_*\n--------------------------------------------------\n// TEARDOWN\n\n//////////////////////////\n\n[[put-component-template-api-request]]\n==== {api-request-title}\n\n`PUT /_component_template/<component-template>`\n\n[[put-component-template-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`manage_index_templates` or `manage` <<privileges-list-cluster,cluster\nprivilege>> to use this API.\n\n[[put-component-template-api-desc]]\n==== {api-description-title}\n\nAn index template can be composed of multiple component templates.\nTo use a component template, specify it in an index template's `composed_of` list.\nComponent templates are only applied to new data streams and indices\nas part of a matching index template.\n\nSettings and mappings specified directly in the index template or the <<indices-create-index, create index>>\nrequest override any settings or mappings specified in a component template.\n\nComponent templates are only used during index creation. For data streams, this\nincludes data stream creation and the creation of a stream's backing indices.\nChanges to component templates do not\naffect existing indices, including a stream's backing indices.\n\n===== Comments in component templates\nYou can use C-style /* */ block comments in component templates.\nYou can include comments anywhere in the request body,\nexcept before the opening curly bracket.\n\n[[put-component-template-api-path-params]]\n==== {api-path-parms-title}\n\n`<component-template>`::\n(Required, string)\nName of the component template to create.\n+\n[IMPORTANT]\n====\n{es} includes the following built-in component templates:\n\n// tag::built-in-component-templates[]\n- `logs@mappings`\n- `logs@settings`\n- `metrics@mappings`\n- `metrics@settings`\n- `metrics@tsdb-settings`\n- `synthetics@mapping`\n- `synthetics@settings`\n// end::built-in-component-templates[]\n\n{fleet-guide}/fleet-overview.html[{agent}] uses these templates to configure\nbacking indices for its data streams.\nIf you want to customize these templates, don't override them as they may be reset after an update.\nInstead, look for a `*@custom` component template in the `composed_of` section of the managed index template.\nThese custom component templates allow you to customize the mappings of managed index templates,\nwithout having to override managed index templates or component templates.\nNote that the custom component templates may not exist yet.\nAfter you create them using the <<indices-component-template>>, they'll be picked up by the index template.\nSee <<data-streams-change-mappings-and-settings>> on how to apply the changes to the corresponding data stream.\n\nTo avoid naming collisions with built-in and Fleet-managed component templates,\navoid using `@` as part of your own component template names.\nThe exception of that rule are the `*@custom` component templates that let you safely customize managed index templates.\n====\n\n[[put-component-template-api-query-params]]\n==== {api-query-parms-title}\n\n`create`::\n(Optional, Boolean)\nIf `true`, this request cannot replace or update existing component templates.\nDefaults to `false`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n[role=\"child_attributes\"]\n[[put-component-template-api-request-body]]\n==== {api-request-body-title}\n\n// tag::template[]\n\n`template`::\n(Required, object)\nThis is the template to be applied, may optionally include a `mappings`,\n`settings`, or `aliases` configuration.\n+\n.Properties of `template`\n[%collapsible%open]\n=====\n`aliases`::\n(Optional, object of objects) Aliases to add.\n+\ninclude::{es-ref-dir}/indices/put-index-template.asciidoc[tag=template-ds-alias]\n+\ninclude::{es-ref-dir}/indices/create-index.asciidoc[tag=aliases-props]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=mappings]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=settings]\n=====\n\n`version`::\n(Optional, integer)\nVersion number used to manage component templates externally.\nThis number is not automatically generated or incremented by {es}.\n\n`allow_auto_create`::\n(Optional, Boolean)\nThis setting overrides the value of the\n<<index-creation,`action.auto_create_index`>> cluster setting. If set to\n`true` in a template, then indices can be automatically created using that\ntemplate even if auto-creation of indices is disabled via\n`actions.auto_create_index`. If set to `false`, then indices or data streams matching the\ntemplate must always be explicitly created, and may never be automatically\ncreated.\n\n`_meta`::\n(Optional, object)\nOptional user metadata about the component template. May have any contents.\nThis map is not automatically generated by {es}.\n\n`deprecated`::\n(Optional, boolean)\nMarks this component template as deprecated.\nWhen a deprecated component template is referenced when creating or updating a non-deprecated index template,\n{es} will emit a deprecation warning.\nend::template[]\n\n[[put-component-template-api-example]]\n==== {api-examples-title}\n\n===== Component template with index aliases\n\nYou can include <<aliases,index aliases>> in a component template.\n\n[source,console]\n--------------------------------------------------\nPUT _component_template/template_1\n{\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    },\n    \"aliases\" : {\n        \"alias1\" : {},\n        \"alias2\" : {\n            \"filter\" : {\n                \"term\" : {\"user.id\" : \"kimchy\" }\n            },\n            \"routing\" : \"shard-1\"\n        },\n        \"{index}-alias\" : {} <1>\n    }\n  }\n}\n--------------------------------------------------\n<1> the `{index}` placeholder in the alias name will be replaced with the\nactual index name that the template gets applied to, during index creation.\n\n[[applying-component-templates]]\n===== Applying component templates\n\nYou cannot directly apply a component template to a data stream or index.\nTo be applied, a component template must be included in an index template's `composed_of` list. See <<index-templates>>.\n\n[[component-templates-version]]\n===== Component template versioning\n\nYou can use the `version` parameter to add a version number to a component template.\nExternal systems can use these version numbers to simplify template management.\n\nThe `version` parameter is optional and not automatically generated or used by {es}.\n\nTo unset a `version`, replace the template without specifying one.\n\n[source,console]\n--------------------------------------------------\nPUT /_component_template/template_1\n{\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    }\n  },\n  \"version\": 123\n}\n--------------------------------------------------\n\nTo check the `version`, you can use the <<getting-component-templates,get component template API>>.\n\n[[component-templates-metadata]]\n===== Component template metadata\n\nYou can use the `_meta` parameter to add arbitrary metadata to a component template.\nThis user-defined object is stored in the cluster state,\nso keeping it short is preferable.\n\nThe `_meta` parameter is optional and not automatically generated or used by {es}.\n\nTo unset `_meta`, replace the template without specifying one.\n\n[source,console]\n--------------------------------------------------\nPUT /_component_template/template_1\n{\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    }\n  },\n  \"_meta\": {\n    \"description\": \"set number of shards to one\",\n    \"serialization\": {\n      \"class\": \"MyComponentTemplate\",\n      \"id\": 10\n    }\n  }\n}\n--------------------------------------------------\n\nTo check the `_meta`, you can use the <<getting-component-templates,get component template>> API.\n"
}