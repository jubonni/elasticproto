{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.007584",
        "size": 3583,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/field-alias.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "field-alias",
        "version": "8.15"
    },
    "doc": "[[field-alias]]\n=== Alias field type\n++++\n<titleabbrev>Alias</titleabbrev>\n++++\n\nAn `alias` mapping defines an alternate name for a field in the index.\nThe alias can be used in place of the target field in <<search, search>> requests,\nand selected other APIs like <<search-field-caps, field capabilities>>.\n\n[source,console]\n--------------------------------\nPUT trips\n{\n  \"mappings\": {\n    \"properties\": {\n      \"distance\": {\n        \"type\": \"long\"\n      },\n      \"route_length_miles\": {\n        \"type\": \"alias\",\n        \"path\": \"distance\" <1>\n      },\n      \"transit_mode\": {\n        \"type\": \"keyword\"\n      }\n    }\n  }\n}\n\nGET _search\n{\n  \"query\": {\n    \"range\" : {\n      \"route_length_miles\" : {\n        \"gte\" : 39\n      }\n    }\n  }\n}\n--------------------------------\n\n<1> The path to the target field. Note that this must be the full path, including any parent\nobjects (e.g. `object1.object2.field`).\n\nAlmost all components of the search request accept field aliases. In particular, aliases can be\nused in queries, aggregations, and sort fields, as well as when requesting `docvalue_fields`,\n`stored_fields`, suggestions, and highlights. Scripts also support aliases when accessing\nfield values. Please see the section on <<unsupported-apis, unsupported APIs>> for exceptions.\n\nIn some parts of the search request and when requesting field capabilities, field wildcard patterns can be\nprovided. In these cases, the wildcard pattern will match field aliases in addition to concrete fields:\n\n[source,console]\n--------------------------------\nGET trips/_field_caps?fields=route_*,transit_mode\n--------------------------------\n// TEST[continued]\n\n[[alias-targets]]\n==== Alias targets\n\nThere are a few restrictions on the target of an alias:\n\n  * The target must be a concrete field, and not an object or another field alias.\n  * The target field must exist at the time the alias is created.\n  * If nested objects are defined, a field alias must have the same nested scope as its target.\n\nAdditionally, a field alias can only have one target. This means that it is not possible to use a\nfield alias to query over multiple target fields in a single clause.\n\nAn alias can be changed to refer to a new target through a mappings update. A known limitation is that\nif any stored percolator queries contain the field alias, they will still refer to its original target.\nMore information can be found in the <<percolator, percolator documentation>>.\n\n[[unsupported-apis]]\n==== Unsupported APIs\n\nWrites to field aliases are not supported: attempting to use an alias in an index or update request\nwill result in a failure. Likewise, aliases cannot be used as the target of `copy_to` or in multi-fields.\n\nBecause alias names are not present in the document source, aliases cannot be used when performing\nsource filtering. For example, the following request will return an empty result for `_source`:\n\n[source,console]\n--------------------------------\nGET /_search\n{\n  \"query\" : {\n    \"match_all\": {}\n  },\n  \"_source\": \"route_length_miles\"\n}\n--------------------------------\n// TEST[continued]\n\nCurrently only the search and field capabilities APIs will accept and resolve field aliases.\nOther APIs that accept field names, such as <<docs-termvectors, term vectors>>, cannot be used\nwith field aliases.\n\nFinally, some queries, such as `terms`, `geo_shape`, and `more_like_this`, allow for fetching query\ninformation from an indexed document. Because field aliases aren't supported when fetching documents,\nthe part of the query that specifies the lookup path cannot refer to a field by its alias."
}