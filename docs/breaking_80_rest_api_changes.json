{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.352583",
        "size": 39992,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_80_rest_api_changes.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "breaking_80_rest_api_changes",
        "version": "8.15"
    },
    "doc": "[discrete]\n[[breaking_80_rest_api_changes]]\n==== REST API changes\n\n.REST API endpoints containing `_xpack` have been removed.\n[%collapsible]\n====\n*Details* +\nIn 7.0, we deprecated REST endpoints that contain `_xpack` in their path. These\nendpoints are now removed in 8.0. Each endpoint that was deprecated and removed\nis replaced with a new endpoint that does not contain `_xpack`. As an example,\n`/{index}/_xpack/graph/_explore` is replaced by `/{index}/_graph/explore`.\n\n*Impact* +\nUse the replacement REST API endpoints. Requests submitted to the `_xpack`\nAPI endpoints will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], any requests that include\nthe`_xpack` prefix are rerouted to the corresponding URL without the `_xpack`\nprefix.\n====\n\n[[remove-mapping-type-api-endpoints]]\n.REST API endpoints containing mapping types have been removed.\n[%collapsible]\n====\n*Details* +\nMapping types have been removed. API endpoints that contain a mapping type have\nalso been removed. Use a typeless endpoint instead.\n\n[options=\"header\",cols=\"<1,<3,<1\"]\n|====\n| API   | Typed API endpoint  | Typeless API endpoint\n\n| {ref}/docs-bulk.html[Bulk]\n| `<target>/<type>/_bulk`\n| `<target>/_bulk`\n\n| {ref}/search-count.html[Count]\n| `<target>/<type>/_count`\n| `<target>/_count`\n\n| {ref}/docs-delete.html[Delete]\n| `<index>/<type>/<_id>`\n| `<index>/_doc/<_id>`\n\n| {ref}/docs-delete-by-query.html[Delete by query]\n| `<target>/<type>/_delete_by_query`\n| `<target>/_delete_by_query`\n\n| {ref}/search-explain.html[Explain]\n| `<index>/<type>/<_id>/_explain`\n| `<index>/_explain/<_id>`\n\n| {ref}/docs-get.html[Get]\n| `<index>/<type>/<_id>`\n| `<index>/_doc/<_id>`\n\n|\n| `<index>/<type>/<_id>/_source`\n| `<index>/_source/<_id>`\n\n| {ref}/indices-get-field-mapping.html[Get field mapping]\n| `_mapping/<type>/field/<field>`\n| `_mapping/field/<field>`\n\n|\n| `<target>/_mapping/<type>/field/<field>`\n| `<target>/_mapping/field/<field>`\n\n| {ref}/indices-get-mapping.html[Get mapping]\n| `_mapping/<type>`\n| `_mapping` or `<target>/_mapping`\n\n|\n| `<target>/<type>/_mapping`\n| `<target>/_mapping`\n\n|\n| `<target>/_mapping/<type>`\n| `<target>/_mapping`\n\n| {ref}/graph-explore-api.html[Graph explore]\n| `<index>/<type>/_graph/explore`\n| `<index>/_graph/explore`\n\n| {ref}/docs-index_.html[Index]\n| `<target>/<type>/<_id>/_create`\n| `<target>/_create/<_id>`\n\n|\n| `<target>/<type>`\n| `<target>/_doc`\n\n|\n| `<target>/<type>/<_id>`\n| `<target>/_doc/<_id>`\n\n| {ref}/docs-multi-get.html[Multi get]\n| `<index>/<type>/_mget`\n| `<index>/_mget`\n\n| {ref}/search-multi-search.html[Multi search]\n| `<target>/<type>/_msearch`\n| `<target>/_msearch`\n\n| {ref}/multi-search-template.html[Multi search template]\n| `<target>/<type>/_msearch/template`\n| `<target>/_msearch/template`\n\n| {ref}/docs-multi-termvectors.html[Multi term vectors]\n| `<index>/<type>/_mtermvectors`\n| `<index>/_mtermvectors`\n\n| {ref}/rollup-search.html[Rollup search]\n| `<target>/<type>/_rollup_search`\n| `<target>/_rollup_search`\n\n| {ref}/search-search.html[Search]\n| `<target>/<type>/_search`\n| `<target>/_search`\n\n| {ref}/search-template-api.html[Search template]\n| `<target>/<type>/_search/template`\n| `<target>/_search/template`\n\n| {ref}/docs-termvectors.html[Term vectors]\n| `<index>/<mapping_type>/<_id>/_termvectors`\n| `<index>/_termvectors<_id>`\n\n|\n| `<index>/<mapping_type>/_termvectors`\n| `<index>/_termvectors`\n\n| {ref}/docs-update.html[Update]\n| `<index>/<type>/<_id>/_update`\n| `<index>/_update/<_id>`\n\n| {ref}/docs-update-by-query.html[Update by query]\n| `<target>/<type>/_update_by_query`\n| `<target>/_update_by_query`\n\n| {ref}/indices-put-mapping.html[Update mapping]\n| `<target>/<type>/_mapping`\n| `<target>/_mapping`\n\n|\n| `<target>/_mapping/<type>`\n| `<target>/_mapping`\n\n|\n| `_mapping/<type>`\n| `<target>/_mapping`\n\n| {ref}/search-validate.html[Validate]\n| `<target>/<type>/_validate/query`\n| `<target>/_validate/query`\n\n|====\n\n*Impact* +\nUpdate your application to use typeless REST API endpoints. Requests to\nendpoints that contain a mapping type will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], if a request includes a custom\nmapping type it is ignored. The request is rerouted to the corresponding\ntypeless URL. Custom mapping types in request bodies and type related HTTP\nparameters are ignored, and responses, where warranted, include `_type` :\n`_doc`.\n\n====\n\n.{ccs-cap} ({ccs-init}) is now only backward-compatible with the previous minor version.\n[%collapsible]\n====\n*Details* +\nIn 8.0+, Elastic supports searches from a local cluster to a remote cluster\nrunning:\n\n* The previous minor version.\n* The same version.\n* A newer minor version in the same major version.\n\nElastic also supports searches from a local cluster running the last minor\nversion of a major version to a remote cluster running any minor version in the\nfollowing major version. For example, a local 7.17 cluster can search any\nremote 8.x cluster.\n\ninclude::{es-ref-dir}/search/search-your-data/ccs-version-compat-matrix.asciidoc[]\n\nIMPORTANT: For the {ref}/eql-search-api.html[EQL search API], the local and\nremote clusters must use the same {es} version if they have versions prior to 7.17.7 (included) or prior to 8.5.1 (included).\n\nFor example, a local 8.0 cluster can search a remote 7.17 or any remote 8.x\ncluster. However, a search from a local 8.0 cluster to a remote 7.16 or 6.8\ncluster is not supported.\n\nPreviously, we also supported searches on remote clusters running:\n\n* Any minor version of the local cluster's major version.\n* The last minor release of the previous major version.\n\nHowever, such searches can result in undefined behavior.\n\n*Impact* +\nIf you only run cross-cluster searches on remote clusters using the same or a\nnewer version, no changes are needed.\n\nIf you previously searched remote clusters running an earlier version of {es},\nsee {ref}/modules-cross-cluster-search.html#ensure-ccs-support[Ensure {ccs}\nsupport] for recommended solutions.\n\nA {ccs} using an unsupported configuration may still work. However, such\nsearches aren't tested by Elastic, and their behavior isn't guaranteed.\n====\n\n[[remove-term-order-key]]\n.The `terms` aggregation no longer supports the `_term` order key.\n[%collapsible]\n====\n*Details* +\nThe `terms` aggregation no longer supports the `_term` key in `order` values. To\nsort buckets by their term, use `_key` instead.\n\n*Impact* +\nDiscontinue use of the `_term` order key. Requests that include a `_term` order\nkey will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `_term` order is ignored and\n`key` is used instead.\n====\n\n[[remove-time-order-key]]\n.The `date_histogram` aggregation no longer supports the `_time` order key.\n[%collapsible]\n====\n*Details* +\nThe `date_histogram` aggregation no longer supports the `_time` key in `order`\nvalues. To sort buckets by their key, use `_key` instead.\n\n*Impact* +\nDiscontinue use of the `_time` order key. Requests that include a `_time` order\nkey will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `_time` order is ignored and\n`_key` is used instead.\n====\n\n[[remove-moving-avg-agg]]\n.The `moving_avg` aggregation has been removed.\n[%collapsible]\n====\n*Details* +\nThe `moving_avg` aggregation was deprecated in 6.4 and has been removed. To\ncalculate moving averages, use the\n{ref}/search-aggregations-pipeline-movfn-aggregation.html[`moving_fn`\naggregation] instead.\n\n*Impact* +\nDiscontinue use of the `moving_avg` aggregation. Requests that include the\n`moving_avg` aggregation will return an error.\n\n\n====\n\n[[percentile-duplication]]\n.The `percentiles` aggregation's `percents` parameter no longer supports duplicate values.\n[%collapsible]\n====\n*Details* +\nIf you specify the `percents` parameter with the\n{ref}/search-aggregations-metrics-percentile-aggregation.html[`percentiles` aggregation],\nits values must be unique. Otherwise, an exception occurs.\n\n*Impact* +\nUse unique values in the `percents` parameter of the `percentiles` aggregation.\nRequests containing duplicate values in the `percents` parameter will return\nan error.\n\n====\n\n[[date-histogram-interval]]\n.The `date_histogram` aggregation's `interval` parameter is no longer valid.\n[%collapsible]\n====\n*Details* +\nIt is now an error to specify the `interval` parameter to the\n{ref}/search-aggregations-bucket-datehistogram-aggregation.html[`date_histogram`\naggregation] or the\n{ref}/search-aggregations-bucket-composite-aggregation.html#_date_histogram[`composite\ndate_histogram` source.  Instead, please use either `calendar_interval` or\n`fixed_interval` as appropriate.\n\n*Impact* +\nUses of the `interval` parameter in either the `date_histogram` aggregation or\nthe `date_histogram` composite source will now generate an error.  Instead\nplease use the more specific `fixed_interval` or `calendar_interval`\nparameters.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `interval` parameter is\nadapted to either a fixed or calendar interval.\n====\n\n[[ngram-edgengram-filter-names-removed]]\n.The `nGram` and `edgeNGram` token filter names have been removed.\n[%collapsible]\n====\n*Details* +\nThe `nGram` and `edgeNGram` token filter names that have been deprecated since\nversion 6.4 have been removed. Both token filters can only be used by their\nalternative names `ngram` and `edge_ngram` since version 7.0.\n\n*Impact* +\nUse the equivalent `ngram` and `edge_ngram` token filters. Requests containing\nthe `nGram` and `edgeNGram` token filter names will return an error.\n====\n\n[[nGram-edgeNGram-tokenizer-dreprecation]]\n.The `nGram` and `edgeNGram` tokenizer names have been removed.\n[%collapsible]\n====\n*Details* +\nThe `nGram` and `edgeNGram` tokenizer names haven been deprecated with 7.6 and are no longer\nsupported on new indices. Mappings for indices created after 7.6 will continue to work but\nemit a deprecation warning. The tokenizer name should be changed to the fully equivalent\n`ngram` or `edge_ngram` names for new indices and in index templates.\n\n*Impact* +\nUse the `ngram` and `edge_ngram` tokenizers. Requests to create new indices\nusing the `nGram` and `edgeNGram` tokenizer names will return an error.\n====\n\n.The `in_flight_requests` stat has been renamed `inflight_requests` in logs and diagnostic APIs.\n[%collapsible]\n====\n*Details* +\nThe name of the in flight requests circuit breaker in log output and diagnostic APIs (such as the node stats API) changes from `in_flight_requests` to `inflight_requests` to align it with the name of the corresponding settings.\n\n*Impact* +\nUpdate your workflow and applications to use the `inflight_requests` stat in\nplace of `in_flight_requests`.\n====\n\n.The voting configuration exclusions API endpoint has changed.\n[%collapsible]\n====\n*Details* +\nThe `POST /_cluster/voting_config_exclusions/{node_filter}` API has been\nremoved in favour of `POST /_cluster/voting_config_exclusions?node_names=...`\nand `POST /_cluster/voting_config_exclusions?node_ids=...` which allow you to\nspecify the names or IDs of the nodes to exclude.\n\n*Impact* +\nUse `POST /_cluster/voting_config_exclusions?node_ids=...` and specify the nodes\nto exclude instead of using a node filter. Requests submitted to the\n`/_cluster/voting_config_exclusions/{node_filter}` endpoint will return an\nerror.\n====\n\n.Remote system indices are not followed automatically if they match an auto-follow pattern.\n[%collapsible]\n====\n*Details* +\nRemote system indices matching an {ref}/ccr-auto-follow.html[auto-follow\npattern] won't be configured as a follower index automatically.\n\n*Impact* +\nExplicitly {ref}/ccr-put-follow.html[create a follower index] to follow a remote\nsystem index if that's the wanted behaviour.\n====\n\n.The EQL `wildcard` function has been removed.\n[%collapsible]\n====\n*Details* +\nThe `wildcard` function was deprecated in {es} 7.13.0 and has been removed.\n\n*Impact* +\nUse the `like` or `regex` {ref}/eql-syntax.html#eql-syntax-pattern-comparison-keywords[keywords] instead.\n====\n\n[[ilm-freeze-noop]]\n.The ILM `freeze` action is now a no-op.\n[%collapsible]\n====\n*Details* +\nThe ILM freeze action is now a no-op and performs no action on the index, as the freeze API endpoint\nhas been removed in 8.0.\n\n*Impact* +\nUpdate your ILM policies to remove the `freeze` action from the `cold` phase.\n====\n\n[[ilm-policy-validation]]\n.Additional validation for ILM policies.\n[%collapsible]\n====\n*Details* +\nCreating or updating an ILM policy now requires that any referenced snapshot repositories and SLM\npolicies exist.\n\n*Impact* +\nUpdate your code or configuration management to ensure that repositories and SLM policies are created\nbefore any policies that reference them.\n====\n\n.The deprecated `_upgrade` API has been removed.\n[%collapsible]\n====\n*Details* +\nPreviously, the `_upgrade` API upgraded indices from the previous major\nversion to the current version. The `_reindex` API should be used\ninstead for that purpose.\n\n*Impact* +\nRequests made to the old `_upgrade` API will return an error.\n====\n\n.The deprecated freeze index API has been removed.\n[%collapsible]\n====\n*Details* +\nThe freeze index API (`POST /<index>/_freeze`) has been removed.\nhttps://www.elastic.co/blog/significantly-decrease-your-elasticsearch-heap-memory-usage[Improvements\nin heap memory usage] have eliminated the reason to freeze indices.\nYou can still unfreeze existing frozen indices using the\n{ref}/unfreeze-index-api.html[unfreeze index API]. For some use cases, the\nfrozen tier may be a suitable replacement for frozen indices. See\n{ref}/data-tiers.html[data tiers] for more information.\n\n*Impact* +\nRequests made to the old freeze index API will return an error.\n====\n\n.The force merge API's `max_num_segments` and `only_expunge_deletes` parameters cannot both be specified in the same request.\n[%collapsible]\n====\n*Details* +\nPreviously, the force merge API allowed the parameters `only_expunge_deletes`\nand `max_num_segments` to be set to a non default value at the same time. But\nthe `max_num_segments` was silently ignored when `only_expunge_deletes` is set\nto `true`, leaving the false impression that it has been applied.\n\n*Impact* +\nWhen using the {ref}/indices-forcemerge.html[force merge API], do not specify\nvalues for both the `max_num_segments` and `only_expunge_deletes` parameters.\nRequests that include values for both parameters will return an error.\n====\n\n.The create or update index template API's `template` parameter has been removed.\n[%collapsible]\n====\n*Details* +\nIn 6.0, we deprecated the `template` parameter in create or update index\ntemplate requests in favor of using `index_patterns`. Support for the `template`\nparameter is now removed in 8.0.\n\n*Impact* +\nUse the {ref}/indices-templates-v1.html[create or update index template API]'s\n`index_patterns` parameter. Requests that include the `template` parameter will\nreturn an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `template` parameter is mapped\nto `index_patterns`.\n====\n\n.Synced flush has been removed.\n[%collapsible]\n====\n*Details* +\nSynced flush was deprecated in 7.6 and is removed in 8.0. Use a regular flush\ninstead as it has the same effect as a synced flush in 7.6 and later.\n\n*Impact* +\nUse the {ref}/indices-flush.html[flush API]. Requests to the\n`/<index>/flush/synced` or `/flush/synced` endpoints will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the request to synced flush is\nrouted to the equivalent non-synced flush URL.\n====\n\n.The default for the `?wait_for_active_shards` parameter on the close index API has changed.\n[%collapsible]\n====\n*Details* +\nWhen closing an index in earlier versions, by default {es} would not wait for\nthe shards of the closed index to be properly assigned before returning. From\nversion 8.0 onwards the default behaviour is to wait for shards to be assigned\naccording to the\n{ref}/docs-index_.html#index-wait-for-active-shards[`index.write.wait_for_active_shards`\nindex setting].\n\n*Impact* +\nAccept the new behaviour, or specify `?wait_for_active_shards=0` to preserve\nthe old behaviour if needed.\n====\n\n.The index stats API's `types` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe index stats API's `types` query parameter has been removed. Previously, you\ncould combine `types` with the `indexing` query parameter to return indexing\nstats for specific mapping types. Mapping types have been removed in 8.0.\n\n*Impact* +\nDiscontinue use of the `types` query parameter. Requests that include the\nparameter will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `types` query parameter is\nignored and stats are returned for the entire index.\n====\n\n.The `user_agent` ingest processor's `ecs` parameter has no effect.\n[%collapsible]\n====\n*Details* +\nIn 7.2, we deprecated the `ecs` parameter for the `user_agent` ingest processor.\nIn 8.x, the `user_agent` ingest processor will only return {ecs-ref}[Elastic\nCommon Schema (ECS)] fields, regardless of the `ecs` value.\n\n*Impact* +\nTo avoid deprecation warnings, remove the parameter from your ingest pipelines.\nIf a pipeline specifies an `ecs` value, the value is ignored.\n====\n\n.The `include_type_name` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `include_type_name` query parameter has been removed from the index\ncreation, index template, and mapping APIs. Previously, you could set\n`include_type_name` to `true` to indicate that requests and responses should\ninclude a mapping type name. Mapping types have been removed in 8.x.\n\n*Impact* +\nDiscontinue use of the `include_type_name` query parameter. Requests that\ninclude the parameter will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `include_type_name` query\nparameter is ignored and any custom mapping types in the request are removed.\n====\n\n.Reindex from remote now re-encodes URL-encoded index names.\n[%collapsible]\n====\n*Details* +\nReindex from remote would previously allow URL-encoded index names and not\nre-encode them when generating the search request for the remote host. This\nleniency has been removed such that all index names are correctly encoded when\nreindex generates remote search requests.\n\n*Impact* +\nSpecify unencoded index names for reindex from remote requests.\n====\n\n.In the reindex, delete by query, and update by query APIs, the `size` parameter has been renamed.\n[%collapsible]\n====\n*Details* +\nPreviously, a `_reindex` request had two different size specifications in the body:\n\n- Outer level, determining the maximum number of documents to process\n- Inside the `source` element, determining the scroll/batch size.\n\nThe outer level `size` parameter has now been renamed to `max_docs` to\navoid confusion and clarify its semantics.\n\nSimilarly, the `size` parameter has been renamed to `max_docs` for\n`_delete_by_query` and `_update_by_query` to keep the 3 interfaces consistent.\n\n*Impact* +\nUse the replacement parameters. Requests containing the `size` parameter will\nreturn an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `size` parameter is mapped to\nthe `max_docs` parameter.\n====\n\n.The update by query API now rejects unsupported `script` fields.\n[%collapsible]\n====\n*Details* +\nAn update by query API request that includes an unsupported field in the\n`script` object now returns an error. Previously, the API would silently ignore\nthese unsupported fields.\n\n*Impact* +\nTo avoid errors, remove unsupported fields from the `script` object.\n====\n\n.The cat node API's `local` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `?local` parameter to the `GET _cat/nodes` API was deprecated in 7.x and is\nrejected in 8.0. This parameter caused the API to use the local cluster state\nto determine the nodes returned by the API rather than the cluster state from\nthe master, but this API requests information from each selected node\nregardless of the `?local` parameter which means this API does not run in a\nfully node-local fashion.\n\n*Impact* +\nDiscontinue use of the `?local` query parameter. {ref}/cat-nodes.html[cat node\nAPI] requests that include this parameter will return an error.\n====\n\n.The cat shard API's `local` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `?local` parameter to the `GET _cat/shards` API was deprecated in 7.x and is\nrejected in 8.0. This parameter caused the API to use the local cluster state\nto determine the nodes returned by the API rather than the cluster state from\nthe master, but this API requests information from each selected node\nregardless of the `?local` parameter which means this API does not run in a\nfully node-local fashion.\n\n*Impact* +\nDiscontinue use of the `?local` query parameter. {ref}/cat-shards.html[cat shards\nAPI] requests that include this parameter will return an error.\n====\n\n.The cat indices API's `local` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `?local` parameter to the `GET _cat/indices` API was deprecated in 7.x and is\nrejected in 8.0. This parameter caused the API to use the local cluster state\nto determine the nodes returned by the API rather than the cluster state from\nthe master, but this API requests information from each selected node\nregardless of the `?local` parameter which means this API does not run in a\nfully node-local fashion.\n\n*Impact* +\nDiscontinue use of the `?local` query parameter. {ref}/cat-indices.html[cat indices\nAPI] requests that include this parameter will return an error.\n====\n\n.The get field mapping API's `local` query parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `local` parameter for get field mapping API was deprecated in 7.8 and is\nremoved in 8.0. This parameter is a no-op and field mappings are always retrieved\nlocally.\n\n*Impact* +\nDiscontinue use of the `local` query parameter.\n{ref}/indices-get-field-mapping.html[get field mapping API] requests that\ninclude this parameter will return an error.\n====\n\n.Post data to jobs API is deprecated.\n[%collapsible]\n====\n*Details* +\nThe {ml} {ref}/ml-post-data.html[post data to jobs API] is deprecated starting in 7.11.0\nand will be removed in a future major version.\n\n*Impact* +\nUse {ref}/ml-ad-apis.html#ml-api-datafeed-endpoint[{dfeeds}] instead.\n====\n\n.The `job_id` property of the Update {dfeeds} API has been removed.\n[%collapsible]\n====\n*Details* +\nThe ability to update a `job_id` in a {dfeed} was deprecated in 7.3.0. and is\nremoved in 8.0.\n\n*Impact* +\nIt is not possible to move {dfeeds} between {anomaly-jobs}.\n====\n\n.Create repository and delete repository API's return `409` status code when a repository is in use instead of `500`.\n[%collapsible]\n====\n*Details* +\nThe {ref}/put-snapshot-repo-api.html[Create or update snapshot repository API] and\n{ref}/delete-snapshot-repo-api.html[Delete snapshot repository API] return `409`\nstatus code when the request is attempting to modify an existing repository that's in use instead of status code `500`.\n\n*Impact* +\nUpdate client code that handles creation and deletion of repositories to reflect this change.\n====\n\n.The `allow_no_datafeeds` property has been removed from {ml} APIs.\n[%collapsible]\n====\n*Details* +\nThe `allow_no_datafeeds` property was deprecated in the\n{ref}/cat-datafeeds.html[cat {dfeeds}],\n{ref}/ml-get-datafeed.html[get {dfeeds}],\n{ref}/ml-get-datafeed-stats.html[get {dfeed} statistics], and\n{ref}/ml-stop-datafeed.html[stop {dfeeds}] APIs in 7.10.0.\n\n*Impact* +\nUse `allow_no_match` instead.\n====\n\n.The `allow_no_jobs` property has been removed from {ml} APIs.\n[%collapsible]\n====\n*Details* +\nThe `allow_no_jobs` property was deprecated in the\n{ref}/cat-anomaly-detectors.html[cat anomaly detectors],\n{ref}/ml-close-job.html[close {anomaly-jobs}],\n{ref}/ml-get-job.html[get {anomaly-jobs}],\n{ref}/ml-get-job-stats.html[get {anomaly-job} statistics], and\n{ref}/ml-get-overall-buckets.html[get overall buckets] APIs in 7.10.0.\n\n*Impact* +\nUse `allow_no_match` instead.\n====\n\n.The StartRollupJob endpoint now returns a success status if a job has already started.\n[%collapsible]\n====\n*Details* +\nPreviously, attempting to start an already-started rollup job would\nresult in a `500 InternalServerError: Cannot start task for Rollup Job\n[job] because state was [STARTED]` exception.\n\nNow, attempting to start a job that is already started will just\nreturn a successful `200 OK: started` response.\n\n*Impact* +\nUpdate your workflow and applications to assume that a 200 status in response to\nattempting to start a rollup job means the job is in an actively started state.\nThe request itself may have started the job, or it was previously running and so\nthe request had no effect.\n====\n\n.Stored scripts no longer support empty scripts or search templates.\n[%collapsible]\n====\n*Details* +\nThe {ref}/create-stored-script-api.html[create or update stored script API]'s\n`source` parameter cannot be empty.\n\n*Impact* +\nBefore upgrading, use the {ref}/delete-stored-script-api.html[delete stored\nscript API] to delete any empty stored scripts or search templates.\nIn 8.0, {es} will drop any empty stored scripts or empty search templates from\nthe cluster state. Requests to create a stored script or search template with\nan empty `source` will return an error.\n====\n\n.The create or update stored script API's `code` parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe {ref}/create-stored-script-api.html[create or update stored script API]'s\n`code` parameter has been removed. Use the `source` parameter instead.\n\n*Impact* +\nDiscontinue use of the `code` parameter. Requests that include the parameter\nwill return an error.\n====\n\n[[_type-search-matches-no-docs]]\n.Searches on the `_type` field are no longer supported.\n[%collapsible]\n====\n*Details* +\nIn 8.x, the `_type` metadata field has been removed. {es} now handles a search\non the `_type` field as a search on a non-existent field. A search on a\nnon-existent field matches no documents, regardless of the query string.\n\nIn 7.x, a search for `_doc` in the `_type` field would match the same documents\nas a `match_all` query.\n\n*Impact* +\nRemove queries on the `_type` field from your search requests and search\ntemplates. Searches that include these queries may return no results.\n====\n\n[[msearch-empty-line-support]]\n.The multi search API now parses an empty first line as action metadata in text files.\n[%collapsible]\n====\n*Details* +\nThe multi search API now parses an empty first line as empty action metadata\nwhen you provide a text file as the request body, such as when using curl's\n`--data-binary` flag.\n\nThe API no longer supports text files that contain:\n\n* An empty first line followed by a line containing only `{}`.\n* An empty first line followed by another empty line.\n\n*Impact* +\nDon't provide an unsupported text file to the multi search API. Requests that\ninclude an unsupported file will return an error.\n====\n\n[[remove-unmapped-type-string]]\n.The `unmapped_type: string` sort option has been removed.\n[%collapsible]\n====\n*Details* +\nSearch requests no longer support the `unmapped_type: string` sort option.\nInstead, use `unmapped_type: keyword` to handle an unmapped field as if it had\nthe `keyword` field type but ignore its values for sorting.\n\n*Impact* +\nDiscontinue use of `unmapped_type: string`. Search requests that include the\n`unmapped_type: string` sort option will return shard failures.\n====\n\n[[id-field-data]]\n.Aggregating and sorting on `_id` is disallowed by default.\n[%collapsible]\n====\n*Details* +\nPreviously, it was possible to aggregate and sort on the built-in `_id` field\nby loading an expensive data structure called fielddata. This was deprecated\nin 7.6 and is now disallowed by default in 8.0.\n\n*Impact* +\nAggregating and sorting on `_id` should be avoided. As an alternative, the\n`_id` field's contents can be duplicated into another field with docvalues\nenabled (note that this does not apply to auto-generated IDs).\n====\n\n.The `common` query has been removed.\n[%collapsible]\n====\n*Details* +\nThe `common` query, deprecated in 7.x, has been removed in 8.0.\nThe same functionality can be achieved by the `match` query if the total number of hits is not tracked.\n\n*Impact* +\nDiscontinue use of the `common` query. Search requests containing a `common`\nquery will return an error.\n====\n\n.The `cutoff_frequency` parameter has been removed from the `match` and `multi_match` query.\n[%collapsible]\n====\n*Details* +\nThe `cutoff_frequency` parameter, deprecated in 7.x, has been removed in 8.0 from `match` and `multi_match` queries.\nThe same functionality can be achieved without any configuration provided that the total number of hits is not tracked.\n\n*Impact* +\nDiscontinue use of the `cutoff_frequency` parameter. Search requests containing\nthis parameter in a `match` or `multi_match` query will return an error.\n====\n\n.The `nested_filter` and `nested_path` properties have been removed from the search API's `sort` request body parameter.\n[%collapsible]\n====\n*Details* +\nThe `nested_filter` and `nested_path` options, deprecated in 6.x, have been removed in favor of the `nested` context.\n\n*Impact* +\nDiscontinue use of the `sort` request body parameter's `nested_filter` and\n`nested_path` properties. Requests containing these properties will return an\nerror.\n====\n\n.Search and get requests are now routed to shards using adaptive replica selection by default.\n[%collapsible]\n====\n*Details* +\n{es} will no longer prefer using shards in the same location (with the same awareness attribute values) to process\n`_search` and `_get` requests. Adaptive replica selection (activated by default in this version) will route requests\nmore efficiently using the service time of prior inter-node communications.\n\n*Impact* +\nNo action needed.\n====\n\n.Vector functions using `(query, doc['field'])` are no longer supported.\n[%collapsible]\n====\n*Details* +\nThe vector functions of the form `function(query, doc['field'])` were\ndeprecated in 7.6, and are now removed in 8.x. The form\n`function(query, 'field')` should be used instead. For example,\n`cosineSimilarity(query, doc['field'])` is replaced by\n`cosineSimilarity(query, 'field')`.\n\n*Impact* +\nUse the `function(query, 'field')` form. Discontinue use of the `function(query,\ndoc['field'])` form. Requests containing the `function(query,\ndoc['field'])` form will return an error.\n====\n\n.The search API's `indices_boost` request body parameter no longer accepts object values.\n[%collapsible]\n====\n*Details* +\nThe `indices_boost` option in the search request used to accept the boosts\nboth as an object and as an array. The object format has been deprecated since\n5.2 and is now removed in 8.0.\n\n*Impact* +\nUse only array values in the `indices_boost` parameter. Requests containing an\nobject value in the `indices_boost` parameter will return an error.\n====\n\n.The search API's `use_field_mapping` request body parameter has been removed.\n[%collapsible]\n====\n*Details* +\nIn 7.0, we began formatting `docvalue_fields` by default using each field's\nmapping definition. To ease the transition from 6.x, we added the format\noption `use_field_mapping`. This parameter was deprecated in 7.0, and is now\nremoved in 8.0.\n\n*Impact* +\nDiscontinue use of the `use_field_mapping` request body parameter. Requests\ncontaining this parameter will return an error.\n\n*Compatibility* +\nWhen {ref}/rest-api-compatibility.html[rest-api-compatibility] is\n{ref}/rest-api-compatibility.html[requested], the `use_field_mapping` parameter\nis ignored.\n====\n\n.The search API's `from` request body and url parameter cannot be negative.\n[%collapsible]\n====\n*Details* +\nSearch request used to accept `-1` as a `from` in the search body and the url,\ntreating it as the default value of 0. Other negative values got rejected with\nan error already. We now also reject `-1` as an invalid value.\n\n*Impact* +\nChange any use of `-1` as `from` parameter in request body or url parameters by either\nsetting it to `0` or omitting it entirely. Requests containing negative values will\nreturn an error.\n====\n\n.Range queries on date fields treat numeric values alwas as milliseconds-since-epoch.\n[%collapsible]\n====\n*Details* +\nRange queries on date fields used to misinterpret small numbers (e.g. four digits like 1000)\nas a year when no additional format was set, but would interpret other numeric values as\nmilliseconds since epoch. We now treat all numeric values in absence of a specific `format`\nparameter as milliseconds since epoch. If you want to query for years instead, with a missing\n`format` you now need to quote the input value (e.g. \"1984\").\n\n*Impact* +\nIf you query date fields without a specified `format`, check if the values in your queries are\nactually meant to be milliseconds-since-epoch and use a numeric value in this case. If not, use\na string value which gets parsed by either the date format set on the field in the mappings or\nby `strict_date_optional_time` by default.\n====\n\n.The `geo_bounding_box` query's `type` parameter has been removed.\n[%collapsible]\n====\n*Details* +\nThe `geo_bounding_box` query's `type` parameter was deprecated in 7.14.0 and has\nbeen removed in 8.0.0. This parameter is a no-op and has no effect on the query.\n\n*Impact* +\nDiscontinue use of the `type` parameter. `geo_bounding_box` queries that include\nthis parameter will return an error.\n====\n\n.The `type` query has been removed.\n[%collapsible]\n====\n*Details* +\nThe `type` query has been removed. Mapping types have been removed in 8.0.\n\n*Impact* +\nDiscontinue use of the `type` query. Requests that include the `type` query\nwill return an error.\n\n====\n\n.The `kibana_user` role has been renamed `kibana_admin`.\n[%collapsible]\n====\n*Details* +\nUsers who were previously assigned the `kibana_user` role should instead be assigned\nthe `kibana_admin` role. This role grants the same set of privileges as `kibana_user`, but has been\nrenamed to better reflect its intended use.\n\n*Impact* +\nAssign users with the `kibana_user` role to the `kibana_admin` role.\nDiscontinue use of the `kibana_user` role.\n====\n\n[[snapshot-resolve-system-indices]]\n.For snapshot and {slm-init} APIs, the `indices` parameter no longer resolves to system indices or system data streams.\n[%collapsible]\n====\n*Details* +\nFor snapshot and {slm-init} APIs, the `indices` parameter no longer resolves to\nsystem indices or system data streams.\n{ref}/snapshot-restore.html#feature-state[Feature states] are now the only way\nto back up and restore system indices or system data streams from a snapshot.\n\nYou can no longer use the `indices` parameter for the\n{ref}/slm-api-put-policy.html[create {slm-init} policy API] or the\n{ref}/create-snapshot-api.html[create snapshot API] to include a system index in\na snapshot. To back up a system index, use the `include_global_state` and\n`feature_states` parameters to include the corresponding feature state instead.\nBy default, the `include_global_state` and `feature_states` parameters include\nall system indices.\n\nSimilarly, you can no longer use the {ref}/restore-snapshot-api.html[restore snapshot\nAPI]'s `indices` parameter to restore a system index from a snapshot. To restore\na system index, use the `include_global_state` and `feature_states` parameters\nto restore the corresponding feature state instead. By default, the\n`include_global_state` and `feature_states` parameters don't restore any system\nindices.\n\n*Impact* +\nIf you previously used the `indices` parameter to back up or restore system\nindices, update your {slm-init} policies and application to use the\n`include_global_state` and `feature_states` parameters instead.\n\nAn {slm-init} policy that explicitly specifies a system index in the `indices`\nparameter will fail to create snapshots. Similarly, a create snapshot API or\nrestore snapshot API request that explicitly specifies a system index in the\n`indices` parameter will fail and return an error. If the `indices` value\nincludes a wildcard (`*`) pattern, the pattern will no longer match system\nindices.\n====\n\n.Snapshots compress metadata files by default.\n[%collapsible]\n====\n*Details* +\nPreviously, the default value for `compress` was `false`. The default has been changed to `true`.\n\nThis change will affect both newly created repositories and existing repositories where `compress=false` has not been\nexplicitly specified.\n\n*Impact* +\nUpdate your workflow and applications to assume a default value of `true` for\nthe `compress` parameter.\n====\n\n.S3 snapshot repositories now use a DNS-style access pattern by default.\n[%collapsible]\n====\n*Details* +\nStarting in version 7.4, `s3` snapshot repositories no longer use the\nnow-deprecated path-style access pattern by default. In versions 7.0, 7.1, 7.2\nand 7.3 `s3` snapshot repositories always used the path-style access pattern.\nThis is a breaking change for deployments that only support path-style access\nbut which are recognized as supporting DNS-style access by the AWS SDK. This\nbreaking change was made necessary by\nhttps://aws.amazon.com/blogs/aws/amazon-s3-path-deprecation-plan-the-rest-of-the-story/[AWS's\nannouncement] that the path-style access pattern is deprecated and will be\nunsupported on buckets created after September 30th 2020.\n\n*Impact* +\nIf your deployment only supports path-style access and is affected by this\nchange then you must configure the S3 client setting `path_style_access` to\n`true`.\n====\n\n.Restore requests no longer accept settings.\n[%collapsible]\n====\n*Details* +\nIn earlier versions, you could pass both `settings` and `index_settings` in the\nbody of a restore snapshot request, but the `settings` value was ignored. The\nrestore snapshot API now rejects requests that include a `settings` value.\n\n*Impact* +\nDiscontinue use of the `settings` parameter in restore\nsnapshot request. Requests that include these parameters will return an error.\n====\n\n.The repository stats API has been removed.\n[%collapsible]\n====\n*Details* +\nThe repository stats API has been removed. We deprecated this experimental API\nin 7.10.0.\n\n*Impact* +\nUse the {ref}/repositories-metering-apis.html[repositories metering APIs]\ninstead.\n====\n\n.Watcher history now writes to a hidden data stream.\n[%collapsible]\n====\n*Details* +\nIn 8.x, {es} writes Watcher history to a hidden\n`.watcher-history-<index-template-version>` data stream. Previously, {es} wrote\nWatcher history to hidden\n`.watcher-history-<index-template-version>-<yyyy-MM-dd>` indices.\n\n*Impact* +\nUpdate your requests to target the Watcher history data stream. For example, use\nthe `.watcher-history-*` wildcard expression. Requests that specifically target\nnon-existent Watcher history indices may return an error.\n====\n\n.HTTP Status code has changed for the Cluster Health API in case of a server timeout.\n[%collapsible]\n====\n*Details* +\nThe {ref}/cluster-health.html[cluster health API] includes options for waiting\nfor certain health conditions to be satisfied. If the requested conditions are\nnot satisfied within a timeout then {es} will send back a normal response\nincluding the field `\"timed_out\": true`. In earlier versions it would also use\nthe HTTP response code `408 Request timeout` if the request timed out, and `200\nOK` otherwise. The `408 Request timeout` response code is not appropriate for\nthis situation, so from version 8.0.0 {es} will use the response code `200 OK`\nfor both cases.\n\n*Impact* +\nTo detect a server timeout, check the `timed_out` field of the JSON response.\n====\n"
}