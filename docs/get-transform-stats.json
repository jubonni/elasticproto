{
    "meta": {
        "size": 10246,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-transform-stats.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": true,
        "title": "get-transform-stats",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[get-transform-stats]]\n= Get {transform} statistics API\n\n[subs=\"attributes\"]\n++++\n<titleabbrev>Get {transform} statistics</titleabbrev>\n++++\n\nRetrieves usage information for {transforms}.\n\n\n[[get-transform-stats-request]]\n== {api-request-title}\n\n`GET _transform/<transform_id>/_stats`\n\n`GET _transform/<transform_id>,<transform_id>/_stats` +\n\n`GET _transform/_stats` +\n\n`GET _transform/_all/_stats` +\n\n`GET _transform/*/_stats` +\n\n\n[[get-transform-stats-prereqs]]\n== {api-prereq-title}\n\nRequires the following privileges:\n\n* cluster: `monitor_transform` (the `transform_user` built-in role grants this \n  privilege)\n* destination index: `read`, `view_index_metadata`.\n\n\n[[get-transform-stats-desc]]\n== {api-description-title}\n\nYou can get statistics for multiple {transforms} in a single API\nrequest by using a comma-separated list of identifiers or a wildcard expression.\nYou can get statistics for all {transforms} by using `_all`, by\nspecifying `*` as the `<transform_id>`, or by omitting the\n`<transform_id>`.\n\n\n[[get-transform-stats-path-parms]]\n== {api-path-parms-title}\n\n`<transform_id>`::\n(Optional, string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-id-wildcard]\n  \n\n[[get-transform-stats-query-parms]]\n== {api-query-parms-title}\n\n`allow_no_match`::\n(Optional, Boolean)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-match-transforms1]\n\n`from`::\n(Optional, integer)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=from-transforms]\n\n`size`::\n(Optional, integer)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=size-transforms]\n\n[role=\"child_attributes\"]\n[[get-transform-stats-response]]\n== {api-response-body-title}\n\nThe API returns an array of statistics objects for {transforms}, which are\nsorted by the `id` value in ascending order. All of these properties are\ninformational; you cannot update their values.\n\n//Begin checkpointing\n`checkpointing`::\n(object) Contains statistics about <<transform-checkpoints,checkpoints>>.\n+\n.Properties of `checkpointing`\n[%collapsible%open]\n====\n`changes_last_detected_at`:::\n(date)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=checkpointing-changes-last-detected-at]\n\n//Begin checkpointing.last\n`last`:::\n(object) Contains statistics about the last completed checkpoint. \n+\n.Properties of `last`\n[%collapsible%open]\n=====\n`checkpoint`::::\n(integer) The sequence number for the checkpoint.\n`time_upper_bound_millis`::::\n(date) When using time-based synchronization, this timestamp indicates the\nupper bound of data that is included in the checkpoint.\n`timestamp_millis`::::\n(date) The timestamp of the checkpoint, which indicates when the checkpoint\nwas created.\n=====\n//End checkpointing.last\n\n`last_search_time`:::\n(date)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=checkpointing-last-search-time]\n\n//Begin checkpointing.next\n`next`:::\n(object) Contains statistics about the next checkpoint that is currently in\nprogress. This object appears only when the {transform} `state` is `indexing`.\n+\n.Properties of `next`\n[%collapsible%open]\n=====\n`checkpoint`::::\n(integer) The sequence number for the checkpoint.\n\n`checkpoint_progress`::::\n(object) Contains statistics about the progress of the checkpoint. For example,\nit lists the `total_docs`, `docs_remaining`, `percent_complete`,\n`docs_processed`, and `docs_indexed`. This information is available only for\nbatch {transforms} and the first checkpoint of {ctransforms}.\n\n`time_upper_bound_millis`::::\n(date) When using time-based synchronization, this timestamp indicates the\nupper bound of data that is included in the checkpoint.\n\n`timestamp_millis`::::\n(date) The timestamp of the checkpoint, which indicates when the checkpoint was\ncreated.\n=====\n//End checkpointing.next\n\n`operations_behind`:::\n(integer) The number of operations that have occurred on the source index but\nhave not been applied to the destination index yet. A high number can indicate\nthat the {transform} is failing to keep up. \n====\n//End checkpointing\n\n//Begin health\n`health`::\n(object) Health indicator for this {transform}.\n+\n.Properties of `health`\n[%collapsible%open]\n====\n`status`::\n    (string) Health status of this transform. Statuses are:\n\n   * `green`:\n      The transform is healthy.\n\n    * `unknown`:\n      The health of the transform could not be determined.\n\n    * `yellow`:\n      The functionality of the transform is in a degraded state and may need \n      remediation to avoid the health becoming `red`.\n\n    * `red`:\n      The transform is experiencing an outage or is unavailable for use.\n\n`issues`::\n    (Optional, array) If a non-healthy status is returned, contains a list of issues\n    of the transform.\n+\n.Properties of `issues`\n[%collapsible%open]\n========\n`issue`::\n    (string) A description of the issue.\n\n`details`::\n    (Optional, string) Details about the issue.\n\n`count`::\n    (integer) Number of times the issue has occured since it started.\n\n`first_occurrence`::\n    (Optional, date) The timestamp this issue occured for the first time.\n========\n//End issues\n\n====\n//End health\n\n`id`::\n(string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=transform-id]\n\n//Begin node\n`node`::\n(object) For started {transforms} only, the node upon which the {transform} is\nstarted.\n+\n.Properties of `node`\n[%collapsible%open]\n====\n`attributes`:::\n(object) A list of attributes for the node.\n\n`ephemeral_id`:::\n(string) The node ephemeral ID.\n\n`id`:::\n(string) The unique identifier of the node. For example, \"0-o0tOoRTwKFZifatTWKNw\".\n\n`name`:::\n(string) The node name. For example, `0-o0tOo`.\n\n`transport_address`:::\n(string) The host and port where transport HTTP connections are accepted. For\nexample, `127.0.0.1:9300`.\n====\n//End node\n\n`reason`::\n(string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=state-transform-reason]\n\n`state`::\n(string)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=state-transform]\n\n//Begin stats\n`stats`::\n(object) An object that provides statistical information about the {transform}.\n+\n.Properties of `stats`\n[%collapsible%open]\n====\n\n`delete_time_in_ms`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=delete-time-ms]\n\n`documents_deleted`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=docs-deleted-transform]\n\n`documents_indexed`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=docs-indexed]\n\n`documents_processed`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=docs-processed]\n\n`exponential_avg_checkpoint_duration_ms`:::\n(double)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=exponential-avg-checkpoint-duration-ms]\n\n`exponential_avg_documents_indexed`:::\n(double)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=exponential-avg-documents-indexed]\n\n`exponential_avg_documents_processed`:::\n(double)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=exponential-avg-documents-processed]\n\n`index_failures`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-failures]\n\n`index_time_in_ms`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-time-ms]\n\n`index_total`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-total]\n\n`pages_processed`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=pages-processed]\n\n`processing_time_in_ms`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=processing-time-ms]\n\n`processing_total`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=processing-total]\n\n`search_failures`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=search-failures]\n\n`search_time_in_ms`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=search-time-ms]\n\n`search_total`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=search-total]\n\n`trigger_count`:::\n(long)\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=trigger-count]\n====\n//End stats\n  \n[[get-transform-stats-response-codes]]\n== {api-response-codes-title}\n\n`404` (Missing resources)::\n  If `allow_no_match` is `false`, this code indicates that there are no\n  resources that match the request or only partial matches for the request. \n\n[[get-transform-stats-example]]\n== Examples\n\nThe following example skips for the first five {transforms} and\ngets usage information for a maximum of ten results: \n\n[source,console]\n--------------------------------------------------\nGET _transform/_stats?from=5&size=10\n--------------------------------------------------\n// TEST[skip:todo]\n\nThe following example gets usage information for the {transform}:\n\n[source,console]\n--------------------------------------------------\nGET _transform/ecommerce-customer-transform/_stats\n--------------------------------------------------\n// TEST[skip:todo]\n\nThe API returns the following results:\n\n[source,console-result]\n----\n{\n  \"count\" : 1,\n  \"transforms\" : [\n    {\n      \"id\" : \"ecommerce-customer-transform\",\n      \"state\" : \"started\",\n      \"node\" : {\n        \"id\" : \"cpTIGMsVQ8Gqwqlxxxxxxx\",\n        \"name\" : \"my.home\",\n        \"ephemeral_id\" : \"5-L21nFsQxxxxxxxxxx-xx\",\n        \"transport_address\" : \"127.0.0.1:9300\",\n        \"attributes\" : { }\n      },\n      \"stats\" : {\n        \"pages_processed\" : 78,\n        \"documents_processed\" : 6027,\n        \"documents_indexed\" : 68,\n        \"documents_deleted\": 22,\n        \"delete_time_in_ms\": 214,\n        \"trigger_count\" : 168,\n        \"index_time_in_ms\" : 412,\n        \"index_total\" : 20,\n        \"index_failures\" : 0,\n        \"search_time_in_ms\" : 353,\n        \"search_total\" : 78,\n        \"search_failures\" : 0,\n        \"processing_time_in_ms\" : 8,\n        \"processing_total\" : 78,\n        \"exponential_avg_checkpoint_duration_ms\" : 97.30637923893185,\n        \"exponential_avg_documents_indexed\" : 2.2064915040974062,\n        \"exponential_avg_documents_processed\" : 179.89419945785045\n      },\n      \"checkpointing\" : {\n        \"last\" : {\n          \"checkpoint\" : 20,\n          \"timestamp_millis\" : 1585344558220,\n          \"time_upper_bound_millis\" : 1585344498220\n        },\n        \"changes_last_detected_at\" : 1585344558219\n      },\n      \"health\": {\n        \"status\": \"green\"\n      }\n    }\n  ]\n}\n----\n"
}