{
    "meta": {
        "size": 2755,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/stopping-elasticsearch.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "stopping-elasticsearch",
        "version": "8.15"
    },
    "doc": "[[stopping-elasticsearch]]\n== Stopping Elasticsearch\n\nAn orderly shutdown of Elasticsearch ensures that Elasticsearch has a chance to cleanup and close\noutstanding resources. For example, a node that is shutdown in an orderly fashion will remove itself\nfrom the cluster, sync translogs to disk, and perform other related cleanup activities. You can help\nensure an orderly shutdown by properly stopping Elasticsearch.\n\nIf you're running Elasticsearch as a service, you can stop Elasticsearch via the service management\nfunctionality provided by your installation.\n\nIf you're running Elasticsearch directly, you can stop Elasticsearch by sending control-C if you're\nrunning Elasticsearch in the console, or by sending `SIGTERM` to the Elasticsearch process on a\nPOSIX system. You can obtain the PID to send the signal to via various tools (e.g., `ps` or `jps`):\n\n[source,sh]\n--------------------------------------------------\n$ jps | grep Elasticsearch\n14542 Elasticsearch\n--------------------------------------------------\n\nFrom the Elasticsearch startup logs:\n\n[source,sh]\n--------------------------------------------------\n[2016-07-07 12:26:18,908][INFO ][node                     ] [I8hydUG] version[5.0.0-alpha4], pid[15399], build[3f5b994/2016-06-27T16:23:46.861Z], OS[Mac OS X/10.11.5/x86_64], JVM[Oracle Corporation/Java HotSpot(TM) 64-Bit Server VM/1.8.0_92/25.92-b14]\n--------------------------------------------------\n\nOr by specifying a location to write a PID file to on startup (`-p <path>`):\n\n[source,sh]\n--------------------------------------------------\n$ ./bin/elasticsearch -p /tmp/elasticsearch-pid -d\n$ cat /tmp/elasticsearch-pid && echo\n15516\n$ kill -SIGTERM 15516\n--------------------------------------------------\n\n[discrete]\n[[fatal-errors]]\n=== Stopping on Fatal Errors\n\nDuring the life of the Elasticsearch virtual machine, certain fatal errors could arise that put the\nvirtual machine in a questionable state. Such fatal errors include out of memory errors, internal\nerrors in virtual machine, and serious I/O errors.\n\nWhen Elasticsearch detects that the virtual machine has encountered such a fatal error Elasticsearch\nwill attempt to log the error and then will halt the virtual machine. When Elasticsearch initiates\nsuch a shutdown, it does not go through an orderly shutdown as described above. The Elasticsearch\nprocess will also return with a special status code indicating the nature of the error.\n\n[horizontal]\nKilled by jvmkiller agent:: 158\nUser or kernel SIGTERM:: 143\nSlain by kernel oom-killer:: 137\nSegmentation fault:: 134\nJVM internal error:: 128\nOut of memory error:: 127\nStack overflow error:: 126\nUnknown virtual machine error:: 125\nSerious I/O error:: 124\nBootstrap check failure:: 78\nUnknown fatal error:: 1\n"
}