{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.263068",
        "size": 5494,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-get-rollup-caps.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "rollup-get-rollup-caps",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[rollup-get-rollup-caps]]\n=== Get {rollup-job} capabilities API\n++++\n<titleabbrev>Get rollup caps</titleabbrev>\n++++\n\ndeprecated::[8.11.0,\"Rollups will be removed in a future version. Use <<downsampling,downsampling>> instead.\"]\n\nReturns the capabilities of any {rollup-jobs} that have been configured for a\nspecific index or index pattern.\n\n[[rollup-get-rollup-caps-request]]\n==== {api-request-title}\n\n`GET _rollup/data/<index>`\n\n[[rollup-get-rollup-caps-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have `monitor`,\n`monitor_rollup`, `manage` or `manage_rollup` cluster privileges to use this API.\nFor more information, see <<security-privileges>>.\n\n[[rollup-get-rollup-caps-desc]]\n==== {api-description-title}\n\nThis API is useful because a {rollup-job} is often configured to rollup only a\nsubset of fields from the source index. Furthermore, only certain aggregations\ncan be configured for various fields, leading to a limited subset of\nfunctionality depending on that configuration.\n\nThis API enables you to inspect an index and determine:\n\n1. Does this index have associated rollup data somewhere in the cluster?\n2. If yes to the first question, what fields were rolled up, what aggregations\ncan be performed, and where does the data live?\n\n[[rollup-get-rollup-path-params]]\n==== {api-path-parms-title}\n\n`<index>`::\n  (string) Index, indices or index-pattern to return rollup capabilities for.\n  `_all` may be used to fetch rollup capabilities from all jobs.\n\n\n[[rollup-get-rollup-example]]\n==== {api-examples-title}\n\nImagine we have an index named `sensor-1` full of raw data. We know that the\ndata will grow over time, so there will be a `sensor-2`, `sensor-3`, etc. Let's\ncreate a {rollup-job} that targets the index pattern `sensor-*` to accommodate\nthis future scaling:\n\n[source,console]\n--------------------------------------------------\nPUT _rollup/job/sensor\n{\n  \"index_pattern\": \"sensor-*\",\n  \"rollup_index\": \"sensor_rollup\",\n  \"cron\": \"*/30 * * * * ?\",\n  \"page_size\": 1000,\n  \"groups\": {\n    \"date_histogram\": {\n      \"field\": \"timestamp\",\n      \"fixed_interval\": \"1h\",\n      \"delay\": \"7d\"\n    },\n    \"terms\": {\n      \"fields\": [ \"node\" ]\n    }\n  },\n  \"metrics\": [\n    {\n      \"field\": \"temperature\",\n      \"metrics\": [ \"min\", \"max\", \"sum\" ]\n    },\n    {\n      \"field\": \"voltage\",\n      \"metrics\": [ \"avg\" ]\n    }\n  ]\n}\n--------------------------------------------------\n// TEST[setup:sensor_index]\n\nWe can then retrieve the rollup capabilities of that index pattern (`sensor-*`)\nvia the following command:\n\n[source,console]\n--------------------------------------------------\nGET _rollup/data/sensor-*\n--------------------------------------------------\n// TEST[continued]\n\nWhich will yield the following response:\n\n[source,console-result]\n----\n{\n  \"sensor-*\" : {\n    \"rollup_jobs\" : [\n      {\n        \"job_id\" : \"sensor\",\n        \"rollup_index\" : \"sensor_rollup\",\n        \"index_pattern\" : \"sensor-*\",\n        \"fields\" : {\n          \"node\" : [\n            {\n              \"agg\" : \"terms\"\n            }\n          ],\n          \"temperature\" : [\n            {\n              \"agg\" : \"min\"\n            },\n            {\n              \"agg\" : \"max\"\n            },\n            {\n              \"agg\" : \"sum\"\n            }\n          ],\n          \"timestamp\" : [\n            {\n              \"agg\" : \"date_histogram\",\n              \"time_zone\" : \"UTC\",\n              \"fixed_interval\" : \"1h\",\n              \"delay\": \"7d\"\n            }\n          ],\n          \"voltage\" : [\n            {\n              \"agg\" : \"avg\"\n            }\n          ]\n        }\n      }\n    ]\n  }\n}\n----\n\nThe response that is returned contains information that is similar to the\noriginal rollup configuration, but formatted differently. First, there are some\nhouse-keeping details: the {rollup-job} ID, the index that holds the rolled data,\nand the index pattern that the job was targeting.\n\nNext it shows a list of fields that contain data eligible for rollup searches.\nHere we see four fields: `node`, `temperature`, `timestamp` and `voltage`. Each\nof these fields list the aggregations that are possible. For example, you can\nuse a min, max or sum aggregation on the `temperature` field, but only a\n`date_histogram` on `timestamp`.\n\nNote that the `rollup_jobs` element is an array; there can be multiple,\nindependent jobs configured for a single index or index pattern. Each of these\njobs may have different configurations, so the API returns a list of all the\nvarious configurations available.\n\nWe could also retrieve the same information with a request to `_all`:\n\n[source,console]\n--------------------------------------------------\nGET _rollup/data/_all\n--------------------------------------------------\n// TEST[continued]\n\nBut note that if we use the concrete index name (`sensor-1`), we'll retrieve no\nrollup capabilities:\n\n[source,console]\n--------------------------------------------------\nGET _rollup/data/sensor-1\n--------------------------------------------------\n// TEST[continued]\n\n[source,console-result]\n----\n{\n\n}\n----\n\nWhy is this?  The original {rollup-job} was configured against a specific index\npattern (`sensor-*`) not a concrete index (`sensor-1`). So while the index\nbelongs to the pattern, the {rollup-job} is only valid across the entirety of\nthe pattern not just one of it's containing indices. So for that reason, the\nget rollup capabilities API only returns information based on the originally\nconfigured index name or pattern.\n"
}