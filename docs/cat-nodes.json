{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.053580",
        "size": 12054,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-nodes.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "cat-nodes",
        "version": "8.15"
    },
    "doc": "[[cat-nodes]]\n=== cat nodes API\n\n++++\n<titleabbrev>cat nodes</titleabbrev>\n++++\n\n[IMPORTANT]\n====\ncat APIs are only intended for human consumption using the command line or {kib}\nconsole.\nThey are _not_ intended for use by applications.\nFor application consumption, use the <<cluster-nodes-info,nodes info API>>.\n====\n\nReturns information about a <<modules-node,cluster's nodes>>.\n\n[[cat-nodes-api-request]]\n==== {api-request-title}\n\n`GET /_cat/nodes`\n\n[[cat-nodes-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `monitor` or\n`manage` <<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[cat-nodes-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=bytes]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=http-format]\n\n`full_id`::\n(Optional, Boolean) If `true`, return the full node ID.\nIf `false`, return the shortened node ID.\nDefaults to `false`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-h]\n+\n--\nIf you do not specify which columns to include, the API returns the default columns in the order listed below.\nIf you explicitly specify one or more columns, it only returns the specified columns.\n\nValid columns are:\n\n`ip`, `i`::\n(Default) IP address, such as `127.0.1.1`.\n\n`heap.percent`, `hp`, `heapPercent`::\n(Default) Used percentage of total allocated Elasticsearch JVM heap, such as `7`. This reflects only the {es} process running within the operating system and is the most direct indicator of its JVM/heap/memory resource performance.\n\n`heap.max`, `hm`, `heapMax`::\nTotal heap, such as `4gb`.\n\n`ram.percent`, `rp`, `ramPercent`::\n(Default) Used percentage of total operating system's memory, such as `47`. This reflects all processes running on operating system instead of only {es} and is not guaranteed to correlate to its performance. \n\n`file_desc.percent`, `fdp`, `fileDescriptorPercent`::\nUsed file descriptors percentage, such as `1`.\n\n`node.role`, `r`, `role`, `nodeRole`::\n(Default) Roles of the node.\nReturned values include\n`c` (cold node),\n`d` (data node),\n`f` (frozen node),\n`h` (hot node),\n`i` (ingest node),\n`l` (machine learning node),\n`m` (master-eligible node),\n`r` (remote cluster client node),\n`s` (content node),\n`t` ({transform} node),\n`v` (voting-only node),\n`w` (warm node), and\n`-` (coordinating node only).\n+\nFor example, `dim` indicates a master-eligible data and ingest node.\nSee\n<<modules-node>>.\n\n`master`, `m`::\n(Default) Indicates whether the node is the elected master node.\nReturned values include `*` (elected master) and `-` (not elected master).\n\n`name`, `n`::\n(Default) Node name, such as `I8hydUG`.\n\n`id`, `nodeId`::\nID of the node, such as `k0zy`.\n\n`pid`, `p`::\nProcess ID, such as `13061`.\n\n`port`, `po`::\nBound transport port, such as `9300`.\n\n`http_address`, `http`::\nBound http address, such as `127.0.0.1:9200`.\n\n`version`, `v`::\nElasticsearch version, such as {version}.\n\n`build`, `b`::\nElasticsearch build hash, such as `5c03844`.\n\n`jdk`, `j`::\nJava version, such as `1.8.0`.\n\n`disk.total`, `dt`, `diskTotal`::\nTotal disk space, such as `458.3gb`.\n\n`disk.used`, `du`, `diskUsed`::\nUsed disk space, such as `259.8gb`.\n\n`disk.avail`, `d`, `disk`, `diskAvail`::\nAvailable disk space, such as `198.4gb`.\n\n`disk.used_percent`, `dup`, `diskUsedPercent`::\nUsed disk space percentage, such as `47`.\n\n`heap.current`, `hc`, `heapCurrent`::\nUsed heap, such as `311.2mb`.\n\n`ram.current`,`rc`, `ramCurrent`::\nUsed total memory, such as `513.4mb`.\n\n`ram.max`, `rm`, `ramMax`::\nTotal memory, such as `2.9gb`.\n\n`file_desc.current`, `fdc`, `fileDescriptorCurrent`::\nUsed file descriptors, such as `123`.\n\n`file_desc.max`, `fdm`, `fileDescriptorMax`::\nMaximum number of file descriptors, such as `1024`.\n\n`cpu`::\n(Default) Recent system CPU usage as percent, such as `12`.\n\n`load_1m`, `l`::\n(Default) Most recent load average, such as `0.22`.\n\n`load_5m`, `l`::\n(Default) Load average for the last five minutes, such as `0.78`.\n\n`load_15m`, `l`::\n(Default) Load average for the last fifteen minutes, such as `1.24`.\n\n`uptime`, `u`::\nNode uptime, such as `17.3m`.\n\n`completion.size`, `cs`, `completionSize`::\nSize of completion, such as `0b`.\n\n`fielddata.memory_size`, `fm`, `fielddataMemory`::\nUsed fielddata cache memory, such as `0b`.\n\n`fielddata.evictions`, `fe`, `fielddataEvictions`::\nFielddata cache evictions, such as `0`.\n\n`query_cache.memory_size`, `qcm`, `queryCacheMemory`::\nUsed query cache memory, such as `0b`.\n\n`query_cache.evictions`, `qce`, `queryCacheEvictions`::\nQuery cache evictions, such as `0`.\n\n`query_cache.hit_count`, `qchc`, `queryCacheHitCount`::\nQuery cache hit count, such as `0`.\n\n`query_cache.miss_count`, `qcmc`, `queryCacheMissCount`::\nQuery cache miss count, such as `0`.\n\n`request_cache.memory_size`, `rcm`, `requestCacheMemory`::\nUsed request cache memory, such as `0b`.\n\n`request_cache.evictions`, `rce`, `requestCacheEvictions`::\nRequest cache evictions, such as `0`.\n\n`request_cache.hit_count`, `rchc`, `requestCacheHitCount`::\nRequest cache hit count, such as `0`.\n\n`request_cache.miss_count`, `rcmc`, `requestCacheMissCount`::\nRequest cache miss count, such as `0`.\n\n`flush.total`, `ft`, `flushTotal`::\nNumber of flushes, such as `1`.\n\n`flush.total_time`, `ftt`, `flushTotalTime`::\nTime spent in flush, such as `1`.\n\n`get.current`, `gc`, `getCurrent`::\nNumber of current get operations, such as `0`.\n\n`get.time`, `gti`, `getTime`::\nTime spent in get, such as `14ms`.\n\n`get.total`, `gto`, `getTotal`::\nNumber of get operations, such as `2`.\n\n`get.exists_time`, `geti`, `getExistsTime`::\nTime spent in successful gets, such as `14ms`.\n\n`get.exists_total`, `geto`, `getExistsTotal`::\nNumber of successful get operations, such as `2`.\n\n`get.missing_time`, `gmti`, `getMissingTime`::\nTime spent in failed gets, such as `0s`.\n\n`get.missing_total`, `gmto`, `getMissingTotal`::\nNumber of failed get operations, such as `1`.\n\n`indexing.delete_current`, `idc`, `indexingDeleteCurrent`::\nNumber of current deletion operations, such as `0`.\n\n`indexing.delete_time`, `idti`, `indexingDeleteTime`::\nTime spent in deletions, such as `2ms`.\n\n`indexing.delete_total`, `idto`, `indexingDeleteTotal`::\nNumber of deletion operations, such as `2`.\n\n`indexing.index_current`, `iic`, `indexingIndexCurrent`::\nNumber of current indexing operations, such as `0`.\n\n`indexing.index_time`, `iiti`, `indexingIndexTime`::\nTime spent in indexing, such as `134ms`.\n\n`indexing.index_total`, `iito`, `indexingIndexTotal`::\nNumber of indexing operations, such as `1`.\n\n`indexing.index_failed`, `iif`, `indexingIndexFailed`::\nNumber of failed indexing operations, such as `0`.\n\n`merges.current`, `mc`, `mergesCurrent`::\nNumber of current merge operations, such as `0`.\n\n`merges.current_docs`, `mcd`, `mergesCurrentDocs`::\nNumber of current merging documents, such as `0`.\n\n`merges.current_size`, `mcs`, `mergesCurrentSize`::\nSize of current merges, such as `0b`.\n\n`merges.total`, `mt`, `mergesTotal`::\nNumber of completed merge operations, such as `0`.\n\n`merges.total_docs`, `mtd`, `mergesTotalDocs`::\nNumber of merged documents, such as `0`.\n\n`merges.total_size`, `mts`, `mergesTotalSize`::\nSize of current merges, such as `0b`.\n\n`merges.total_time`, `mtt`, `mergesTotalTime`::\nTime spent merging documents, such as `0s`.\n\n`refresh.total`, `rto`, `refreshTotal`::\nNumber of refreshes, such as `16`.\n\n`refresh.time`, `rti`, `refreshTime`::\nTime spent in refreshes, such as `91ms`.\n\n`script.compilations`, `scrcc`, `scriptCompilations`::\nTotal script compilations, such as `17`.\n\n`script.cache_evictions`, `scrce`, `scriptCacheEvictions`::\nTotal compiled scripts evicted from cache, such as `6`.\n\n`search.fetch_current`, `sfc`, `searchFetchCurrent`::\nCurrent fetch phase operations, such as `0`.\n\n`search.fetch_time`, `sfti`, `searchFetchTime`::\nTime spent in fetch phase, such as `37ms`.\n\n`search.fetch_total`, `sfto`, `searchFetchTotal`::\nNumber of fetch operations, such as `7`.\n\n`search.open_contexts`, `so`, `searchOpenContexts`::\nOpen search contexts, such as `0`.\n\n`search.query_current`, `sqc`, `searchQueryCurrent`::\nCurrent query phase operations, such as `0`.\n\n`search.query_time`, `sqti`, `searchQueryTime`::\nTime spent in query phase, such as `43ms`.\n\n`search.query_total`, `sqto`, `searchQueryTotal`::\nNumber of query operations, such as `9`.\n\n`search.scroll_current`, `scc`, `searchScrollCurrent`::\nOpen scroll contexts, such as `2`.\n\n`search.scroll_time`, `scti`, `searchScrollTime`::\nTime scroll contexts held open, such as `2m`.\n\n`search.scroll_total`, `scto`, `searchScrollTotal`::\nCompleted scroll contexts, such as `1`.\n\n`segments.count`, `sc`, `segmentsCount`::\nNumber of segments, such as `4`.\n\n`segments.memory`, `sm`, `segmentsMemory`::\nMemory used by segments, such as `1.4kb`.\n\n`segments.index_writer_memory`, `siwm`, `segmentsIndexWriterMemory`::\nMemory used by index writer, such as `18mb`.\n\n`segments.version_map_memory`, `svmm`, `segmentsVersionMapMemory`::\nMemory used by version map, such as `1.0kb`.\n\n`segments.fixed_bitset_memory`, `sfbm`, `fixedBitsetMemory`::\nMemory used by fixed bit sets for nested object field types and type filters for types referred in <<parent-join,`join`>> fields, such as `1.0kb`.\n\n`suggest.current`, `suc`, `suggestCurrent`::\nNumber of current suggest operations, such as `0`.\n\n`suggest.time`, `suti`, `suggestTime`::\nTime spent in suggest, such as `0`.\n\n`suggest.total`, `suto`, `suggestTotal`::\nNumber of suggest operations, such as `0`.\n\n`shard_stats.total_count`, `sstc`, `shards`, `shardStatsTotalCount`::\nNumber of shards assigned.\n\n`mappings.total_count`, `mtc`, `mappingsTotalCount`::\nNumber of mappings, including <<runtime,runtime>> and <<object,object>> fields.\n\n`mappings.total_estimated_overhead_in_bytes`, `mteo`, `mappingsTotalEstimatedOverheadInBytes`::\nEstimated heap overhead, in bytes, of mappings on this node, which allows for 1KiB of heap for every mapped field.\n--\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=help]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-s]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=time]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-v]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=include-unloaded-segments]\n\n[[cat-nodes-api-example]]\n==== {api-examples-title}\n\n[[cat-nodes-api-ex-default]]\n===== Example with default columns\n\n[source,console]\n--------------------------------------------------\nGET /_cat/nodes?v=true\n--------------------------------------------------\n\nThe API returns the following response:\n\n[source,txt]\n--------------------------------------------------\nip        heap.percent ram.percent cpu load_1m load_5m load_15m node.role master name\n127.0.0.1           65          99  42    3.07                  dim       *      mJw06l1\n--------------------------------------------------\n// TESTRESPONSE[s/3.07/(\\\\d+\\\\.\\\\d+( \\\\d+\\\\.\\\\d+ (\\\\d+\\\\.\\\\d+)?)?)?/]\n// TESTRESPONSE[s/65          99  42/\\\\d+ \\\\d+ \\\\d+/]\n// TESTRESPONSE[s/dim/.+/ s/[*]/[*]/ s/mJw06l1/.+/ non_json]\n\nThe `ip`, `heap.percent`, `ram.percent`, `cpu`, and `load_*` columns provide the IP addresses and performance information of each node.\n\nThe `node.role`, `master`, and `name` columns provide information useful for monitoring an entire cluster, particularly large ones.\n\n[[cat-nodes-api-ex-headings]]\n===== Example with explicit columns\n\nThe following API request returns the `id`, `ip`, `port`, `v` (version), and `m`\n(master) columns.\n\n[source,console]\n--------------------------------------------------\nGET /_cat/nodes?v=true&h=id,ip,port,v,m\n--------------------------------------------------\n\nThe API returns the following response:\n\n[\"source\",\"txt\",subs=\"attributes,callouts\"]\n--------------------------------------------------\nid   ip        port  v         m\nveJR 127.0.0.1 59938 {version} *\n--------------------------------------------------\n// TESTRESPONSE[s/veJR/.+/ s/59938/\\\\d+/ s/[*]/[*]/ non_json]\n"
}