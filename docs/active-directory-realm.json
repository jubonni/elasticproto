{
    "meta": {
        "timestamp": "2024-11-01T03:07:08.717289",
        "size": 2889,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/active-directory-realm.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "active-directory-realm",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[active-directory-realm]]\n=== Active Directory user authentication\n\nYou can configure {stack} {security-features} to communicate with Active\nDirectory to authenticate users. See <<ad-realm-configuration>>.\n\nThe {security-features} use LDAP to communicate with Active Directory, so\n`active_directory` realms are similar to <<ldap-realm, `ldap` realms>>. Like\nLDAP directories, Active Directory stores users and groups hierarchically. The\ndirectory's hierarchy is built from containers such as the _organizational unit_\n(`ou`), _organization_ (`o`), and _domain component_ (`dc`).\n\nThe path to an entry is a _Distinguished Name_ (DN) that uniquely identifies a\nuser or group. User and group names typically have attributes such as a\n_common name_ (`cn`) or _unique ID_ (`uid`). A DN is specified as a string, for\nexample `\"cn=admin,dc=example,dc=com\"` (white spaces are ignored).\n\nThe {security-features} supports only Active Directory security groups. You\ncannot map distribution groups to roles.\n\nNOTE: When you use Active Directory for authentication, the username entered by\n      the user is expected to match the `sAMAccountName` or `userPrincipalName`,\n      not the common name.\n\nThe Active Directory realm authenticates users using an LDAP bind request. After\nauthenticating the user, the realm then searches to find the user's entry in\nActive Directory. Once the user has been found, the Active Directory realm then\nretrieves the user's group memberships from the `tokenGroups` attribute on the\nuser's entry in Active Directory.\n\n[[ad-realm-configuration]]\n==== Configuring an Active Directory realm\n\ninclude::configuring-active-directory-realm.asciidoc[]\n\n[[ad-user-metadata]]\n==== User metadata in Active Directory realms\nWhen a user is authenticated via an Active Directory realm, the following\nproperties are populated in the user's _metadata_:\n\n|=======================\n| Field               | Description\n| `ldap_dn`           | The distinguished name of the user.\n| `ldap_groups`       | The distinguished name of each of the groups that were\n                        resolved for the user (regardless of whether those\n                        groups were mapped to a role).\n|=======================\n\nThis metadata is returned in the\n<<security-api-authenticate,authenticate API>> and can be used with\n<<templating-role-query, templated queries>> in roles.\n\nAdditional metadata can be extracted from the Active Directory server by configuring\nthe `metadata` setting on the Active Directory realm.\n\n[[ad-load-balancing]]\n==== Load balancing and failover\nThe `load_balance.type` setting can be used at the realm level to configure how\nthe {security-features} should interact with multiple Active Directory servers.\nTwo modes of operation are supported: failover and load balancing.\n\nSee\n<<load-balancing>>.\n\ninclude::../securing-communications/tls-ad.asciidoc[]\n"
}