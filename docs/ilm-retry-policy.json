{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.099271",
        "size": 1585,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-retry-policy.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ilm-retry-policy",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-retry-policy]]\n=== Retry policy execution API\n++++\n<titleabbrev>Retry policy</titleabbrev>\n++++\n\nRetry executing the <<index-lifecycle-management,lifecycle>> policy for an index that is in the ERROR step.\n\n[[ilm-retry-policy-request]]\n==== {api-request-title}\n\n`POST <index>/_ilm/retry`\n\n[[ilm-retry-policy-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage_ilm`\nprivileges on the indices being managed to use this API. For more information,\nsee <<security-privileges>>.\n\n[[ilm-retry-policy-desc]]\n==== {api-description-title}\n\nSets the policy back to the step where the error occurred and executes the step.\nUse the <<ilm-explain-lifecycle, {ilm-init} Explain API>> to determine if an index is in the ERROR\nstep.\n\n[[ilm-retry-policy-path-params]]\n==== {api-path-parms-title}\n\n`<index>`::\n  (Required, string) Identifier for the indices to retry in comma-separated format.\n\n[[ilm-retry-policy-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[[ilm-retry-policy-example]]\n==== {api-examples-title}\n\nThe following example retries the policy for `my-index-000001`.\n\n[source,js]\n--------------------------------------------------\nPOST my-index-000001/_ilm/retry\n--------------------------------------------------\n// NOTCONSOLE\n\nIf the request succeeds, you receive the following result:\n\n[source,js]\n--------------------------------------------------\n{\n  \"acknowledged\": true\n}\n--------------------------------------------------\n// NOTCONSOLE\n"
}