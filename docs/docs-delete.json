{
    "meta": {
        "size": 6361,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-delete.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "docs-delete",
        "version": "8.15"
    },
    "doc": "[[docs-delete]]\n=== Delete API\n++++\n<titleabbrev>Delete</titleabbrev>\n++++\n\nRemoves a JSON document from the specified index.\n\n[[docs-delete-api-request]]\n==== {api-request-title}\n\n`DELETE /<index>/_doc/<_id>`\n\n[[docs-delete-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `delete` or\n`write` <<privileges-list-indices,index privilege>> for the target index or\nindex alias.\n\n[[docs-delete-api-desc]]\n==== {api-description-title}\n\nYou use DELETE to remove a document from an index. You must specify the\nindex name and document ID.\n\nNOTE: You cannot send deletion requests directly to a data stream. To delete a\ndocument in a data stream, you must target the backing index containing the\ndocument. See <<update-delete-docs-in-a-backing-index>>.\n\n[discrete]\n[[optimistic-concurrency-control-delete]]\n===== Optimistic concurrency control\n\nDelete operations can be made conditional and only be performed if the last\nmodification to the document was assigned the sequence number and primary\nterm specified by the `if_seq_no` and `if_primary_term` parameters. If a\nmismatch is detected, the operation will result in a `VersionConflictException`\nand a status code of 409. See <<optimistic-concurrency-control>> for more details.\n\n[discrete]\n[[delete-versioning]]\n===== Versioning\n\nEach document indexed is versioned. When deleting a document, the `version` can\nbe specified to make sure the relevant document we are trying to delete is\nactually being deleted and it has not changed in the meantime. Every write\noperation executed on a document, deletes included, causes its version to be\nincremented. The version number of a deleted document remains available for a\nshort time after deletion to allow for control of concurrent operations. The\nlength of time for which a deleted document's version remains available is\ndetermined by the `index.gc_deletes` index setting and defaults to 60 seconds.\n\n[discrete]\n[[delete-routing]]\n===== Routing\n\nIf routing is used during indexing, the routing value also needs to be\nspecified to delete a document.\n\nIf the `_routing` mapping is set to `required` and no routing value is\nspecified, the delete API throws a `RoutingMissingException` and rejects\nthe request.\n\nFor example:\n\n\n////\nExample to delete with routing\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_doc/1?routing=shard-1\n{\n  \"test\": \"test\"\n}\n--------------------------------------------------\n////\n\n\n[source,console]\n--------------------------------------------------\nDELETE /my-index-000001/_doc/1?routing=shard-1\n--------------------------------------------------\n// TEST[continued]\n\nThis request deletes the document with id `1`, but it is routed based on the\nuser. The document is not deleted if the correct routing is not specified.\n\n[discrete]\n[[delete-index-creation]]\n===== Automatic index creation\n\nIf an <<docs-index_,external versioning variant>> is used,\nthe delete operation automatically creates the specified index if it does not\nexist. For information about manually creating indices, see\n<<indices-create-index,create index API>>.\n\n[discrete]\n[[delete-distributed]]\n===== Distributed\n\nThe delete operation gets hashed into a specific shard id. It then gets\nredirected into the primary shard within that id group, and replicated\n(if needed) to shard replicas within that id group.\n\n[discrete]\n[[delete-wait-for-active-shards]]\n===== Wait for active shards\n\nWhen making delete requests, you can set the `wait_for_active_shards`\nparameter to require a minimum number of shard copies to be active\nbefore starting to process the delete request. See\n<<index-wait-for-active-shards,here>> for further details and a usage\nexample.\n\n[discrete]\n[[delete-refresh]]\n===== Refresh\n\nControl when the changes made by this request are visible to search. See\n<<docs-refresh>>.\n\n[discrete]\n[[delete-timeout]]\n===== Timeout\n\nThe primary shard assigned to perform the delete operation might not be\navailable when the delete operation is executed. Some reasons for this\nmight be that the primary shard is currently recovering from a store\nor undergoing relocation. By default, the delete operation will wait on\nthe primary shard to become available for up to 1 minute before failing\nand responding with an error. The `timeout` parameter can be used to\nexplicitly specify how long it waits. Here is an example of setting it\nto 5 minutes:\n\n[source,console]\n--------------------------------------------------\nDELETE /my-index-000001/_doc/1?timeout=5m\n--------------------------------------------------\n// TEST[setup:my_index]\n\n[[docs-delete-api-path-params]]\n==== {api-path-parms-title}\n\n`<index>`::\n(Required, string) Name of the target index.\n\n`<_id>`::\n(Required, string) Unique identifier for the document.\n\n[[docs-delete-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=if_seq_no]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=if_primary_term]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=refresh]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=routing]\n\n`timeout`::\n(Optional, <<time-units, time units>>)\nPeriod to <<index-wait-for-active-shards,wait for active shards>>. Defaults to\n`1m` (one minute).\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=doc-version]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=version_type]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=wait_for_active_shards]\n\n[[docs-delete-api-example]]\n==== {api-examples-title}\n\nDelete the JSON document `1` from the `my-index-000001` index:\n\n[source,console]\n--------------------------------------------------\nDELETE /my-index-000001/_doc/1\n--------------------------------------------------\n// TEST[setup:my_index]\n\nThe API returns the following result:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"_shards\": {\n    \"total\": 2,\n    \"failed\": 0,\n    \"successful\": 2\n  },\n  \"_index\": \"my-index-000001\",\n  \"_id\": \"1\",\n  \"_version\": 2,\n  \"_primary_term\": 1,\n  \"_seq_no\": 5,\n  \"result\": \"deleted\"\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"successful\": 2/\"successful\": 1/]\n// TESTRESPONSE[s/\"_primary_term\": 1/\"_primary_term\": $body._primary_term/]\n// TESTRESPONSE[s/\"_seq_no\": 5/\"_seq_no\": $body._seq_no/]\n"
}