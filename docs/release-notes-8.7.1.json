{
    "meta": {
        "size": 2913,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/release-notes-8.7.1.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "release-notes-8.7.1",
        "version": "8.15"
    },
    "doc": "[[release-notes-8.7.1]]\n== {es} version 8.7.1\n\nAlso see <<breaking-changes-8.7,Breaking changes in 8.7>>.\n\n[[known-issues-8.7.1]]\n[float]\n=== Known issues\n\n* `ArrayIndexOutOfBoundsException` may be thrown while creating a transport message\n+\nCertain sequences of writes and seeks to the buffer used to create a transport\nmessage may encounter an alignment bug which results in an\n`ArrayIndexOutOfBoundsException`, preventing the transport message from being\nsent.\n+\nThis issue is fixed in 8.8.0.\n\ninclude::8.6.0.asciidoc[tag=reconciliation-imbalance-known-issue]\n\n// tag::no-preventive-gc-issue[]\n* High Memory Pressure due to a GC JVM setting change\n+\nThis version of Elasticsearch is bundled with JDK 20. In JDK 20\nhttps://bugs.openjdk.org/browse/JDK-8293861[Preventive GC is disabled by default].\nThis may lead to increased memory pressure and an increased number of CircuitBreakerExceptions when retrieving large\ndocuments under some load patterns. (issue: {es-issue}99592[#99592])\n+\nIf this change affects your use of Elasticsearch, consider re-enabling the previous behaviour\nby adding the JVM arguments `-XX:+UnlockDiagnosticVMOptions -XX:+G1UsePreventiveGC` (reference:\nhttps://www.oracle.com/java/technologies/javase/20-relnote-issues.html#JDK-8293861[JDK 20 release notes]). It is\nimportant to note that this workaround is temporary and works only with JDK 20, which is bundled with Elasticsearch up\nto version 8.10.2 inclusive. Successive versions are bundling JDK 21+, where this setting\nhttps://bugs.openjdk.org/browse/JDK-8297639[has been removed]. Specifying those JVM arguments will prevent the\nJVM (and therefore Elasticsearch Nodes) from starting.\n// end::no-preventive-gc-issue[]\n\n[[bug-8.7.1]]\n[float]\n=== Bug fixes\n\nAllocation::\n* Compute balancer threshold based on max shard size {es-pull}95090[#95090]\n* Use applied state after `DiskThresholdMonitor` reroute {es-pull}94916[#94916]\n* Weaken node-replacement decider during reconciliation {es-pull}95070[#95070]\n\nILM+SLM::\n* Downsample ILM action should skip non-time-series indices {es-pull}94835[#94835] (issue: {es-issue}93123[#93123])\n\nIngest Node::\n* Fix async enrich execution prematurely releases enrich policy lock {es-pull}94702[#94702] (issue: {es-issue}94690[#94690])\n\nNetwork::\n* Fix off-by-one bug in `RecyclerBytesStreamOutput` {es-pull}95036[#95036]\n\nRecovery::\n* Async creation of `IndexShard` instances {es-pull}94545[#94545]\n\nSearch::\n* Return 200 when closing empty PIT or scroll {es-pull}94708[#94708]\n\nStats::\n* Fix _cluster/stats `.nodes.fs` deduplication {es-pull}94798[#94798] (issue: {es-issue}24472[#24472])\n* Fix `FsInfo` device deduplication {es-pull}94744[#94744]\n\n[[enhancement-8.7.1]]\n[float]\n=== Enhancements\n\nAuthorization::\n* Reuse `FieldPermissionsCache` in Role parsing {es-pull}94931[#94931]\n\n[[upgrade-8.7.1]]\n[float]\n=== Upgrades\n\nPackaging::\n* Upgrade bundled JDK to Java 20 {es-pull}94600[#94600]\n\n\n"
}