{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.502581",
        "size": 41437,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/audit-event-types.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "audit-event-types",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[audit-event-types]]\n=== Audit events\n\nWhen you are <<enable-audit-logging,auditing security events>>, a single client\nrequest might generate multiple audit events, across multiple cluster nodes.\nThe common `request.id` attribute can be used to correlate the associated events.\n\nUse the <<xpack-sa-lf-events-include,`xpack.security.audit.logfile.events.include`>>\nsetting in `elasticsearch.yml` to specify the kind of events you want to include\nin the auditing output.\n\nNOTE: Certain audit events require the `security_config_change` event type to\naudit the related event action. The description of impacted audit events\nindicate whether that event type is required.\n\n[[event-access-denied]]\n`access_denied`::\nLogged when an authenticated user attempts to execute an action they do not\nhave the necessary <<security-privileges,privilege>> to perform.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:30:06,949+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"transport\", \"event.action\":\n\"access_denied\", \"authentication.type\":\"REALM\", \"user.name\":\"user1\",\n\"user.realm\":\"default_native\", \"user.roles\":[\"test_role\"], \"origin.type\":\n\"rest\", \"origin.address\":\"[::1]:52434\", \"request.id\":\"yKOgWn2CRQCKYgZRz3phJw\",\n\"action\":\"indices:admin/auto_create\", \"request.name\":\"CreateIndexRequest\",\n\"indices\":[\"<index-{now/d+1d}>\"]}\n====\n\n[[event-access-granted]]\n`access_granted`::\nLogged when an authenticated user attempts to execute an action they have the\nnecessary privilege to perform. These events will be logged only for non-system\nusers.\n+\nIf you want to include `access_granted` events for all users (including\ninternal users such as `_xpack`), add\n<<event-system-granted,`system_access_granted`>> to the list of\nevent types in addition to `access_granted`. The `system_access_granted`\nprivilege is not included by default to avoid cluttering the logs.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:30:06,947+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"transport\", \"event.action\":\n\"access_granted\", \"authentication.type\":\"REALM\", \"user.name\":\"user1\", \"user\nrealm\":\"default_native\", \"user.roles\":[\"test_role\"], \"origin.type\":\"rest\",\n\"origin.address\":\"[::1]:52434\", \"request.id\":\"yKOgWn2CRQCKYgZRz3phJw\",\n\"action\":\"indices:data/write/bulk\", \"request.name\":\"BulkRequest\"}\n====\n\n[[event-anonymous-access-denied]]\n`anonymous_access_denied`::\nLogged when a request is denied due to missing authentication credentials.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T21:56:43,608+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"rest\", \"event.action\":\n\"anonymous_access_denied\", \"origin.type\":\"rest\", \"origin.address\":\n\"[::1]:50543\", \"url.path\":\"/twitter/_async_search\", \"url.query\":\"pretty\",\n\"request.method\":\"POST\", \"request.id\":\"TqA9OisyQ8WTl1ivJUV1AA\"}\n====\n\n[[event-authentication-failed]]\n`authentication_failed`::\nLogged when the authentication credentials cannot be matched to a known user.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:10:15,510+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"rest\", \"event.action\":\n\"authentication_failed\", \"user.name\":\"elastic\", \"origin.type\":\"rest\",\n\"origin.address\":\"[::1]:51504\", \"url.path\":\"/_security/user/user1\",\n\"url.query\":\"pretty\", \"request.method\":\"POST\",\n\"request.id\":\"POv8p_qeTl2tb5xoFl0HIg\"}\n====\n\n[[event-authentication-success]]\n`authentication_success`::\nLogged when a user successfully authenticates.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:03:35,018+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"rest\", \"event.action\":\n\"authentication_success\", \"authentication.type\":\"REALM\", \"user.name\":\n\"elastic\", \"user.realm\":\"reserved\", \"origin.type\":\"rest\", \"origin.address\":\n\"[::1]:51014\", \"realm\":\"reserved\", \"url.path\":\"/twitter/_search\",\n\"url.query\":\"pretty\", \"request.method\":\"POST\",\n\"request.id\":\"nHV3UMOoSiu-TaSPWCfxGg\"}\n====\n\n[[event-change-disable-user]]\n`change_disable_user`::\nLogged when the <<security-api-enable-user,enable user API>> is invoked to\ndisable a native or a built-in user.\n+\nYou must include the `security_config_change` event type to\naudit the related event action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T23:17:28,308+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"change_disable_user\", \"request.id\":\"qvLIgw_eTvyK3cgV-GaLVg\",\n\"change\":{\"disable\":{\"user\":{\"name\":\"user1\"}}}}\n====\n\n[[event-change-enable-user]]\n`change_enable_user`::\nLogged when the <<security-api-enable-user,enable user API>> is invoked to\nenable a native or a built-in user.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T23:17:34,843+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"change_enable_user\", \"request.id\":\"BO3QU3qeTb-Ei0G0rUOalQ\",\n\"change\":{\"enable\":{\"user\":{\"name\":\"user1\"}}}}\n====\n\n[[event-change-password]]\n`change_password`::\nLogged when the <<security-api-change-password,change password API>> is\ninvoked to change the password of a native or built-in user.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2019-12-30T22:19:41,345+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"change_password\", \"request.id\":\"bz5a1Cc3RrebDMitMGGNCw\",\n\"change\":{\"password\":{\"user\":{\"name\":\"user1\"}}}}\n====\n\n\n[[event-create-service-token]]\n`create_service_token`::\nLogged when the <<security-api-create-service-token,create service account token API>> is\ninvoked to create a new index-based token for a service account.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2021-04-30T23:17:42,952+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"create_service_token\", \"request.id\":\"az9a1Db5QrebDMacQ8yGKc\",\n\"create\":{\"service_token\":{\"namespace\":\"elastic\",\"service\":\"fleet-server\",\"name\":\"token1\"}}}`\n====\n\n[[event-connection-denied]]\n`connection_denied`::\nLogged when an incoming TCP connection does not pass the\n<<ip-filtering,IP filter>> for a specific profile.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T21:47:31,526+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"ip_filter\", \"event.action\":\n\"connection_denied\", \"origin.type\":\"rest\", \"origin.address\":\"10.10.0.20:52314\",\n\"transport.profile\":\".http\", \"rule\":\"deny 10.10.0.0/16\"}\n====\n\n[[event-connection-granted]]\n`connection_granted`::\nLogged when an incoming TCP connection passes the <<ip-filtering,IP filter>>\nfor a specific profile.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T21:47:31,526+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"ip_filter\", \"event.action\":\n\"connection_granted\", \"origin.type\":\"rest\", \"origin.address\":\"[::1]:52314\",\n\"transport.profile\":\".http\", \"rule\":\"allow ::1,127.0.0.1\"}\n====\n\n[[event-create-apikey]]\n`create_apikey`::\nLogged when the <<security-api-create-api-key,create API key>> or the\n<<security-api-grant-api-key, grant API key>> APIs are invoked to create a new\nAPI key.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:33:52,521+0200\", \"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\", \"event.type\":\"security_config_change\", \"event.action\":\n\"create_apikey\", \"request.id\":\"9FteCmovTzWHVI-9Gpa_vQ\", \"create\":{\"apikey\":\n{\"name\":\"test-api-key-1\",\"expiration\":\"10d\",\"role_descriptors\":[{\"cluster\":\n[\"monitor\",\"manage_ilm\"],\"indices\":[{\"names\":[\"index-a*\"],\"privileges\":\n[\"read\",\"maintenance\"]},{\"names\":[\"in*\",\"alias*\"],\"privileges\":[\"read\"],\n\"field_security\":{\"grant\":[\"field1*\",\"@timestamp\"],\"except\":[\"field11\"]}}],\n\"applications\":[],\"run_as\":[]},{\"cluster\":[\"all\"],\"indices\":[{\"names\":\n[\"index-b*\"],\"privileges\":[\"all\"]}],\"applications\":[],\"run_as\":[]}],\n\"metadata\":{\"application\":\"my-application\",\"environment\":{\"level\": 1,\n\"tags\":[\"dev\",\"staging\"]}}}}}\n====\n\n[[event-change-apikey]]\n`change_apikey`::\nLogged when the <<security-api-update-api-key,update API key>> API is\ninvoked to update the attributes of an existing API key.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:33:52,521+0200\", \"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\", \"event.type\":\"security_config_change\", \"event.action\":\n\"change_apikey\", \"request.id\":\"9FteCmovTzWHVI-9Gpa_vQ\", \"change\":{\"apikey\":\n{\"id\":\"zcwN3YEBBmnjw-K-hW5_\",\"role_descriptors\":[{\"cluster\":\n[\"monitor\",\"manage_ilm\"],\"indices\":[{\"names\":[\"index-a*\"],\"privileges\":\n[\"read\",\"maintenance\"]},{\"names\":[\"in*\",\"alias*\"],\"privileges\":[\"read\"],\n\"field_security\":{\"grant\":[\"field1*\",\"@timestamp\"],\"except\":[\"field11\"]}}],\n\"applications\":[],\"run_as\":[]},{\"cluster\":[\"all\"],\"indices\":[{\"names\":\n[\"index-b*\"],\"privileges\":[\"all\"]}],\"applications\":[],\"run_as\":[]}],\n\"metadata\":{\"application\":\"my-application\",\"environment\":{\"level\": 1,\n\"tags\":[\"dev\",\"staging\"]}},\"expiration\":\"10d\"}}}\n====\n\n[[event-change-apikeys]]\n`change_apikeys`::\nLogged when the <<security-api-bulk-update-api-keys,bulk update API keys>> API is\ninvoked to update the attributes of multiple existing API keys.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\",\"timestamp\":\"2020-12-31T00:33:52,521+0200\",\"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\",\"event.type\":\"security_config_change\",\n\"event.action\":\"change_apikeys\",\"request.id\":\"9FteCmovTzWHVI-9Gpa_vQ\",\n\"change\":{\"apikeys\":\n{\"ids\":[\"zcwN3YEBBmnjw-K-hW5_\",\"j7c0WYIBqecB5CbVR6Oq\"],\"role_descriptors\":\n[{\"cluster\":[\"monitor\",\"manage_ilm\"],\"indices\":[{\"names\":[\"index-a*\"],\"privileges\":\n[\"read\",\"maintenance\"]},{\"names\":[\"in*\",\"alias*\"],\"privileges\":[\"read\"],\n\"field_security\":{\"grant\":[\"field1*\",\"@timestamp\"],\"except\":[\"field11\"]}}],\n\"applications\":[],\"run_as\":[]},{\"cluster\":[\"all\"],\"indices\":[{\"names\":\n[\"index-b*\"],\"privileges\":[\"all\"]}],\"applications\":[],\"run_as\":[]}],\n\"metadata\":{\"application\":\"my-application\",\"environment\":{\"level\":1,\n\"tags\":[\"dev\",\"staging\"]}},\"expiration\":\"10d\"}}}\n====\n\n[[event-delete-privileges]]\n`delete_privileges`::\nLogged when the\n<<security-api-delete-privilege,delete application privileges API>> is invoked\nto remove one or more application privileges.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:39:30,246+0200\", \"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"delete_privileges\", \"request.id\":\"7wRWVxxqTzCKEspeSP7J8g\",\n\"delete\":{\"privileges\":{\"application\":\"myapp\",\"privileges\":[\"read\"]}}}\n====\n\n[[event-delete-role]]\n`delete_role`::\nLogged when the <<security-api-delete-role,delete role API>> is invoked to\ndelete a role.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:08:11,678+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.action\":\n\"delete_role\", \"request.id\":\"155IKq3zQdWq-12dgKZRnw\",\n\"delete\":{\"role\":{\"name\":\"my_admin_role\"}}}\n====\n\n[[event-delete-role-mapping]]\n`delete_role_mapping`::\nLogged when the <<security-api-delete-role-mapping,delete role mapping API>>\nis invoked to delete a role mapping.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:12:09,349+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"delete_role_mapping\", \"request.id\":\"Stim-DuoSTCWom0S_xhf8g\",\n\"delete\":{\"role_mapping\":{\"name\":\"mapping1\"}}}\n====\n\n[[event-delete-service-token]]\n`delete_service_token`::\nLogged when the <<security-api-delete-service-token,delete service account token API>> is\ninvoked to delete an index-based token for a service account.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2021-04-30T23:17:42,952+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"delete_service_token\", \"request.id\":\"az9a1Db5QrebDMacQ8yGKc\",\n\"delete\":{\"service_token\":{\"namespace\":\"elastic\",\"service\":\"fleet-server\",\"name\":\"token1\"}}}\n====\n\n[[event-delete-user]]\n`delete_user`::\nLogged when the <<security-api-delete-user,delete user API>> is invoked to\ndelete a specific native user.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:19:41,345+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\",\n\"event.action\":\"delete_user\", \"request.id\":\"au5a1Cc3RrebDMitMGGNCw\",\n\"delete\":{\"user\":{\"name\":\"jacknich\"}}}\n====\n\n[[event-invalidate-apikeys]]\n`invalidate_apikeys`::\nLogged when the <<security-api-invalidate-api-key,invalidate API key API>> is\ninvoked to invalidate one or more API keys.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:36:30,247+0200\", \"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"invalidate_apikeys\", \"request.id\":\"7lyIQU9QTFqSrTxD0CqnTQ\",\n\"invalidate\":{\"apikeys\":{\"owned_by_authenticated_user\":false,\n\"user\":{\"name\":\"myuser\",\"realm\":\"native1\"}}}}\n====\n\n[[event-put-privileges]]\n`put_privileges`::\nLogged when the <<security-api-put-privileges,create or update privileges API>> is invoked\nto add or update one or more application privileges.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:39:07,779+0200\", \"node.id\":\n\"9clhpgjJRR-iKzOw20xBNQ\", \"event.type\":\"security_config_change\",\n\"event.action\":\"put_privileges\", \"request.id\":\"1X2VVtNgRYO7FmE0nR_BGA\",\n\"put\":{\"privileges\":[{\"application\":\"myapp\",\"name\":\"read\",\"actions\":\n[\"data:read/*\",\"action:login\"],\"metadata\":{\"description\":\"Read access to myapp\"}}]}}\n====\n\n[[event-put-role]]\n`put_role`::\nLogged when the <<security-api-put-role,create or update role API>> is invoked to create or\nupdate a role.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:27:01,978+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\",\n\"event.action\":\"put_role\", \"request.id\":\"tDYQhv5CRMWM4Sc5Zkk2cQ\",\n\"put\":{\"role\":{\"name\":\"test_role\",\"role_descriptor\":{\"cluster\":[\"all\"],\n\"indices\":[{\"names\":[\"apm*\"],\"privileges\":[\"all\"],\"field_security\":\n{\"grant\":[\"granted\"]},\"query\":\"{\\\"term\\\": {\\\"service.name\\\": \\\"bar\\\"}}\"},\n{\"names\":[\"apm-all*\"],\"privileges\":[\"all\"],\"query\":\"{\\\"term\\\":\n{\\\"service.name\\\": \\\"bar2\\\"}}\"}],\"applications\":[],\"run_as\":[]}}}}\n====\n\n[[event-put-role-mapping]]\n`put_role_mapping`::\nLogged when the <<security-api-put-role-mapping,create or update role mapping API>> is\ninvoked to create or update a role mapping.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-31T00:11:13,932+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\", \"event.\naction\":\"put_role_mapping\", \"request.id\":\"kg4h1l_kTDegnLC-0A-XxA\",\n\"put\":{\"role_mapping\":{\"name\":\"mapping1\",\"roles\":[\"user\"],\"rules\":\n{\"field\":{\"username\":\"*\"}},\"enabled\":true,\"metadata\":{\"version\":1}}}}\n====\n\n[[event-put-user]]\n`put_user`::\nLogged when the <<security-api-put-user,create or update user API>> is invoked to create or\nupdate a native user. Note that user updates can also change the\nuser's password.\n+\nYou must include the `security_config_change` event type to audit the related\nevent action.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:10:09,749+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"security_config_change\",\n\"event.action\":\"put_user\", \"request.id\":\"VIiSvhp4Riim_tpkQCVSQA\",\n\"put\":{\"user\":{\"name\":\"user1\",\"enabled\":false,\"roles\":[\"admin\",\"other_role1\"],\n\"full_name\":\"Jack Sparrow\",\"email\":\"jack@blackpearl.com\",\n\"has_password\":true,\"metadata\":{\"cunning\":10}}}}\n====\n\n[[event-realm-auth-failed]]\n`realm_authentication_failed`::\nLogged for every realm that fails to present a valid authentication token.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:10:15,510+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"rest\", \"event.action\":\n\"realm_authentication_failed\", \"user.name\":\"elastic\", \"origin.type\":\"rest\",\n\"origin.address\":\"[::1]:51504\", \"realm\":\"myTestRealm1\", \"url.path\":\n\"/_security/user/user1\", \"url.query\":\"pretty\", \"request.method\":\"POST\",\n\"request.id\":\"POv8p_qeTl2tb5xoFl0HIg\"}\n====\n\n[[event-runas-denied]]\n`run_as_denied`::\nLogged when an authenticated user attempts to <<run-as-privilege,run as>>\nanother user that they do not have the necessary\n<<security-privileges,privileges>> to do so.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:49:34,859+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"transport\", \"event.action\":\n\"run_as_denied\", \"user.name\":\"user1\", \"user.run_as.name\":\"user1\",\n\"user.realm\":\"default_native\", \"user.run_as.realm\":\"default_native\",\n\"user.roles\":[\"test_role\"], \"origin.type\":\"rest\", \"origin.address\":\n\"[::1]:52662\", \"request.id\":\"RcaSt872RG-R_WJBEGfYXA\",\n\"action\":\"indices:data/read/search\", \"request.name\":\"SearchRequest\", \"indices\":[\"alias1\"]}\n====\n\n[[event-runas-granted]]\n`run_as_granted`::\nLogged when an authenticated user attempts to <<run-as-privilege,run as>>\nanother user that they have the necessary privileges to do so.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2020-12-30T22:44:42,068+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\":\"transport\", \"event.action\":\n\"run_as_granted\", \"user.name\":\"elastic\", \"user.run_as.name\":\"user1\",\n\"user.realm\":\"reserved\", \"user.run_as.realm\":\"default_native\",\n\"user.roles\":[\"superuser\"], \"origin.type\":\"rest\", \"origin.address\":\n\"[::1]:52623\", \"request.id\":\"dGqPTdEQSX2TAPS3cvc1qA\", \"action\":\n\"indices:data/read/search\", \"request.name\":\"SearchRequest\", \"indices\":[\"alias1\"]}\n====\n\n[[event-system-granted]]\n`system_access_granted`::\nLogs <<event-access-granted,`access_granted`>> events only for\n<<internal-users,internal users>>, such as `_xpack`. If you include this setting\nin addition to `access_granted`, then `access_granted` events are\nlogged for _all_ users.\n+\nNOTE: This event type is disabled by default to avoid cluttering the logs.\n\n[[event-tampered-request]]\n`tampered_request`::\nLogged when the {security-features} detect that the request has been tampered\nwith. Typically relates to `search/scroll` requests when the scroll ID is\nbelieved to have been tampered with.\n+\n.Example\n[%collapsible%open]\n====\n[source,js]\n{\"type\":\"audit\", \"timestamp\":\"2019-11-27T22:00:00,947+0200\", \"node.id\":\n\"0RMNyghkQYCc_gVd1G6tZQ\", \"event.type\": \"rest\", \"event.action\":\n\"tampered_request\", \"origin.address\":\"[::1]:50543\", \"url.path\":\n\"/twitter/_async_search\", \"url.query\":\"pretty\", \"request.method\":\"POST\",\n\"request.id\":\"TqA9OisyQ8WTl1ivJUV1AA\"}\n====\n\n[discrete]\n[[audit-event-attributes]]\n=== Audit event attributes\n\nThe audit events are formatted as JSON documents, and each event is printed on a separate\nline in the audit log. The entries themselves do not contain an end-of-line delimiter.\nFor more details, see <<audit-log-entry-format>>.\n\nThe following list shows attributes that are common to all audit event types:\n\n`@timestamp`      ::    The time, in ISO9601 format, when the event occurred.\n`node.name`       ::    The name of the node. This can be changed\n                        in the `elasticsearch.yml` config file.\n`node.id`         ::    The node id. This is automatically generated and is\n                        persistent across full cluster restarts.\n`host.ip`         ::    The bound IP address of the node, with which the node\n                        can be communicated with.\n`host.name`       ::    The unresolved node's hostname.\n`event.type`      ::    The internal processing layer that generated the event:\n                        `rest`, `transport`, `ip_filter` or `security_config_change`.\n                        This is different from `origin.type` because a request\n                        originating from the REST API is translated to a number\n                        of transport messages, generating audit events with\n                        `origin.type: rest` and `event.type: transport`.\n`event.action`    ::    The type of event that occurred: `anonymous_access_denied`,\n`authentication_failed`, `authentication_success`,\n`realm_authentication_failed`, `access_denied`, `access_granted`,\n`connection_denied`, `connection_granted`, `tampered_request`,\n`run_as_denied`, or `run_as_granted`.\n+\nIn addition, if `event.type` equals <<security-config-change,`security_config_change`>>,\nthe `event.action` attribute takes one of the following values:\n`put_user`, `change_password`, `put_role`, `put_role_mapping`,\n`change_enable_user`, `change_disable_user`, `put_privileges`, `create_apikey`,\n`delete_user`, `delete_role`, `delete_role_mapping`, `invalidate_apikeys`,\n`delete_privileges`, `change_apikey`, or `change_apikeys`.\n\n`request.id`      ::    A synthetic identifier that can be used to correlate the events\n                        associated with a particular REST request.\n\nIn addition, all the events of types `rest`, `transport` and `ip_filter` (but not\n`security_config_change`) have the following extra attributes, which\nshow more details about the requesting client:\n\n`origin.address`  ::    The source IP address of the request associated with\n                        this event. This could be the address of the remote client,\n                        the address of another cluster node, or the local node's\n                        bound address, if the request originated locally. Unless\n                        the remote client connects directly to the cluster, the\n                        _client address_ will actually be the address of the first\n                        OSI layer 3 proxy in front of the cluster.\n`origin.type`     ::    The origin type of the request associated with this event:\n                        `rest` (request originated from a REST API request),\n                        `transport` (request was received on the transport channel),\n                        or `local_node` (the local node issued the request).\n`opaque_id`       ::    The value of the `X-Opaque-Id` HTTP header (if present) of\n                        the request associated with this event.\n                        See more: <<x-opaque-id, `X-Opaque-Id` HTTP header - API conventions>>\n`trace_id`        ::    The identifier extracted from the `traceparent` HTTP header\n                        (if present) of the request associated with this event.\n                        It allows to surface audit logs into the Trace Logs feature\n                        of Elastic APM.\n`x_forwarded_for` ::    The verbatim value of the `X-Forwarded-For` HTTP request\n                        header (if present) of the request associated with the\n                        audit event. This header is commonly added by proxies\n                        when they forward requests and the value is the address\n                        of the proxied client. When a request crosses multiple\n                        proxies the header is a comma delimited list with the\n                        last value being the address of the second to last\n                        proxy server (the address of the last proxy server is\n                        designated by the `origin.address` field).\n\n\n==== Audit event attributes of the `rest` event type\n\nThe events with `event.type` equal to `rest` have one of the following `event.action`\nattribute values: `authentication_success`, `anonymous_access_denied`, `authentication_failed`,\n`realm_authentication_failed`, `tampered_request` or `run_as_denied`.\nThese events also have the following extra attributes (in addition to the\ncommon ones):\n\n`url.path`        ::    The path part of the URL (between the port and the query\n                        string) of the REST request associated with this event.\n                        This is URL encoded.\n`url.query`       ::    The query part of the URL (after \"?\", if present) of the\n                        REST request associated with this event. This is URL encoded.\n`request.method`  ::    The HTTP method of the REST request associated with this\n                        event. It is one of GET, POST, PUT, DELETE, OPTIONS,\n                        HEAD, PATCH, TRACE and CONNECT.\n`request.body`    ::    The full content of the REST request associated with this\n                        event, if enabled. This contains the HTTP request body.\n                        The body is escaped as a string value according to the JSON RFC 4627.\n\n==== Audit event attributes of the `transport` event type\n\nThe events with `event.type` equal to `transport` have one of the following `event.action`\nattribute values: `authentication_success`, `anonymous_access_denied`, `authentication_failed`,\n`realm_authentication_failed`, `access_granted`, `access_denied`, `run_as_granted`,\n`run_as_denied`, or `tampered_request`.\nThese events also have the following extra attributes (in addition to the common\nones):\n\n`action`              ::    The name of the transport action that was executed.\n                            This is like the URL for a REST request.\n`indices`             ::    The indices names array that the request associated\n                            with this event pertains to (when applicable).\n`request.name`        ::    The name of the request handler that was executed.\n\n==== Audit event attributes of the `ip_filter` event type\n\nThe events with `event.type` equal to `ip_filter` have one of the following `event.action`\nattribute values: `connection_granted` or `connection_denied`.\nThese events also have the following extra attributes (in addition to the common\nones):\n\n`transport_profile`   ::    The transport profile the request targeted.\n`rule`                ::    The <<ip-filtering, IP filtering>> rule that denied\n                            the request.\n\n[[security-config-change]]\n==== Audit event attributes of the `security_config_change` event type\n\nThe events with the `event.type` attribute equal to `security_config_change` have one of the following\n`event.action` attribute values: `put_user`, `change_password`, `put_role`, `put_role_mapping`,\n`change_enable_user`, `change_disable_user`, `put_privileges`, `create_apikey`, `delete_user`,\n`delete_role`, `delete_role_mapping`, `invalidate_apikeys`, `delete_privileges`, `change_apikey`,\nor `change_apikeys`.\n\nThese events also have *one* of the following extra attributes (in addition to the common\nones), which is specific to the `event.type` attribute. The attribute's value is a nested JSON object:\n\n`put`                 ::    The object representation of the security config that\n                            is being created, or the overwrite of an existing config.\n                            It contains the config for a `user`, `role`, `role_mapping`, or\n                            for application `privileges`.\n`delete`              ::    The object representation of the security config that\n                            is being deleted. It can be the config for a `user`, `role`,\n                            `role_mapping` or for application `privileges`.\n`change`              ::    The object representation of the security config that\n                            is being changed. It can be the `password`, `enable` or `disable`,\n                            config object for native or built-in users. If an API key is updated,\n                            the config object will be an `apikey`.\n`create`              ::    The object representation of the new security config that is being\n                            created. This is currently only used for API keys auditing.\n                            If the API key is created using the\n                            <<security-api-create-api-key, create API key API>> it only contains\n                            an `apikey` config object. If the API key is created using the\n                            <<security-api-grant-api-key, grant API key API>> it also contains\n                            a `grant` config object.\n`invalidate`          ::    The object representation of the security configuration that is being invalidated.\n                            The only config that currently supports invalidation is `apikeys`, through\n                            the <<security-api-invalidate-api-key, invalidate API key API>>.\n\nThe schemas of the security config objects mentioned above are as follows. They are very similar to the\nrequest bodies of the corresponding security APIs.\n\n`user`                ::     An object like:\n+\n[source,js]\n----\n`{\"name\": <string>, \"enabled\": <boolean>, \"roles\": <string_list>,\n\"full_name\": <string>, \"email\": <string>, \"has_password\": <boolean>,\n\"metadata\": <object>}`.\n----\n// NOTCONSOLE\n+\nThe `full_name`, `email` and `metadata` fields are omitted if empty.\n\n`role`                ::     An object like:\n+\n[source,js]\n----\n`{\"name\": <string>, \"role_descriptor\": {\"cluster\": <string_list>, \"global\":\n{\"application\":{\"manage\":{<string>:<string_list>}}}, \"indices\": [                             {\"names\": <string_list>, \"privileges\": <string_list>, \"field_security\":\n{\"grant\": <string_list>, \"except\": <string_list>}, \"query\": <string>,\n\"allow_restricted_indices\": <boolean>}], \"applications\":[{\"application\": <string>,\n\"privileges\": <string_list>, \"resources\": <string_list>}], \"run_as\": <string_list>,\n\"metadata\": <object>}}`.\n----\n// NOTCONSOLE\n+\nThe `global`, `field_security`, `except`, `query`,\n`allow_restricted_indices` and `metadata` fields are omitted if empty.\n\n`role_mapping`        ::     An object like:\n+\n[source,js]\n----\n`{\"name\": <string>, \"roles\": <string_list>, \"role_templates\": [{\"template\": <string>,\n\"format\": <string>}], \"rules\": <object>, \"enabled\": <boolean>, \"metadata\": <object>}`.\n----\n// NOTCONSOLE\n+\nThe `roles` and `role_templates` fields are omitted if empty.\nThe `rules` object has a recursively nested schema, identical to what is passed in\nthe <<mapping-roles, API request for mapping roles>>.\n\n`privileges`          ::     An array of objects like:\n+\n[source,js]\n----\n`{\"application\": <string>, \"name\": <string>, \"actions\": <string_list>,\n\"metadata\": <object>}`.\n----\n// NOTCONSOLE\n\n`password`            ::     A simple object like:\n+\n[source,js]\n----\n`{\"user\":{\"name\": <string>}}`\n----\n// NOTCONSOLE\n\n`enable`              ::     A simple object like:\n+\n[source,js]\n----\n`{\"user\":{\"name\": <string>}}`\n----\n// NOTCONSOLE\n\n`disable`             ::     A simple object like:\n+\n[source,js]\n----\n`{\"user\":{\"name\": <string>}}`\n----\n// NOTCONSOLE\n\n`apikey`              ::     An object like:\n+\n[source,js]\n----\n`{\"id\": <string>, \"name\": <string>, \"expiration\": <string>, \"role_descriptors\": [<object>],\n\"metadata\": [<object>]}`\n----\n// NOTCONSOLE\n+\nThe `role_descriptors` objects have the same schema as the `role_descriptor`\nobject that is part of the above `role` config object.\n\nThe object for an API key update will differ in that it will not include\na `name`.\n\n`grant`               ::     An object like:\n+\n[source,js]\n----\n`{\"type\": <string>, \"user\": {\"name\": <string>, \"has_password\": <boolean>},\n\"has_access_token\": <boolean>}`\n----\n// NOTCONSOLE\n\n`apikeys`             ::     An object like:\n+\n[source,js]\n----\n`{\"ids\": <string_list>, \"name\": <string>, \"owned_by_authenticated_user\":\n<boolean>, \"user\":{\"name\": <string>, \"realm\": <string>}}`\n----\n// NOTCONSOLE\n+\nThe object for a bulk API key update will differ in that it will not\ninclude `name`, `owned_by_authenticated_user`, or `user`. Instead, it\nmay include `metadata` and `role_descriptors`, which have the same\nschemas as the fields in the `apikey` config object above.\n\n`service_token`       ::   An object like:\n+\n[source,js]\n----\n`{\"namespace\":<string>,\"service\":<string>,\"name\":<string>}`\n----\n// NOTCONSOLE\n\n==== Extra audit event attributes for specific events\n\nThere are a few events that have some more attributes in addition to those\nthat have been previously described:\n\n* `authentication_success`:\n  `realm`              ::   The name of the realm that successfully authenticated the user.\n                            If authenticated using an API key, this is the special value of\n                            `_es_api_key`. This is a shorthand attribute\n                            for the same information that is described by the `user.realm`,\n                            `user.run_by.realm` and `authentication.type` attributes.\n  `user.name`          ::   The name of the _effective_ user. This is usually the\n                            same as the _authenticated_ user, but if using the\n                            <<run-as-privilege, run as authorization functionality>>\n                            this instead denotes the name of the _impersonated_ user.\n                            If authenticated using an API key, this is\n                            the name of the API key owner.\n                            If authenticated using a service account token, this is the\n                            service account principal, i.e. `namespace/service_name`.\n  `user.realm`         ::   Name of the realm to which the _effective_ user\n                            belongs. If authenticated using an API key, this is\n                            the name of the realm to which the API key owner belongs.\n  `user.run_by.name`   ::   This attribute is present only if the request is\n                            using the <<run-as-privilege, run as authorization functionality>>\n                            and denotes the name of the _authenticated_ user,\n                            which is also known as the _impersonator_.\n  `user.run_by.realm`  ::   Name of the realm to which the _authenticated_\n                            (_impersonator_) user belongs.\n                            This attribute is provided only if the request\n                            uses the <<run-as-privilege, run as authorization functionality>>.\n  `authentication.type`::   Method used to authenticate the user.\n                            Possible values are `REALM`, `API_KEY`, `TOKEN`, `ANONYMOUS` or `INTERNAL`.\n  `apikey.id`          ::   API key ID returned by the <<security-api-create-api-key,create API key>> request.\n                            This attribute is only provided for authentication using an API key.\n  `apikey.name`        ::   API key name provided in the <<security-api-create-api-key,create API key>> request.\n                            This attribute is only provided for authentication using an API key.\n  `authentication.token.name` :: Name of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n  `authentication.token.type` :: Type of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n* `authentication_failed`:\n  `user.name`          ::    The name of the user that failed authentication.\n                             If the request authentication token is invalid or\n                             unparsable, this information might be missing.\n  `authentication.token.name` :: Name of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n                                 If the request authentication token is invalid or unparsable,\n                                 this information might be missing.\n  `authentication.token.type` :: Type of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n                                 If the request authentication token is invalid or unparsable,\n                                 this information might be missing.\n* `realm_authentication_failed`:\n  `user.name`          ::    The name of the user that failed authentication.\n  `realm`              ::    The name of the realm that rejected this authentication.\n                             **This event is generated for each consulted realm\n                             in the chain.**\n\n* `run_as_denied` and `run_as_granted`:\n  `user.roles`         ::    The role names as an array of the _authenticated_ user which is being\n                             granted or denied the _impersonation_ action.\n                             If authenticated as a <<service-accounts,service account>>,\n                             this is always an empty array.\n  `user.name`          ::    The name of the _authenticated_ user which is being\n                             granted or denied the _impersonation_ action.\n  `user.realm`         ::    The realm name that the _authenticated_ user belongs to.\n  `user.run_as.name`   ::    The name of the user as which the _impersonation_\n                             action is granted or denied.\n  `user.run_as.realm`  ::    The realm name of that the _impersonated_ user belongs to.\n\n* `access_granted` and `access_denied`:\n  `user.roles`         ::    The role names of the user as an array. If authenticated\n                             using an API key, this contains the\n                             role names of the API key owner.\n                             If authenticated as a <<service-accounts,service account>>,\n                             this is always an empty array.\n  `user.name`          ::    The name of the _effective_ user. This is usually the\n                             same as the _authenticated_ user, but if using the\n                             <<run-as-privilege, run as authorization functionality>>\n                             this instead denotes the name of the _impersonated_ user.\n                             If authenticated using an API key, this is\n                             the name of the API key owner.\n  `user.realm`         ::   Name of the realm to which the _effective_ user\n                            belongs. If authenticated using an API key, this is\n                            the name of the realm to which the API key owner belongs.\n  `user.run_by.name`   ::    This attribute is present only if the request is\n                             using the <<run-as-privilege, run as authorization functionality>>\n                             and denoted the name of the _authenticated_ user,\n                             which is also known as the _impersonator_.\n  `user.run_by.realm`  ::    This attribute is present only if the request is\n                             using the <<run-as-privilege, run as authorization functionality>>\n                             and denotes the name of the realm that the _authenticated_\n                             (_impersonator_) user belongs to.\n  `authentication.type`::   Method used to authenticate the user.\n                            Possible values are `REALM`, `API_KEY`, `TOKEN`, `ANONYMOUS` or `INTERNAL`.\n  `apikey.id`          ::   API key ID returned by the <<security-api-create-api-key,create API key>> request.\n                            This attribute is only provided for authentication using an API key.\n  `apikey.name`        ::   API key name provided in the <<security-api-create-api-key,create API key>> request.\n                            This attribute is only provided for authentication using an API key.\n  `authentication.token.name` :: Name of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n  `authentication.token.type` :: Type of the <<service-accounts,service account>> token.\n                                 This attribute is only provided for authentication using a service account token.\n"
}