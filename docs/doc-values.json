{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.132271",
        "size": 3033,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/doc-values.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "doc-values",
        "version": "8.15"
    },
    "doc": "[[doc-values]]\n=== `doc_values`\n\nMost fields are <<mapping-index,indexed>> by default, which makes them\nsearchable. The inverted index allows queries to look up the search term in\nunique sorted list of terms, and from that immediately have access to the list\nof documents that contain the term.\n\nSorting, aggregations, and access to field values in scripts requires a\ndifferent data access pattern. Instead of looking up the term and finding\ndocuments, we need to be able to look up the document and find the terms that\nit has in a field.\n\nDoc values are the on-disk data structure, built at document index time, which\nmakes this data access pattern possible. They store the same values as the\n`_source` but in a column-oriented fashion that is way more efficient for\nsorting and aggregations. Doc values are supported on almost all field types,\nwith the __notable exception of `text` and `annotated_text` fields__.\n\n[[doc-value-only-fields]]\n==== Doc-value-only fields\n\n<<number,Numeric types>>, <<date,date types>>, the <<boolean,boolean type>>,\n<<ip,ip type>>, <<geo-point,geo_point type>> and the <<keyword,keyword type>>\ncan also be queried when they are not <<mapping-index,indexed>> but only\nhave doc values enabled.\nQuery performance on doc values is much slower than on index structures, but\noffers an interesting tradeoff between disk usage and query performance for\nfields that are only rarely queried and where query performance is not as\nimportant. This makes doc-value-only fields a good fit for fields that are\nnot expected to be normally used for filtering, for example gauges or\ncounters on metric data.\n\nDoc-value-only fields can be configured as follows:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"status_code\": { <1>\n        \"type\":  \"long\"\n      },\n      \"session_id\": { <2>\n        \"type\":  \"long\",\n        \"index\": false\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The `status_code` field is a regular long field.\n<2> The `session_id` field has `index` disabled, and is therefore a\n    doc-value-only long field as doc values are enabled by default.\n\n==== Disabling doc values\n\nAll fields which support doc values have them enabled by default. If you are\nsure that you don't need to sort or aggregate on a field, or access the field\nvalue from a script, you can disable doc values in order to save disk space:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"status_code\": { <1>\n        \"type\":       \"keyword\"\n      },\n      \"session_id\": { <2>\n        \"type\":       \"keyword\",\n        \"doc_values\": false\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The `status_code` field has `doc_values` enabled by default.\n<2> The `session_id` has `doc_values` disabled, but can still be queried.\n\nNOTE: You cannot disable doc values for <<wildcard-field-type,`wildcard`>>\nfields.\n"
}