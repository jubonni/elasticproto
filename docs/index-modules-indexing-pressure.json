{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.479272",
        "size": 3236,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-indexing-pressure.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "index-modules-indexing-pressure",
        "version": "8.15"
    },
    "doc": "[[index-modules-indexing-pressure]]\n== Indexing pressure\n\nIndexing documents into {es} introduces system load in the form of memory and\nCPU load. Each indexing operation includes coordinating, primary, and replica\nstages. These stages can be performed across multiple nodes in a cluster.\n\nIndexing pressure can build up through external operations, such as indexing\nrequests, or internal mechanisms, such as recoveries and {ccr}. If too much\nindexing work is introduced into the system, the cluster can become saturated.\nThis can adversely impact other operations, such as search, cluster\ncoordination, and background processing.\n\nTo prevent these issues, {es} internally monitors indexing load. When the load\nexceeds certain limits, new indexing work is rejected\n\n[discrete]\n[[indexing-stages]]\n=== Indexing stages\n\nExternal indexing operations go through three stages: coordinating, primary, and\nreplica. See <<basic-write-model>>.\n\n[discrete]\n[[memory-limits]]\n=== Memory limits\n\nThe `indexing_pressure.memory.limit` node setting restricts the number of bytes\navailable for outstanding indexing requests. This setting defaults to 10% of\nthe heap.\n\nAt the beginning of each indexing stage, {es} accounts for the\nbytes consumed by an indexing request. This accounting is only released at the\nend of the indexing stage. This means that upstream stages will account for the\nrequest overheard until all downstream stages are complete. For example, the\ncoordinating request will remain accounted for until primary and replica\nstages are complete. The primary request will remain accounted for until each\nin-sync replica has responded to enable replica retries if necessary.\n\nA node will start rejecting new indexing work at the coordinating or primary\nstage when the number of outstanding coordinating, primary, and replica indexing\nbytes exceeds the configured limit.\n\nA node will start rejecting new indexing work at the replica stage when the\nnumber of outstanding replica indexing bytes exceeds 1.5x the configured limit.\nThis design means that as indexing pressure builds on nodes, they will naturally\nstop accepting coordinating and primary work in favor of outstanding replica\nwork.\n\nThe `indexing_pressure.memory.limit` setting's 10% default limit is generously\nsized. You should only change it after careful consideration. Only indexing\nrequests contribute to this limit. This means there is additional indexing\noverhead (buffers, listeners, etc) which also require heap space. Other\ncomponents of {es} also require memory. Setting this limit too high can deny\noperating memory to other operations and components.\n\n[discrete]\n[[indexing-pressure-monitoring]]\n=== Monitoring\n\nYou can use the\n<<cluster-nodes-stats-api-response-body-indexing-pressure,node stats API>> to\nretrieve indexing pressure metrics.\n\n[discrete]\n[[indexing-pressure-settings]]\n=== Indexing pressure settings\n\n`indexing_pressure.memory.limit` {ess-icon}::\n  Number of outstanding bytes that may be consumed by indexing requests. When\n  this limit is reached or exceeded, the node will reject new coordinating and\n  primary operations. When replica operations consume 1.5x this limit, the node\n  will reject new replica operations. Defaults to 10% of the heap.\n"
}