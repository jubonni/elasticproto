{
    "meta": {
        "size": 11577,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-put-template.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "indices-put-template",
        "version": "8.15"
    },
    "doc": "[[indices-put-template]]\n=== Create or update index template API\n++++\n<titleabbrev>Create or update index template</titleabbrev>\n++++\n\nCreates or updates an index template. Index templates define\n<<index-modules-settings,settings>>, <<mapping,mappings>>, and <<aliases,aliases>>\nthat can be applied automatically to new indices.\n\n[source,console]\n--------------------------------------------------\nPUT /_index_template/template_1\n{\n  \"index_patterns\" : [\"template*\"],\n  \"priority\" : 1,\n  \"template\": {\n    \"settings\" : {\n      \"number_of_shards\" : 2\n    }\n  }\n}\n--------------------------------------------------\n// TESTSETUP\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nDELETE _index_template/template_*\n--------------------------------------------------\n// TEARDOWN\n\n//////////////////////////\n\n[[put-index-template-api-request]]\n==== {api-request-title}\n\n`PUT /_index_template/<index-template>`\n\n[[put-index-template-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`manage_index_templates` or `manage` <<privileges-list-cluster,cluster\nprivilege>> to use this API.\n\n[[put-index-template-api-desc]]\n==== {api-description-title}\n\n{es} applies templates to new indices based on an\nwildcard pattern that matches the index name.\n\nIndex templates are applied during data stream or index creation.\nFor data streams, these settings and mappings are applied when the stream's backing indices are created.\n\nSettings and mappings specified in a <<indices-create-index, create index>>\nrequest override any settings or mappings specified in an index template.\n\nChanges to index templates do not affect\nexisting indices, including the existing backing indices of a data stream.\n\n===== Comments in index templates\nYou can use C-style /* */ block comments in index templates. You can include comments anywhere in\nthe request body, except before the opening curly bracket.\n\n[[put-index-template-api-path-params]]\n==== {api-path-parms-title}\n\n`<index-template>`::\n(Required, string)\nName of the index template to create.\n\n\n[[put-index-template-api-query-params]]\n==== {api-query-parms-title}\n\n`create`::\n(Optional, Boolean)\nIf `true`, this request cannot replace or update existing index templates. Defaults to `false`.\n\ninclude::{docdir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n[role=\"child_attributes\"]\n[[put-index-template-api-request-body]]\n==== {api-request-body-title}\n\n// tag::request-body[]\n\n`composed_of`::\n(Optional, array of strings)\nAn ordered list of component template names. Component templates are merged in the order\nspecified, meaning that the last component template specified has the highest precedence. See\n<<multiple-component-templates,Composing multiple component templates>> for an example.\n\n// tag::index-template-api-body[]\n`data_stream`::\n(Optional, object)\nIf this object is included, the template is used to create data streams and\ntheir backing indices. Supports an empty object.\n+\nData streams require a matching index template with a `data_stream` object.\nSee <<create-index-template,create an index template>>.\n+\n.Properties of `data_stream`\n[%collapsible%open]\n=====\n`allow_custom_routing`::\n(Optional, Boolean) If `true`, the data stream supports\n<<mapping-routing-field,custom routing>>. Defaults to `false`.\n\n`hidden`::\n(Optional, Boolean) If `true`, the data stream is <<multi-hidden,hidden>>. Defaults to\n`false`.\n\n`index_mode`::\n(Optional, string) Type of data stream to create. Valid values are `null`\n(regular data stream) and `time_series` (<<tsds,time series data stream>>).\n+\nIf `time_series`, each backing index has an `index.mode` index setting of\n`time_series`.\n=====\n\n`index_patterns`::\n(Required, array of strings)\nArray of wildcard (`*`) expressions\nused to match the names of data streams and indices during creation.\n+\n{es} includes several built-in index templates. To avoid naming collisions with\nthese templates, see <<avoid-index-pattern-collisions>>.\n\n`_meta`::\n(Optional, object)\nOptional user metadata about the index template. May have any contents.\nThis map is not automatically generated by {es}.\n\n`priority`::\n(Optional, integer)\nPriority to determine index template precedence when a new data stream or index is created. The index template with\nthe highest priority is chosen. If no priority is specified the template is treated as though it is\nof priority 0 (lowest priority).\nThis number is not automatically generated by {es}.\n\n`template`::\n(Optional, object)\nTemplate to be applied. It may optionally include an `aliases`, `mappings`, or\n`settings` configuration.\n+\n.Properties of `template`\n[%collapsible%open]\n=====\n`aliases`::\n(Optional, object of objects) Aliases to add.\n+\n// tag::template-ds-alias[]\nIf the index template includes a `data_stream` object, these are data stream\naliases. Otherwise, these are index aliases. Data stream aliases ignore the\n`index_routing`, `routing`, and `search_routing` options.\n// end::template-ds-alias[]\n+\ninclude::{es-ref-dir}/indices/create-index.asciidoc[tag=aliases-props]\n\ninclude::{docdir}/rest-api/common-parms.asciidoc[tag=mappings]\n\ninclude::{docdir}/rest-api/common-parms.asciidoc[tag=settings]\n=====\n\n`version`::\n(Optional, integer)\nVersion number used to manage index templates externally.\nThis number is not automatically generated by {es}.\n\n`deprecated`::\n(Optional, boolean)\nMarks this index template as deprecated.\nWhen creating or updating a non-deprecated index template that uses deprecated components,\n{es} will emit a deprecation warning.\n// end::index-template-api-body[]\n// end::request-body[]\n\n[[put-index-template-api-example]]\n==== {api-examples-title}\n\n===== Index template with index aliases\n\nYou can include <<aliases,index aliases>> in an index template.\n\n[source,console]\n--------------------------------------------------\nPUT _index_template/template_1\n{\n  \"index_patterns\" : [\"template*\"],\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    },\n    \"aliases\" : {\n        \"alias1\" : {},\n        \"alias2\" : {\n            \"filter\" : {\n                \"term\" : {\"user.id\" : \"kimchy\" }\n            },\n            \"routing\" : \"shard-1\"\n        },\n        \"{index}-alias\" : {} <1>\n    }\n  }\n}\n--------------------------------------------------\n<1> the `{index}` placeholder in the alias name will be replaced with the\nactual index name that the template gets applied to, during index creation.\n\n\n[[multiple-templates]]\n===== Multiple matching templates\n\nIf multiple index templates match the name of a new index or data stream,\nthe template with the highest priority is used. For example:\n\n[source,console]\n--------------------------------------------------\nPUT /_index_template/template_1\n{\n  \"index_patterns\" : [\"temp*\"],\n  \"priority\" : 0,\n  \"template\": {\n    \"settings\" : {\n      \"number_of_shards\" : 1,\n      \"number_of_replicas\": 0\n    },\n    \"mappings\" : {\n      \"_source\" : { \"enabled\" : false }\n    }\n  }\n}\n\nPUT /_index_template/template_2\n{\n  \"index_patterns\" : [\"template*\"],\n  \"priority\" : 1,\n  \"template\": {\n    \"settings\" : {\n      \"number_of_shards\" : 2\n    },\n    \"mappings\" : {\n      \"_source\" : { \"enabled\" : true }\n    }\n  }\n}\n--------------------------------------------------\n\nFor indices that start with `template*`, `_source` will enabled, and the index will have two primary\nshards and one replica, because only `template_2` will be applied.\n\nNOTE: Multiple templates with overlapping index patterns at the same priority are not allowed, and\nan error will be thrown when attempting to create a template matching an existing index template at\nidentical priorities.\n\n\n[[versioning-templates]]\n===== Template versioning\n\nYou can use the `version` parameter to add a version number to an index template.\nExternal systems can use these version numbers to simplify template management.\n\nThe `version` parameter is optional and not automatically generated or used by {es}.\n\nTo unset a `version`, replace the template without specifying one.\n\n[source,console]\n--------------------------------------------------\nPUT /_index_template/template_1\n{\n  \"index_patterns\" : [\"foo\", \"bar\"],\n  \"priority\" : 0,\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 1\n    }\n  },\n  \"version\": 123\n}\n--------------------------------------------------\n\nTo check the `version`, you can use the <<indices-get-template, get index template>> API.\n\n[[template-metadata]]\n===== Template metadata\n\nYou can use the `_meta` parameter to add arbitrary metadata to an index template.\nThis user-defined object is stored in the cluster state,\nso keeping it short is preferable.\n\nThe `_meta` parameter is optional and not automatically generated or used by {es}.\n\nTo unset `_meta`, replace the template without specifying one.\n\n[source,console]\n--------------------------------------------------\nPUT /_index_template/template_1\n{\n  \"index_patterns\": [\"foo\", \"bar\"],\n  \"template\": {\n    \"settings\" : {\n        \"number_of_shards\" : 3\n    }\n  },\n  \"_meta\": {\n    \"description\": \"set number of shards to three\",\n    \"serialization\": {\n      \"class\": \"MyIndexTemplate\",\n      \"id\": 17\n    }\n  }\n}\n--------------------------------------------------\n\nTo check the `_meta`, you can use the <<indices-get-template, get index template>> API.\n\n[[data-stream-definition]]\n===== Data stream definition\n\nTo use an index template for data streams, the template must include a\n`data_stream` object. See <<create-index-template,create an index template>>.\n\n[source,console]\n--------------------------------------------------\nPUT /_index_template/template_1\n{\n  \"index_patterns\": [\"logs-*\"],\n  \"data_stream\": { }\n}\n--------------------------------------------------\n\n[[multiple-component-templates]]\n===== Composing aliases, mappings, and settings\n\nWhen multiple component templates are specified in the `composed_of` field for an index template,\nthey are merged in the order specified, meaning that later component templates override earlier\ncomponent templates. Any mappings, settings, or aliases from the parent index template are merged\nin next. Finally, any configuration on the index request itself is merged.\n\nIn this example, the order of the two component templates changes the number of shards for an\nindex:\n\n[source,console]\n--------------------------------------------------\nPUT /_component_template/template_with_2_shards\n{\n  \"template\": {\n    \"settings\": {\n      \"index.number_of_shards\": 2\n    }\n  }\n}\n\nPUT /_component_template/template_with_3_shards\n{\n  \"template\": {\n    \"settings\": {\n      \"index.number_of_shards\": 3\n    }\n  }\n}\n\nPUT /_index_template/template_1\n{\n  \"index_patterns\": [\"t*\"],\n  \"composed_of\": [\"template_with_2_shards\", \"template_with_3_shards\"]\n}\n--------------------------------------------------\n\nIn this case, an index matching `t*` will have three primary shards. If the order of composed\ntemplates were reversed, the index would have two primary shards.\n\nMapping definitions are merged recursively, which means that later mapping components can\nintroduce new field mappings and update the mapping configuration. If a field mapping is\nalready contained in an earlier component, its definition will be completely overwritten\nby the later one.\n\nThis recursive merging strategy applies not only to field mappings, but also root options like\n`dynamic_templates` and `meta`. If an earlier component contains a `dynamic_templates` block,\nthen by default new `dynamic_templates` entries are appended onto the end. If an entry already\nexists with the same key, then it is overwritten by the new definition.\n"
}