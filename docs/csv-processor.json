{
    "meta": {
        "size": 1815,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/csv-processor.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "csv-processor",
        "version": "8.15"
    },
    "doc": "[[csv-processor]]\n=== CSV processor\n++++\n<titleabbrev>CSV</titleabbrev>\n++++\n\nExtracts fields from CSV line out of a single text field within a document. Any empty field in CSV will be skipped.\n\n[[csv-options]]\n.CSV Options\n[options=\"header\"]\n|======\n| Name              | Required  | Default  | Description\n| `field`           | yes       | -        | The field to extract data from\n| `target_fields`   | yes       | -        | The array of fields to assign extracted values to\n| `separator`       | no        | ,        | Separator used in CSV, has to be single character string\n| `quote`           | no        | \"        | Quote used in CSV, has to be single character string\n| `ignore_missing`  | no        | `false`  | If `true` and `field` does not exist, the processor quietly exits without modifying the document\n| `trim`            | no        | `false`  | Trim whitespaces in unquoted fields\n| `empty_value`     | no        | -        | Value used to fill empty fields, empty fields will be skipped if this is not provided.\n                                             Empty field is one with no value (2 consecutive separators) or empty quotes (`\"\"`)\ninclude::common-options.asciidoc[]\n|======\n\n[source,js]\n--------------------------------------------------\n{\n  \"csv\": {\n    \"field\": \"my_field\",\n    \"target_fields\": [\"field1\", \"field2\"]\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nIf the `trim` option is enabled then any whitespace in the beginning and in the end of each unquoted field will be trimmed.\nFor example with configuration above, a value of `A, B` will result in field `field2`\nhaving value `{nbsp}B` (with space at the beginning). If `trim` is enabled `A, B` will result in field `field2`\nhaving value `B` (no whitespace). Quoted fields will be left untouched.\n"
}