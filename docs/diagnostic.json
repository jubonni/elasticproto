{
    "meta": {
        "size": 6433,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/diagnostic.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "diagnostic",
        "version": "8.15"
    },
    "doc": "[[diagnostic]]\n== Capturing diagnostics\n++++\n<titleabbrev>Capture diagnostics</titleabbrev>\n++++\n:keywords: Elasticsearch diagnostic, diagnostics\n\nThe {es} https://github.com/elastic/support-diagnostics[Support Diagnostic] tool captures a point-in-time snapshot of cluster statistics and most settings. \nIt works against all {es} versions. \n\nThis information can be used to troubleshoot problems with your cluster. For examples of issues that you can troubleshoot using Support Diagnostic tool output, refer to https://www.elastic.co/blog/why-does-elastic-support-keep-asking-for-diagnostic-files[the Elastic blog].\n\nYou can generate diagnostic information using this tool before you contact https://support.elastic.co[Elastic Support] or \nhttps://discuss.elastic.co[Elastic Discuss] to minimize turnaround time. \n\n[discrete]\n[[diagnostic-tool-requirements]]\n=== Requirements\n\n-  Java Runtime Environment or Java Development Kit v1.8 or higher\n\n[discrete]\n[[diagnostic-tool-access]]\n=== Access the tool\n\nThe Support Diagnostic tool is included as a sub-library in some Elastic deployments: \n\n* {ece}: Located under **{ece}** > **Deployment** > **Operations** > \n**Prepare Bundle** > **{es}**. \n* {eck}: Run as https://www.elastic.co/guide/en/cloud-on-k8s/current/k8s-take-eck-dump.html[`eck-diagnostics`].\n\nYou can also directly download the `diagnostics-X.X.X-dist.zip` file for the latest Support Diagnostic release\nfrom https://github.com/elastic/support-diagnostics/releases/latest[the `support-diagnostic` repo].\n\n\n[discrete]\n[[diagnostic-capture]]\n=== Capture diagnostic information\n\nTo capture an {es} diagnostic: \n\n. In a terminal, verify that your network and user permissions are sufficient to connect to your {es} \ncluster by polling the cluster's <<cluster-health,health>>.\n+\nFor example, with the parameters `host:localhost`, `port:9200`, and `username:elastic`, you'd use the following curl request:\n+\n[source,sh]\n----\ncurl -X GET -k -u elastic -p https://localhost:9200/_cluster/health\n----\n// NOTCONSOLE\n+\nIf you receive a an HTTP 200 `OK` response, then you can proceed to the next step. If you receive a different \nresponse code, then <<diagnostic-non-200,diagnose the issue>> before proceeding.\n\n. Using the same environment parameters, run the diagnostic tool script. \n+\nFor information about the parameters that you can pass to the tool, refer to the https://github.com/elastic/support-diagnostics#standard-options[diagnostic \nparameter reference]. \n+\nThe following command options are recommended:\n+\n**Unix-based systems**\n+\n[source,sh]\n----\nsudo ./diagnostics.sh --type local --host localhost --port 9200 -u elastic -p --bypassDiagVerify --ssl --noVerify\n----\n+\n**Windows**\n+\n[source,sh]\n----\nsudo .\\diagnostics.bat --type local --host localhost --port 9200 -u elastic -p --bypassDiagVerify --ssl --noVerify\n----\n+\n[TIP]\n.Script execution modes\n====\nYou can execute the script in three https://github.com/elastic/support-diagnostics#diagnostic-types[modes]: \n\n* `local` (default, recommended): Polls the <<rest-apis,{es} API>>, \ngathers operating system info, and captures cluster and GC logs. \n\n* `remote`: Establishes an ssh session \nto the applicable target server to pull the same information as `local`.\n\n* `api`: Polls the <<rest-apis,{es} API>>. All other data must be \ncollected manually.\n====\n\n. When the script has completed, verify that no errors were logged to `diagnostic.log`. \nIf the log file contains errors, then refer to <<diagnostic-log-errors,Diagnose errors in `diagnostic.log`>>.\n\n. If the script completed without errors, then an archive with the format `<diagnostic type>-diagnostics-<DateTimeStamp>.zip` is created in the working directory, or an output directory you have specified. You can review or share the diagnostic archive as needed.\n\n[discrete]\n[[diagnostic-non-200]]\n=== Diagnose a non-200 cluster health response\n\nWhen you poll your cluster health, if you receive any response other than `200 0K`, then the diagnostic tool \nmight not work as intended. The following are possible error codes and their resolutions:\n\nHTTP 401 `UNAUTHENTICATED`::\nAdditional information in the error will usually indicate either \nthat your `username:password` pair is invalid, or that your `.security` \nindex is unavailable and you need to setup a temporary \n<<file-realm,file-based realm>> user with `role:superuser` to authenticate.\n\nHTTP 403 `UNAUTHORIZED`::\nYour `username` is recognized but \nhas insufficient permissions to run the diagnostic. Either use a different \nusername or elevate the user's privileges.\n\nHTTP 429 `TOO_MANY_REQUESTS` (for example, `circuit_breaking_exception`)::\nYour username authenticated and authorized, but the cluster is under \nsufficiently high strain that it's not responding to API calls. These \nresponses are usually intermittent. You can proceed with running the diagnostic, \nbut the diagnostic results might be incomplete.\n\nHTTP 504 `BAD_GATEWAY`::\nYour network is experiencing issues reaching the cluster. You might be using a proxy or firewall. \nConsider running the diagnostic tool from a different location, confirming your port, or using an IP\ninstead of a URL domain. \n\nHTTP 503 `SERVICE_UNAVAILABLE` (for example, `master_not_discovered_exception`)::\nYour cluster does not currently have an elected master node, which is \nrequired for it to be API-responsive. This might be temporary while the master \nnode rotates. If the issue persists, then <<cluster-fault-detection,investigate the cause>> \nbefore proceeding. \n\n[discrete]\n[[diagnostic-log-errors]]\n=== Diagnose errors in `diagnostic.log`\n\nThe following are common errors that you might encounter when running the diagnostic tool:\n\n* `Error: Could not find or load main class com.elastic.support.diagnostics.DiagnosticApp`\n+\nThis indicates that you accidentally downloaded the source code file \ninstead of `diagnostics-X.X.X-dist.zip` from the releases page.\n\n* `Could not retrieve the Elasticsearch version due to a system or network error - unable to continue.` \n+ \nThis indicates that the diagnostic couldn't run commands against the cluster. \nPoll the cluster's health again, and ensure that you're using the same parameters \nwhen you run the dianostic batch or shell file.\n\n* A `security_exception` that includes `is unauthorized for user`:\n+\nThe provided user has insufficient admin permissions to run the diagnostic tool. Use another\nuser, or grant the user `role:superuser` privileges."
}