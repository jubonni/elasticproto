{
    "meta": {
        "size": 5820,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-configuring-url.html",
        "type": "documentation",
        "role": [
            "xpack",
            "screenshot",
            "screenshot"
        ],
        "has_code": false,
        "title": "ml-configuring-url",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ml-configuring-url]]\n= Adding custom URLs to machine learning results\n\nYou can optionally attach one or more custom URLs to your {anomaly-jobs}. These\nlinks appear in the anomalies table in the *Anomaly Explorer* and\n*Single Metric Viewer* and can direct you to dashboards, the *Discover* app, or \nexternal websites. For example, you can define a custom URL that provides a way\nfor users to drill down to the source data from the results set:\n\n[role=\"screenshot\"]\nimage::images/ml-customurl.jpg[\"An example of the custom URL links in the Anomaly Explorer anomalies table\"]\n\nWhen you create or edit an {anomaly-job} in {kib}, it simplifies the creation\nof the custom URLs for {kib} dashboards and the *Discover* app and it enables\nyou to test your URLs. For example:\n\n[role=\"screenshot\"]\nimage::images/ml-customurl-edit.gif[\"Add a custom URL in {kib}\",width=75%]\n\nFor each custom URL, you must supply the URL and a label, which is the link text\nthat appears in the anomalies table. You can also optionally supply a time \nrange. When you link to *Discover* or a {kib} dashboard, you'll have additional\noptions for specifying the pertinent {data-source} or dashboard name and query\nentities.\n\n[discrete]\n[[ml-configuring-url-strings]]\n== String substitution in custom URLs\n\nYou can use dollar sign ($) delimited tokens in a custom URL. These tokens are\nsubstituted for the values of the corresponding fields in the anomaly records.\nFor example, the `Raw data` URL might resolve to `discover#/?_g=(time:(from:'$earliest$',mode:absolute,to:'$latest$'))&_a=(index:ff959d40-b880-11e8-a6d9-e546fe2bba5f,query:(language:kuery,query:'customer_full_name.keyword:\"$customer_full_name.keyword$\"'))`. In this case, the pertinent value of the `customer_full_name.keyword` field\nis passed to the target page when you click the link. \n\nTIP: Not all fields in your source data exist in the anomaly results. If a\nfield is specified in the detector as the `field_name`, `by_field_name`,\n`over_field_name`, or `partition_field_name`, for example, it can be used in a\ncustom URL. A field that is used only in the `categorization_field_name`\nproperty, however, does not exist in the anomaly results. When you create your\ncustom URL in {kib}, the *Query entities* option is shown only when there are\nappropriate fields in the detectors.\n\nThe `$earliest$` and `$latest$` tokens pass the beginning and end of the time\nspan of the selected anomaly to the target page. The tokens are substituted with\ndate-time strings in ISO-8601 format. If you selected an interval of 1 hour for\nthe anomalies table, these tokens use one hour on either side of the anomaly\ntime as the earliest and latest times. You can alter this behavior by setting a\ntime range for the custom URL.\n\nThere are also `$mlcategoryregex$` and `$mlcategoryterms$` tokens, which pertain\nto {anomaly-jobs} where you are categorizing field values. For more information\nabout this type of analysis, see <<ml-configuring-categories>>. The\n`$mlcategoryregex$` token passes the regular expression value of the category of\nthe selected anomaly, as identified by the value of the `mlcategory` field of\nthe anomaly record. The `$mlcategoryterms$` token passes the terms value of the\ncategory of the selected anomaly. Each categorization term is prefixed by a plus\n(+) character, so that when the token is passed to a {kib} dashboard, the\nresulting dashboard query seeks a match for all of the terms of the category.\nFor example, the following API updates a job to add a custom URL that uses \n`$earliest$`, `$latest$`, and `$mlcategoryterms$` tokens:\n\n[source,console]\n----------------------------------\nPOST _ml/anomaly_detectors/sample_job/_update\n{\n  \"custom_settings\": {\n        \"custom_urls\": [\n          {\n            \"url_name\": \"test-link1\",\n            \"time_range\": \"1h\",\n            \"url_value\": \"discover#/?_g=(time:(from:'$earliest$',mode:quick,to:'$latest$'))&_a=(index:'90943e30-9a47-11e8-b64d-95841ca0b247',query:(language:lucene,query_string:(analyze_wildcard:!t,query:'$mlcategoryterms$')),sort:!(time,desc))\"\n          }\n        ]\n      }\n}\n----------------------------------\n//TEST[skip:setup:sample_job]\n\nWhen you click this custom URL in the anomalies table in {kib}, it opens up the\n*Discover* page and displays source data for the period one hour before and \nafter the anomaly occurred. Since this job is categorizing log messages, some \n`$mlcategoryterms$` token values that are passed to the target page in the query\nmight include `+REC +Not +INSERTED +TRAN +Table +hostname +dbserver.acme.com`.\n\n[TIP]\n===============================\n* The custom URL links in the anomaly tables use pop-ups. You must configure\nyour web browser so that it does not block pop-up windows or create an exception\nfor your {kib} URL.\n* When creating a link to a {kib} dashboard, the URLs for dashboards can be very\nlong. Be careful of typos, end of line characters, and URL encoding. Also ensure\nyou use the appropriate index ID for the target {kib} {data-source}.\n* If you use an influencer name for string substitution, keep in mind that it\nmight not always be available in the analysis results and the URL is invalid in\nthose cases. There is not always a statistically significant influencer for each\nanomaly.\n* The dates substituted for `$earliest$` and `$latest$` tokens are in\nISO-8601 format and the target system must understand this format.\n* If the job performs an analysis against nested JSON fields, the tokens for\nstring substitution can refer to these fields using dot notation. For example,\n`$cpu.total$`.\n* {es} source data mappings might make it difficult for the query string to work.\nTest the custom URL before saving the job configuration to check that it works\nas expected, particularly when using string substitution.\n===============================\n"
}