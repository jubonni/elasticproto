{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.777582",
        "size": 2934,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/transient-settings-migration-guide.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "transient-settings-migration-guide",
        "version": "8.15"
    },
    "doc": "[[transient-settings-migration-guide]]\n=== Transient settings migration guide\n\n////\n[source,console]\n----\nPUT _cluster/settings\n{\n  \"transient\": {\n    \"cluster.indices.close.enable\": false,\n    \"indices.recovery.max_bytes_per_sec\": \"50mb\"\n  }\n}\n----\n////\n\nWe no longer recommend using transient cluster settings. You can use transient\nsettings to make temporary configuration changes to a cluster. However, a\ncluster restart or cluster instability can unexpectedly clear these settings,\nleading to a potentially undesired cluster configuration.\n\nTo avoid this risk, reset any transient settings you've configured on\nyour cluster. Convert any transient setting you'd like to keep to a persistent\nsetting, which persists across cluster restarts and cluster instability. You\nshould also update any custom workflows and applications to use persistent\nsettings instead of transient settings.\n\nIMPORTANT: Some Elastic products may use transient settings when performing\nspecific operations. Only reset transient settings configured by you, your\nusers, or your custom workflows and applications.\n\nTo reset and convert transient settings:\n\n. Get a list of any configured transient settings using the\n<<cluster-get-settings,cluster get settings API>>.\n+\n[source,console]\n----\nGET _cluster/settings?flat_settings=true&filter_path=transient\n----\n// TEST[continued]\n+\nThe API returns transient settings in the `transient` object. If this object is\nempty, your cluster has no transient settings, and you can skip the remaining\nsteps.\n+\n[source,console-result]\n----\n{\n  \"persistent\": { ... },\n  \"transient\": {\n    \"cluster.indices.close.enable\": \"false\",\n    \"indices.recovery.max_bytes_per_sec\": \"50mb\"\n  }\n}\n----\n// TESTRESPONSE[s/\"persistent\": \\{ \\.\\.\\. \\},//]\n\n. Copy any settings you'd like to convert into the `persistent` object of a\n<<cluster-update-settings,cluster update settings API>> request. In the same\nrequest, reset any transient settings by assigning them a `null` value.\n+\n[source,console]\n----\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"cluster.indices.close.enable\": false,\n    \"indices.recovery.max_bytes_per_sec\": \"50mb\"\n  },\n  \"transient\": {\n    \"*\": null\n  }\n}\n----\n// TEST[continued]\n\n. Use the <<cluster-get-settings,cluster get settings API>> to confirm your\ncluster has no remaining transient settings.\n+\n[source,console]\n----\nGET _cluster/settings?flat_settings=true\n----\n// TEST[continued]\n+\nIf the `transient` object is empty, your cluster has no transient settings.\n+\n[source,console-result]\n----\n{\n  \"persistent\": {\n    \"cluster.indices.close.enable\": \"false\",\n    \"indices.recovery.max_bytes_per_sec\": \"50mb\",\n    ...\n  },\n  \"transient\": {\n  }\n}\n----\n// TESTRESPONSE[s/\"50mb\",/\"50mb\"/]\n// TESTRESPONSE[s/\\.\\.\\.//]\n\n////\n[source,console]\n----\nPUT _cluster/settings\n{\n  \"persistent\" : {\n    \"cluster.indices.close.enable\": null,\n    \"indices.recovery.max_bytes_per_sec\": null\n  }\n}\n----\n// TEST[continued]\n////\n"
}