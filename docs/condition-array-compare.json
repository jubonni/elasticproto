{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.525089",
        "size": 2999,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/condition-array-compare.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "condition-array-compare",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[condition-array-compare]]\n=== {watcher} array compare condition\n++++\n<titleabbrev>Array compare condition</titleabbrev>\n++++\n\nUse `array_compare` to compare an array of values in the execution context to a \ngiven value. See <<condition-compare-operators>>\nfor the operators you can use. \n\n\n\n==== Using an array compare condition\n\nTo use the `array_compare` condition, you specify the array in the execution \ncontext that you want to evaluate, a\n<<condition-compare-operators,comparison operator>>, and the value you want to\ncompare against. Optionally, you can specify the path to the field in each array\nelement that you want to evaluate. \n\nFor example, the following `array_compare` condition returns `true` if there \nis at least one bucket in the aggregation that has a `doc_count` greater\nthan or equal to 25:\n\n[source,js]\n--------------------------------------------------\n{\n  \"condition\": {\n    \"array_compare\": {\n      \"ctx.payload.aggregations.top_tweeters.buckets\" : { <1>\n        \"path\": \"doc_count\", <2>\n        \"gte\": { <3>\n          \"value\": 25 <4>\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> The path to the array in the execution\n    context that you want to evaluate, specified in dot notation.\n<2> The path to the field in each array element that you want to evaluate.\n<3> The <<condition-compare-operators,comparison operator>> to use.\n<4> The comparison value. Supports date math like the \n    <<compare-condition-date-math,compare condition>>.\n\nNOTE: When using fieldnames that contain a dot this condition will not\nwork, use a <<condition-script,script condition>> instead.\n\n==== Array-compare condition attributes\n\n[options=\"header\"]\n|======\n| Name                                 | Description\n|`<array path>`                        | The path to the array in the execution\n                                         context, specified in dot notation.\n                                         For example, `ctx.payload.aggregations.top_tweeters.buckets`.\n| `<array path>.path`                  | The path to the field in each array element \n                                         that you want to evaluate. For example,\n                                         `doc_count`. Defaults to an empty string.\n| `<array path>.<operator>.quantifier` | How many matches are required for the \n                                         comparison to evaluate to `true`: `some` \n                                         or `all`. Defaults to `some`--there must\n                                         be at least one match. If the array is \n                                         empty, the comparison evaluates to `true`\n                                         if the quantifier is set to `all` and \n                                         `false` if the quantifier is set to \n                                         `some`. \n| `<array path>.<operator>.value`      | The value to compare against.\n   \n|======\n"
}