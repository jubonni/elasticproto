{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.929076",
        "size": 5160,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/migration-api-deprecation.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "migration-api-deprecation",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[migration-api-deprecation]]\n=== Deprecation info APIs\n++++\n<titleabbrev>Deprecation info</titleabbrev>\n++++\n\ninclude::{es-ref-dir}/migration/apis/shared-migration-apis-tip.asciidoc[]\n\nThe deprecation API is to be used to retrieve information about different\ncluster, node, and index level settings that use deprecated features that will\nbe removed or changed in a future version.\n\n[[migration-api-request]]\n==== {api-request-title}\n\n`GET /_migration/deprecations` +\n\n`GET /<target>/_migration/deprecations`\n\n[[migration-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[migration-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Optional, string)\nComma-separate list of data streams or indices to check. Wildcard (`*`)\nexpressions are supported.\n+\nWhen you specify this parameter, only deprecations for the specified\ndata streams or indices are returned.\n\n[[migration-api-settings]]\n==== Settings\n\nYou can use the following settings to control the behavior of the deprecation info API:\n\n[[skip_deprecated_settings]]\nNOTE: This setting is designed for indirect use by {ess-trial}[{ess}], {ece-ref}[{ece}], and {eck-ref}[{eck}].\nDirect use is not supported.\n\n// tag::skip_deprecated_settings-tag[]\n`deprecation.skip_deprecated_settings`\n(<<dynamic-cluster-setting,Dynamic>>)\nDefaults to an empty list. Set to a list of setting names to be ignored by the deprecation info API. Any\ndeprecations related to settings in this list will not be returned by the API. Simple wildcard matching is supported.\n// end::skip_deprecated_settings-tag[]\n\n[[migration-api-example]]\n==== {api-examples-title}\n\nTo see the list of offenders in your cluster, submit a GET request to the\n`_migration/deprecations` endpoint:\n\n[source,console]\n--------------------------------------------------\nGET /_migration/deprecations\n--------------------------------------------------\n// TEST[skip:cannot assert tests have certain deprecations]\n\nExample response:\n\n\n[\"source\",\"js\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\n{\n  \"cluster_settings\" : [\n    {\n      \"level\" : \"critical\",\n      \"message\" : \"Cluster name cannot contain ':'\",\n      \"url\" : \"{ref-70}/breaking-changes-7.0.html#_literal_literal_is_no_longer_allowed_in_cluster_name\",\n      \"details\" : \"This cluster is named [mycompany:logging], which contains the illegal character ':'.\"\n    }\n  ],\n  \"node_settings\" : [ ],\n  \"index_settings\" : {\n    \"logs:apache\" : [\n      {\n        \"level\" : \"warning\",\n        \"message\" : \"Index name cannot contain ':'\",\n        \"url\" : \"{ref-70}/breaking-changes-7.0.html#_literal_literal_is_no_longer_allowed_in_index_name\",\n        \"details\" : \"This index is named [logs:apache], which contains the illegal character ':'.\"\n      }\n    ]\n  },\n  \"ml_settings\" : [ ]\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nThe response breaks down all the specific forward-incompatible settings that you\nshould resolve before upgrading your cluster. Any offending settings are\nrepresented as a deprecation warning.\n\nThe following is an example deprecation warning:\n\n[\"source\",\"js\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\n{\n  \"level\" : \"warning\",\n  \"message\" : \"This is the generic descriptive message of the breaking change\",\n  \"url\" : \"{ref-60}/breaking_60_indices_changes.html\",\n  \"details\" : \"more information, like which nodes, indices, or settings are to blame\"\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nAs is shown, there is a `level` property that describes the significance of the\nissue.\n\n|=======\n|warning | You can upgrade directly, but you are using deprecated functionality\nwhich will not be available or behave differently in a future version.\n|critical | You cannot upgrade without fixing this problem.\n|=======\n\nThe `message` property and the optional `details` property provide descriptive\ninformation about the deprecation warning. The `url` property provides a link to\nthe Breaking Changes Documentation, where you can find more information about\nthis change.\n\nAny cluster-level deprecation warnings can be found under the `cluster_settings`\nkey. Similarly, any node-level warnings are found under `node_settings`. Since\nonly a select subset of your nodes might incorporate these settings, it is\nimportant to read the `details` section for more information about which nodes\nare affected. Index warnings are sectioned off per index and can be filtered\nusing an index-pattern in the query. This section includes warnings for the\nbacking indices of data streams specified in the request path. Machine Learning\nrelated deprecation warnings can be found under the `ml_settings` key.\n\nThe following example request shows only index-level deprecations of all\n`logstash-*` indices:\n\n[source,console]\n--------------------------------------------------\nGET /logstash-*/_migration/deprecations\n--------------------------------------------------\n// TEST[skip:cannot assert tests have certain deprecations]\n"
}