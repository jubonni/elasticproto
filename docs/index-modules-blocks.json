{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.561067",
        "size": 4955,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-blocks.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "index-modules-blocks",
        "version": "8.15"
    },
    "doc": "[[index-modules-blocks]]\n== Index blocks\n\nIndex blocks limit the kind of operations that are available on a certain\nindex. The blocks come in different flavours, allowing to block write,\nread, or metadata operations. The blocks can be set / removed using dynamic\nindex settings, or can be added using a dedicated API, which also ensures\nfor write blocks that, once successfully returning to the user, all shards\nof the index are properly accounting for the block, for example that all\nin-flight writes to an index have been completed after adding the write\nblock.\n\n[discrete]\n[[index-block-settings]]\n=== Index block settings\n\nThe following _dynamic_ index settings determine the blocks present on an\nindex:\n\n[[index-blocks-read-only]]\n`index.blocks.read_only`::\n\n    Set to `true` to make the index and index metadata read only, `false` to\n    allow writes and metadata changes.\n\n`index.blocks.read_only_allow_delete`::\n\n    Similar to `index.blocks.write`, except that you can delete the index when\n    this block is in place. Do not set or remove this block yourself. The\n    <<disk-based-shard-allocation,disk-based shard allocator>> sets and removes\n    this block automatically according to the available disk space.\n+\nDeleting documents from an index to release resources - rather than deleting\nthe index itself - increases the index size temporarily, and therefore may not\nbe possible when nodes are low on disk space. When\n`index.blocks.read_only_allow_delete` is set to `true`, deleting documents is\nnot permitted. However, deleting the index entirely requires very little extra\ndisk space and frees up the disk space consumed by the index almost immediately\nso this is still permitted.\n+\nIMPORTANT: {es} adds the read-only-allow-delete index block automatically when\nthe disk utilization exceeds the flood stage watermark, and removes this block\nautomatically when the disk utilization falls under the high watermark. See\n<<disk-based-shard-allocation,Disk-based shard allocation>> for more\ninformation about watermarks, and <<fix-watermark-errors,Fix watermark errors>>\nfor help with resolving watermark issues.\n\n`index.blocks.read`::\n\n    Set to `true` to disable read operations against the index.\n\n[[index-blocks-write]]\n`index.blocks.write`::\n\n    Set to `true` to disable data write operations against the index. Unlike\n    `read_only`, this setting does not affect metadata. For instance, you can\n    adjust the settings of an index with a `write` block, but you cannot adjust\n    the settings of an index with a `read_only` block.\n\n`index.blocks.metadata`::\n\n    Set to `true` to disable index metadata reads and writes.\n\n[discrete]\n[[add-index-block]]\n=== Add index block API\n\nAdds an index block to an index.\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_block/write\n--------------------------------------------------\n// TEST[setup:my_index]\n\n\n[discrete]\n[[add-index-block-api-request]]\n==== {api-request-title}\n\n`PUT /<index>/_block/<block>`\n\n\n[discrete]\n[role=\"child_attributes\"]\n[[add-index-block-api-path-params]]\n==== {api-path-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index]\n+\nBy default, you must explicitly name the indices you are adding blocks to.\nTo allow the adding of blocks to indices with `_all`, `*`, or other wildcard\nexpressions, change the `action.destructive_requires_name` setting to `false`.\nYou can update this setting in the `elasticsearch.yml` file\nor using the <<cluster-update-settings,cluster update settings>> API.\n`<block>`::\n(Required, string)\nBlock type to add to the index.\n+\n.Valid values for `<block>`\n[%collapsible%open]\n====\n`metadata`::\nDisable metadata changes, such as closing the index.\n\n`read`::\nDisable read operations.\n\n`read_only`::\nDisable write operations and metadata changes.\n\n`write`::\nDisable write operations. However, metadata changes are still allowed.\n====\n[discrete]\n[[add-index-block-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+\nDefaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n+\nDefaults to `open`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[discrete]\n[[add-index-block-api-example]]\n==== {api-examples-title}\n\nThe following example shows how to add an index block:\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_block/write\n--------------------------------------------------\n// TEST[s/^/PUT my-index-000001\\n/]\n\nThe API returns following response:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"acknowledged\" : true,\n  \"shards_acknowledged\" : true,\n  \"indices\" : [ {\n    \"name\" : \"my-index-000001\",\n    \"blocked\" : true\n  } ]\n}\n--------------------------------------------------\n"
}