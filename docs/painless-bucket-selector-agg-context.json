{
    "meta": {
        "size": 2504,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/painless-bucket-selector-agg-context.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "painless-bucket-selector-agg-context",
        "version": "8.15"
    },
    "doc": "\n[[painless-bucket-selector-agg-context]]\n=== Bucket selector aggregation context\n\nUse a Painless script in an\n{ref}/search-aggregations-pipeline-bucket-selector-aggregation.html[`bucket_selector` aggregation]\nto determine if a bucket should be retained or filtered out.\n\n==== Variables\n\n`params` (`Map`, read-only)::\n        User-defined parameters passed in as part of the query. The parameters\n        include values defined as part of the `buckets_path`.\n\n==== Return\n\nboolean::\n        True if the bucket should be retained, false if the bucket should be filtered out.\n\n==== API\n\nThe standard <<painless-api-reference-shared, Painless API>> is available.\n\n==== Example\n\n\nTo run this example, first follow the steps in <<painless-context-examples, context examples>>.\n\nThe painless context in a `bucket_selector` aggregation provides a `params` map. This map contains both\nuser-specified custom values, as well as the values from other aggregations specified in the `buckets_path`\nproperty.\n\nUnlike some other aggregation contexts, the `bucket_selector` context must return a boolean `true` or `false`.\n\nThis example finds the max of each bucket, adds a user-specified base_cost, and retains all of the\nbuckets that are greater than `10`.\n\n[source,Painless]\n--------------------------------------------------\nparams.max + params.base_cost > 10\n--------------------------------------------------\n\nNote that the values are extracted from the `params` map. The script is in the form of an expression\nthat returns `true` or `false`. In context, the aggregation looks like this:\n\n[source,console]\n--------------------------------------------------\nGET /seats/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"theatres\": {\n      \"terms\": {\n        \"field\": \"theatre\",\n        \"size\": 10\n      },\n      \"aggs\": {\n        \"max_cost\": {\n          \"max\": {\n            \"field\": \"cost\"\n          }\n        },\n        \"filtering_agg\": {\n          \"bucket_selector\": {\n            \"buckets_path\": { <1>\n              \"max\": \"max_cost\"\n            },\n            \"script\": {\n              \"params\": {\n                \"base_cost\": 5 <2>\n              },\n              \"source\": \"params.max + params.base_cost > 10\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:seats]\n\n<1> The `buckets_path` points to the max aggregations (`max_cost`) and adds `max` variables\nto the `params` map\n<2> The user-specified `base_cost` is also added to the `params` map\n"
}