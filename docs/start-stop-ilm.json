{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.616583",
        "size": 3460,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/start-stop-ilm.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "start-stop-ilm",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[start-stop-ilm]]\n== Start and stop {ilm}\n\nBy default, the {ilm-init} service is in the `RUNNING` state and manages \nall indices that have lifecycle policies. \n\nYou can stop {ilm} to suspend management operations for all indices.\nFor example, you might stop {ilm} when performing scheduled maintenance or making\nchanges to the cluster that could impact the execution of {ilm-init} actions.\n\nIMPORTANT: When you stop {ilm-init}, <<automate-snapshots-slm,{slm-init}>> \noperations are also suspended. \nNo snapshots will be taken as scheduled until you restart {ilm-init}.\nIn-progress snapshots are not affected.\n\n[discrete]\n[[get-ilm-status]]\n=== Get {ilm-init} status\n\nTo see the current status of the {ilm-init} service, use the <<ilm-get-status,Get Status API>>:\n\n////\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"min_age\": \"10d\",\n        \"actions\": {\n          \"forcemerge\": {\n            \"max_num_segments\": 1\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"30d\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n\nPUT my-index-000001\n{\n  \"settings\": {\n    \"index.lifecycle.name\": \"my_policy\"\n  }\n}\n--------------------------------------------------\n////\n\n[source,console]\n--------------------------------------------------\nGET _ilm/status\n--------------------------------------------------\n\nUnder normal operation, the response shows {ilm-init} is `RUNNING`:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"operation_mode\": \"RUNNING\"\n}\n--------------------------------------------------\n\n\n\n[discrete]\n[[stop-ilm]]\n=== Stop {ilm-init}\n\nTo stop the {ilm-init} service and pause execution of all lifecycle policies, \nuse the <<ilm-stop,Stop API>>:\n\n[source,console]\n--------------------------------------------------\nPOST _ilm/stop\n--------------------------------------------------\n// TEST[continued]\n\n{ilm-init} service runs all policies to a point where it is safe to stop. \nWhile the {ilm-init} service is shutting down, \nthe status API shows {ilm-init} is in the `STOPPING` mode:\n\n////\n[source,console]\n--------------------------------------------------\nGET _ilm/status\n--------------------------------------------------\n// TEST[continued]\n////\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"operation_mode\": \"STOPPING\"\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"STOPPING\"/$body.operation_mode/]\n\nOnce all policies are at a safe stopping point, {ilm-init} moves into the `STOPPED` mode:\n\n////\n[source,console]\n--------------------------------------------------\nPUT trigger_ilm_cs_action\n\nGET _ilm/status\n--------------------------------------------------\n// TEST[continued]\n////\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"operation_mode\": \"STOPPED\"\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"STOPPED\"/$body.operation_mode/]\n\n[discrete]\n=== Start {ilm-init}\n\nTo restart {ilm-init} and resume executing policies, use the <<ilm-start, Start API>>.\nThis puts the  {ilm-init} service in the `RUNNING` state and \n{ilm-init} begins executing policies from where it left off.\n\n[source,console]\n--------------------------------------------------\nPOST _ilm/start\n--------------------------------------------------\n// TEST[continued]\n\n\n"
}