{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.639579",
        "size": 3204,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-global-checkpoints.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes",
            "child_attributes"
        ],
        "has_code": false,
        "title": "get-global-checkpoints",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[get-global-checkpoints]]\n=== Get global checkpoints API\n++++\n<titleabbrev>Get global checkpoints</titleabbrev>\n++++\n\nThe purpose of the get global checkpoints api is to return the current global\ncheckpoints for an index. This API allows users to know the what sequence numbers\nhave been safely persisted in Elasticsearch.\n\n[discrete]\n[[polling-on-global-checkpoint]]\n== Polling on global checkpoint advance\n\nThe API has an optional polling mode enabled by the `wait_for_advance` query\nparameter. In polling mode, the API will only return after the global checkpoints\nadvance past the provided `checkpoints`. By default, `checkpoints` is an empty\narray, which will lead to the API returning immediately.\n\nIf a timeout occurs before the global checkpoints advance past the provided\n`checkpoints`, Elasticsearch will return the current global checkpoints and a\nboolean indicating that the request timed out.\n\nCurrently the `wait_for_advance` parameter is only supported for one shard indices.\n\n[discrete]\n[[polling-on-index]]\n== Polling on index ready\n\nBy default in polling mode, an exception will be returned if the index does not\nexist or all the primary shards are not active. In polling mode, the\n`wait_for_index` parameter can be used to modify this behavior. If `wait_for_index`\nis set to true, the API will wait for the index to be created and all primary\nshards to be active.\n\nIf a timeout occurs before these conditions are met, the relevant exception will be\nreturned.\n\nCurrently the `wait_for_index` parameter is only supported when `wait_for_advance`\nis true.\n\n[[get-global-checkpoints-api-request]]\n==== {api-request-title}\n\n`GET /<index>/_fleet/global_checkpoints`\n\n[[get-global-checkpoints-api-path-params]]\n==== {api-path-parms-title}\n\n`<index>`::\n(Required, string)\nA single index or index alias that resolves to a single index.\n\n[role=\"child_attributes\"]\n[[get-global-checkpoints-api-query-parms]]\n==== {api-query-parms-title}\n\n`wait_for_advance`::\n(Optional, Boolean) A boolean value which controls whether to wait (until the\n`timeout`) for the global checkpoints to advance past the provided\n`checkpoints`. Defaults to `false`.\n\n`wait_for_index`::\n(Optional, Boolean) A boolean value which controls whether to wait (until the\n`timeout`) for the target index to exist and all primary shards be active. Can\nonly be `true` when `wait_for_advance` is `true`. Defaults to `false`.\n\n`checkpoints`::\n(Optional, list) A comma separated list of previous global checkpoints.\nWhen used in combination with `wait_for_advance`, the API will only return once\nthe global checkpoints advances past the `checkpoints`. Defaults to an empty list\nwhich will cause Elasticsearch to immediately return the current global\ncheckpoints.\n\n`timeout`::\n(Optional, <<time-units, time units>>)\nPeriod to wait for a global checkpoints to advance past `checkpoints`.\nDefaults to `30s`.\n\n[role=\"child_attributes\"]\n[[get-global-checkpoints-api-response-body]]\n==== {api-response-body-title}\n\n`global_checkpoints`::\n(array of integers) The global checkpoints for the index.\n\n`timed_out`::\n(Boolean) If `false` the global checkpoints did not advance past the\n`checkpoints` within the specified `timeout`.\n"
}