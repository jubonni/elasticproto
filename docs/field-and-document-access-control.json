{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.094067",
        "size": 4372,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/field-and-document-access-control.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "field-and-document-access-control",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[field-and-document-access-control]]\n=== Setting up field and document level security\n\nYou can control access to data within a data stream or index by adding field and document level\nsecurity permissions to a role.\n<<field-level-security,Field level security permissions>> restrict access to\nparticular fields within a document.\n<<document-level-security,Document level security permissions>> restrict access\nto particular documents.\n\nNOTE: Document and field level security is currently meant to operate with\nread-only privileged accounts. Users with document and field level\nsecurity enabled for a data stream or index should not perform write operations.\n\nA role can define both field and document level permissions on a per-index basis.\nA role that doesn\u2019t specify field level permissions grants access to ALL fields.\nSimilarly, a role that doesn't specify document level permissions grants access\nto ALL documents in the index.\n\n[IMPORTANT]\n=====================================================================\nWhen assigning users multiple roles, be careful that you don't inadvertently\ngrant wider access than intended. Each user has a single set of field level and\ndocument level permissions per data stream or index. See <<multiple-roles-dls-fls>>.\n=====================================================================\n\n[[multiple-roles-dls-fls]]\n==== Multiple roles with document and field level security\n\nA user can have many roles and each role can define different permissions on the\nsame data stream or index. It is important to understand the behavior of document and field\nlevel security in this scenario.\n\nDocument level security takes into account each role held by the user and\ncombines each document level security query for a given data stream or index with an \"OR\". This\nmeans that only one of the role queries must match for a document to be returned.\nFor example, if a role grants access to an index without document level security\nand another grants access with document level security, document level security\nis not applied; the user with both roles has access to all of the documents in\nthe index.\n\nField level security takes into account each role the user has and combines\nall of the fields listed into a single set for each data stream or index. For example, if a\nrole grants access to an index without field level security and another grants\naccess with field level security, field level security is not be applied for\nthat index; the user with both roles has access to all of the fields in the\nindex.\n\nFor example, let's say `role_a` grants access to only the `address` field of the\ndocuments in `index1`; it doesn't specify any document restrictions. Conversely,\n`role_b` limits access to a subset of the documents in `index1`; it doesn't\nspecify any field restrictions. If you assign a user both roles, `role_a` gives\nthe user access to all documents and `role_b` gives the user access to all\nfields.\n\n[IMPORTANT]\n===========\nIf you need to restrict access to both documents and fields, consider splitting\ndocuments by index instead.\n===========\n\ninclude::role-templates.asciidoc[]\ninclude::set-security-user.asciidoc[]\n\n\n[[ccx-apikeys-dls-fls]]\n==== Field and document level security with Cross-cluster API keys\n\n<<security-api-create-cross-cluster-api-key, Cross-Cluster API keys>> can be used to authenticate\nrequests to a remote cluster. The `search` parameter defines permissions for cross-cluster search.\nThe `replication` parameter defines permissions for cross-cluster replication.\n\n`replication` does not support any field or document level security. `search` supports field and document level security.\n\nFor reasons similar to those described in <<multiple-roles-dls-fls,Multiple roles with document and field level security>>,\nyou can't create a single cross-cluster API key with both the `search` and `replication` parameters if the\n`search` parameter has document or field level security defined.\n\nIf you need to use both of these parameters, and you need to define document or field level security for the `search` parameter,\ncreate two separate cross-cluster API keys, one using the `search` parameter,\nand one using the `replication` parameter. You will also need to set up two different\nremote connections to the same cluster, with each named connection using the appropriate cross-cluster API key.\n\n\n\n\n\n"
}