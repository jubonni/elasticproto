{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.341067",
        "size": 4339,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/http-exporter.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "http-exporter",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[http-exporter]]\n=== HTTP exporters\n\ninclude::production.asciidoc[tag=monitoring-rec]\n\nThe `http` exporter is the preferred exporter in the {es} {monitor-features}\nbecause it enables the use of a separate monitoring cluster. As a secondary\nbenefit, it avoids using a production cluster node as a coordinating node for\nindexing monitoring data because all requests are HTTP requests to the\nmonitoring cluster.\n\nThe `http` exporter uses the low-level {es} REST Client, which enables it to\nsend its data to any {es} cluster it can access through the network. Its requests\nmake use of the <<common-options-response-filtering,`filter_path`>> parameter to\nreduce bandwidth whenever possible, which helps to ensure that communications\nbetween the production and monitoring clusters are as lightweight as possible.\n\nThe `http` exporter supports a number of settings that control how it\ncommunicates over HTTP to remote clusters. In most cases, it is not\nnecessary to explicitly configure these settings. For detailed\ndescriptions, see <<monitoring-settings>>.\n\n[source,yaml]\n----------------------------------\nxpack.monitoring.exporters:\n  my_local: <1>\n    type: local\n  my_remote: <2>\n    type: http\n    host: [ \"10.1.2.3:9200\", ... ] <3>\n    auth: <4>\n      username: my_username\n      # \"xpack.monitoring.exporters.my_remote.auth.secure_password\" must be set in the keystore\n    connection:\n      timeout: 6s\n      read_timeout: 60s\n    ssl: ... <5>\n    proxy:\n      base_path: /some/base/path <6>\n    headers: <7>\n      My-Proxy-Header: abc123\n      My-Other-Thing: [ def456, ... ]\n    index.name.time_format: YYYY-MM <8>\n\n----------------------------------\n<1> A `local` exporter defined explicitly whose arbitrary name is `my_local`.\n<2> An `http` exporter defined whose arbitrary name is `my_remote`. This name\nuniquely defines the exporter but is otherwise unused.\n<3> `host` is a required setting for `http` exporters. It must specify the HTTP\nport rather than the transport port. The default port value is `9200`.\n<4> User authentication for those using {stack} {security-features} or some other\n    form of user authentication protecting the cluster.\n<5> See <<http-exporter-settings>> for all TLS/SSL settings. If not supplied,\nthe default node-level TLS/SSL settings are used.\n<6> Optional base path to prefix any outgoing request with in order to\n    work with proxies.\n<7> Arbitrary key/value pairs to define as headers to send with every request.\n    The array-based key/value format sends one header per value.\n<8> A mechanism for changing the date suffix used by default.\n\nNOTE: The `http` exporter accepts an array of `hosts` and it will round robin\nthrough the list. It is a good idea to take advantage of that feature when the\nmonitoring cluster contains more than one node.\n\nUnlike the `local` exporter, _every_ node that uses the `http` exporter attempts\nto check and create the resources that it needs. The `http` exporter avoids\nre-checking the resources unless something triggers it to perform the checks\nagain. These triggers include:\n\n* The production cluster's node restarts.\n* A connection failure to the monitoring cluster.\n* The license on the production cluster changes.\n* The `http` exporter is dynamically updated (and it is therefore replaced).\n\nThe easiest way to trigger a check is to disable, then re-enable the exporter.\n\nWARNING: This resource management behavior can create a hole for users that\ndelete monitoring resources. Since the `http` exporter does not re-check its\nresources unless one of the triggers occurs, this can result in malformed index\nmappings.\n\nUnlike the `local` exporter, the `http` exporter is inherently routing requests\noutside of the cluster. This situation means that the exporter must provide a\nusername and password when the monitoring cluster requires one (or other\nappropriate security configurations, such as TLS/SSL settings).\n\nIMPORTANT: When discussing security relative to the `http` exporter, it is\ncritical to remember that all users are managed on the monitoring cluster. This\nis particularly important to remember when you move from development\nenvironments to production environments, where you often have dedicated\nmonitoring clusters.\n\nFor more information about the configuration options for the `http` exporter,\nsee <<http-exporter-settings>>.\n"
}