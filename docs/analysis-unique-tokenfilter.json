{
    "meta": {
        "size": 3634,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-unique-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analysis-unique-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-unique-tokenfilter]]\n=== Unique token filter\n++++\n<titleabbrev>Unique</titleabbrev>\n++++\n\nRemoves duplicate tokens from a stream. For example, you can use the `unique`\nfilter to change `the lazy lazy dog` to `the lazy dog`.\n\nIf the `only_on_same_position` parameter is set to `true`, the `unique` filter\nremoves only duplicate tokens _in the same position_.\n\n[NOTE]\n====\nWhen `only_on_same_position` is `true`, the `unique` filter works the same as\n<<analysis-remove-duplicates-tokenfilter,`remove_duplicates`>> filter.\n====\n\n[[analysis-unique-tokenfilter-analyze-ex]]\n==== Example\n\nThe following <<indices-analyze,analyze API>> request uses the `unique` filter\nto remove duplicate tokens from `the quick fox jumps the lazy fox`:\n\n[source,console]\n--------------------------------------------------\nGET _analyze\n{\n  \"tokenizer\" : \"whitespace\",\n  \"filter\" : [\"unique\"],\n  \"text\" : \"the quick fox jumps the lazy fox\"\n}\n--------------------------------------------------\n\nThe filter removes duplicated tokens for `the` and `fox`, producing the\nfollowing output:\n\n[source,text]\n--------------------------------------------------\n[ the, quick, fox, jumps, lazy ]\n--------------------------------------------------\n\n/////////////////////\n[source,console-result]\n--------------------------------------------------\n{\n  \"tokens\" : [\n    {\n      \"token\" : \"the\",\n      \"start_offset\" : 0,\n      \"end_offset\" : 3,\n      \"type\" : \"word\",\n      \"position\" : 0\n    },\n    {\n      \"token\" : \"quick\",\n      \"start_offset\" : 4,\n      \"end_offset\" : 9,\n      \"type\" : \"word\",\n      \"position\" : 1\n    },\n    {\n      \"token\" : \"fox\",\n      \"start_offset\" : 10,\n      \"end_offset\" : 13,\n      \"type\" : \"word\",\n      \"position\" : 2\n    },\n    {\n      \"token\" : \"jumps\",\n      \"start_offset\" : 14,\n      \"end_offset\" : 19,\n      \"type\" : \"word\",\n      \"position\" : 3\n    },\n    {\n      \"token\" : \"lazy\",\n      \"start_offset\" : 24,\n      \"end_offset\" : 28,\n      \"type\" : \"word\",\n      \"position\" : 5\n    }\n  ]\n}\n--------------------------------------------------\n/////////////////////\n\n[[analysis-unique-tokenfilter-analyzer-ex]]\n==== Add to an analyzer\n\nThe following <<indices-create-index,create index API>> request uses the\n`unique` filter to configure a new <<analysis-custom-analyzer,custom analyzer>>.\n\n[source,console]\n--------------------------------------------------\nPUT custom_unique_example\n{\n  \"settings\" : {\n    \"analysis\" : {\n      \"analyzer\" : {\n        \"standard_truncate\" : {\n        \"tokenizer\" : \"standard\",\n        \"filter\" : [\"unique\"]\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[[analysis-unique-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n`only_on_same_position`::\n(Optional, Boolean)\nIf `true`, only remove duplicate tokens in the same position.\nDefaults to `false`.\n\n[[analysis-unique-tokenfilter-customize]]\n==== Customize\n\nTo customize the `unique` filter, duplicate it to create the basis\nfor a new custom token filter. You can modify the filter using its configurable\nparameters.\n\nFor example, the following request creates a custom `unique` filter with\n`only_on_same_position` set to `true`.\n\n[source,console]\n--------------------------------------------------\nPUT letter_unique_pos_example\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"letter_unique_pos\": {\n          \"tokenizer\": \"letter\",\n          \"filter\": [ \"unique_pos\" ]\n        }\n      },\n      \"filter\": {\n        \"unique_pos\": {\n          \"type\": \"unique\",\n          \"only_on_same_position\": true\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n"
}