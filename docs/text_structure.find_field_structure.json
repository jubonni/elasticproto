{
    "meta": {
        "timestamp": "2024-11-01T03:02:55.274579",
        "api_name": "text_structure.find_field_structure",
        "stability": "stable",
        "visibility": "public",
        "main_component": "text_structure",
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/find-field-structure.html",
        "elastic_url": "https://www.elastic.co/text_structure/find_field_structure.html",
        "treat_json_as_key_value": false,
        "title": "Finds the structure of a text field in an index.",
        "paths": [
            {
                "path": "/_text_structure/find_field_structure",
                "methods": [
                    "GET"
                ]
            }
        ],
        "parameter_types": {
            "index": "string",
            "field": "string",
            "documents_to_sample": "int",
            "timeout": "time",
            "format": "enum",
            "column_names": "list",
            "delimiter": "string",
            "quote": "string",
            "should_trim_fields": "boolean",
            "grok_pattern": "string",
            "ecs_compatibility": "string",
            "timestamp_field": "string",
            "timestamp_format": "string",
            "explain": "boolean"
        },
        "doc_version": "8.15"
    },
    "doc": {
        "documentation": {
            "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/find-field-structure.html",
            "description": "Finds the structure of a text field in an index."
        },
        "stability": "stable",
        "visibility": "public",
        "headers": {
            "accept": [
                "application/json"
            ]
        },
        "url": {
            "paths": [
                {
                    "path": "/_text_structure/find_field_structure",
                    "methods": [
                        "GET"
                    ]
                }
            ]
        },
        "params": {
            "index": {
                "type": "string",
                "description": "The index containing the analyzed field",
                "required": true
            },
            "field": {
                "type": "string",
                "description": "The field that should be analyzed",
                "required": true
            },
            "documents_to_sample": {
                "type": "int",
                "description": "How many documents should be included in the analysis",
                "default": 1000
            },
            "timeout": {
                "type": "time",
                "description": "Timeout after which the analysis will be aborted",
                "default": "25s"
            },
            "format": {
                "type": "enum",
                "options": [
                    "ndjson",
                    "xml",
                    "delimited",
                    "semi_structured_text"
                ],
                "description": "Optional parameter to specify the high level file format"
            },
            "column_names": {
                "type": "list",
                "description": "Optional parameter containing a comma separated list of the column names for a delimited file"
            },
            "delimiter": {
                "type": "string",
                "description": "Optional parameter to specify the delimiter character for a delimited file - must be a single character"
            },
            "quote": {
                "type": "string",
                "description": "Optional parameter to specify the quote character for a delimited file - must be a single character"
            },
            "should_trim_fields": {
                "type": "boolean",
                "description": "Optional parameter to specify whether the values between delimiters in a delimited file should have whitespace trimmed from them"
            },
            "grok_pattern": {
                "type": "string",
                "description": "Optional parameter to specify the Grok pattern that should be used to extract fields from messages in a semi-structured text file"
            },
            "ecs_compatibility": {
                "type": "string",
                "description": "Optional parameter to specify the compatibility mode with ECS Grok patterns - may be either 'v1' or 'disabled'"
            },
            "timestamp_field": {
                "type": "string",
                "description": "Optional parameter to specify the timestamp field in the file"
            },
            "timestamp_format": {
                "type": "string",
                "description": "Optional parameter to specify the timestamp format in the file - may be either a Joda or Java time format"
            },
            "explain": {
                "type": "boolean",
                "description": "Whether to include a commentary on how the structure was derived",
                "default": false
            }
        }
    }
}