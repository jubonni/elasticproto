{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.250284",
        "size": 11172,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/mapping-date-format.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "mapping-date-format",
        "version": "8.15"
    },
    "doc": "[[mapping-date-format]]\n=== `format`\n\nIn JSON documents, dates are represented as strings. Elasticsearch uses a set\nof preconfigured formats to recognize and parse these strings into a long\nvalue representing _milliseconds-since-the-epoch_ in UTC.\n\nBesides the <<built-in-date-formats,built-in formats>>, your own\n<<custom-date-formats,custom formats>> can be specified using the familiar\n`yyyy/MM/dd` syntax:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"date\": {\n        \"type\":   \"date\",\n        \"format\": \"yyyy-MM-dd\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nMany APIs which support date values also support <<date-math,date math>>\nexpressions, such as `now-1m/d` -- the current time, minus one month, rounded\ndown to the nearest day.\n\n[[custom-date-formats]]\n==== Custom date formats\n\nCompletely customizable date formats are supported. The syntax for these is explained in\nhttps://docs.oracle.com/en/java/javase/21/docs/api/java.base/java/time/format/DateTimeFormatter.html[DateTimeFormatter docs].\n\nNote that while the built-in formats for week dates use the ISO definition of weekyears,\ncustom formatters using the `Y`, `W`, or `w` field specifiers use the JDK locale definition\nof weekyears. This can result in different values between the built-in formats and custom formats\nfor week dates.\n\n[[built-in-date-formats]]\n==== Built-in formats\n\nMost of the below formats have a `strict` companion format, which means that\nyear, month and day parts of the month must use respectively 4, 2 and 2 digits\nexactly, potentially prepending zeros. For instance a date like `5/11/1` would\nbe considered invalid and would need to be rewritten to `2005/11/01` to be\naccepted by the date parser.\n\nTo use them, you need to prepend `strict_` to the name of the date format, for\ninstance `strict_date_optional_time` instead of `date_optional_time`.\n\nThese strict date formats are especially useful when\n<<date-detection,date fields are dynamically mapped>> in order to make sure to\nnot accidentally map irrelevant strings as dates.\n\nThe following tables lists all the defaults ISO formats supported:\n\n`epoch_millis`::\n\n    A formatter for the number of milliseconds since the epoch. Note, that\n    this timestamp is subject to the limits of a Java `Long.MIN_VALUE` and\n    `Long.MAX_VALUE`.\n\n`epoch_second`::\n\n    A formatter for the number of seconds since the epoch. Note, that this\n    timestamp is subject to the limits of a Java `Long.MIN_VALUE` and `Long.\n    MAX_VALUE` divided by 1000 (the number of milliseconds in a second).\n\n[[strict-date-time]]`date_optional_time` or `strict_date_optional_time`::\n\n    A generic ISO datetime parser, where the date must include the year at a minimum, and the time\n    (separated by `T`), is optional.\n    Examples: `yyyy-MM-dd'T'HH:mm:ss.SSSZ` or  `yyyy-MM-dd`.\n\n    NOTE: When using `date_optional_time`, the parsing is lenient and will attempt to parse\n    numbers as a year (e.g. `292278994` will be parsed as a year). This can lead to unexpected results\n    when paired with a numeric focused format like `epoch_second` and `epoch_millis`.\n    It is recommended you use `strict_date_optional_time` when pairing with a numeric focused format.\n\n[[strict-date-time-nanos]]`strict_date_optional_time_nanos`::\n\n    A generic ISO datetime parser, where the date must include the year at a minimum, and the time\n    (separated by `T`), is optional. The fraction of a second\n    part has a nanosecond resolution.\n    Examples: `yyyy-MM-dd'T'HH:mm:ss.SSSSSSZ` or  `yyyy-MM-dd`.\n\n`basic_date`::\n\n    A basic formatter for a full date as four digit year, two digit month of\n    year, and two digit day of month: `yyyyMMdd`.\n\n`basic_date_time`::\n\n    A basic formatter that combines a basic date and time, separated by a 'T':\n    `yyyyMMdd'T'HHmmss.SSSZ`.\n\n`basic_date_time_no_millis`::\n\n    A basic formatter that combines a basic date and time without millis,\n    separated by a 'T': `yyyyMMdd'T'HHmmssZ`.\n\n`basic_ordinal_date`::\n\n    A formatter for a full ordinal date, using a four digit year and three\n    digit dayOfYear: `yyyyDDD`.\n\n`basic_ordinal_date_time`::\n\n    A formatter for a full ordinal date and time, using a four digit year and\n    three digit dayOfYear: `yyyyDDD'T'HHmmss.SSSZ`.\n\n`basic_ordinal_date_time_no_millis`::\n\n    A formatter for a full ordinal date and time without millis, using a four\n    digit year and three digit dayOfYear: `yyyyDDD'T'HHmmssZ`.\n\n`basic_time`::\n\n    A basic formatter for a two digit hour of day, two digit minute of hour,\n    two digit second of minute, three digit millis, and time zone offset:\n    `HHmmss.SSSZ`.\n\n`basic_time_no_millis`::\n\n    A basic formatter for a two digit hour of day, two digit minute of hour,\n    two digit second of minute, and time zone offset: `HHmmssZ`.\n\n`basic_t_time`::\n\n    A basic formatter for a two digit hour of day, two digit minute of hour,\n    two digit second of minute, three digit millis, and time zone off set\n    prefixed by 'T': `'T'HHmmss.SSSZ`.\n\n`basic_t_time_no_millis`::\n\n    A basic formatter for a two digit hour of day, two digit minute of hour,\n    two digit second of minute, and time zone offset prefixed by 'T':\n    `'T'HHmmssZ`.\n\n`basic_week_date` or `strict_basic_week_date`::\n\n    A basic formatter for a full date as four digit weekyear, two digit week\n    of weekyear, and one digit day of week: `xxxx'W'wwe`.\n\n`basic_week_date_time` or `strict_basic_week_date_time`::\n\n    A basic formatter that combines a basic weekyear date and time, separated\n    by a 'T': `xxxx'W'wwe'T'HHmmss.SSSZ`.\n\n`basic_week_date_time_no_millis` or `strict_basic_week_date_time_no_millis`::\n\n    A basic formatter that combines a basic weekyear date and time without\n    millis, separated by a 'T': `xxxx'W'wwe'T'HHmmssZ`.\n\n`date` or `strict_date`::\n\n    A formatter for a full date as four digit year, two digit month of year,\n    and two digit day of month: `yyyy-MM-dd`.\n\n`date_hour` or `strict_date_hour`::\n\n    A formatter that combines a full date and two digit hour of day:\n    `yyyy-MM-dd'T'HH`.\n\n`date_hour_minute` or `strict_date_hour_minute`::\n\n    A formatter that combines a full date, two digit hour of day, and two\n    digit minute of hour: `yyyy-MM-dd'T'HH:mm`.\n\n`date_hour_minute_second` or `strict_date_hour_minute_second`::\n\n    A formatter that combines a full date, two digit hour of day, two digit\n    minute of hour, and two digit second of minute: `yyyy-MM-dd'T'HH:mm:ss`.\n\n`date_hour_minute_second_fraction` or `strict_date_hour_minute_second_fraction`::\n\n    A formatter that combines a full date, two digit hour of day, two digit\n    minute of hour, two digit second of minute, and three digit fraction of\n    second: `yyyy-MM-dd'T'HH:mm:ss.SSS`.\n\n`date_hour_minute_second_millis` or `strict_date_hour_minute_second_millis`::\n\n    A formatter that combines a full date, two digit hour of day, two digit\n    minute of hour, two digit second of minute, and three digit fraction of\n    second: `yyyy-MM-dd'T'HH:mm:ss.SSS`.\n\n`date_time` or `strict_date_time`::\n\n    A formatter that combines a full date and time, separated by a 'T':\n    `yyyy-MM-dd'T'HH:mm:ss.SSSZ`.\n\n`date_time_no_millis` or `strict_date_time_no_millis`::\n\n    A formatter that combines a full date and time without millis, separated\n    by a 'T': `yyyy-MM-dd'T'HH:mm:ssZ`.\n\n`hour` or `strict_hour`::\n\n    A formatter for a two digit hour of day: `HH`\n\n`hour_minute` or `strict_hour_minute`::\n\n    A formatter for a two digit hour of day and two digit minute of hour:\n    `HH:mm`.\n\n`hour_minute_second` or `strict_hour_minute_second`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, and two\n    digit second of minute: `HH:mm:ss`.\n\n`hour_minute_second_fraction` or `strict_hour_minute_second_fraction`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, and three digit fraction of second: `HH:mm:ss.SSS`.\n\n`hour_minute_second_millis` or `strict_hour_minute_second_millis`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, and three digit fraction of second: `HH:mm:ss.SSS`.\n\n`ordinal_date` or `strict_ordinal_date`::\n\n    A formatter for a full ordinal date, using a four digit year and three\n    digit dayOfYear: `yyyy-DDD`.\n\n`ordinal_date_time` or `strict_ordinal_date_time`::\n\n    A formatter for a full ordinal date and time, using a four digit year and\n    three digit dayOfYear: `yyyy-DDD'T'HH:mm:ss.SSSZ`.\n\n`ordinal_date_time_no_millis` or `strict_ordinal_date_time_no_millis`::\n\n    A formatter for a full ordinal date and time without millis, using a four\n    digit year and three digit dayOfYear: `yyyy-DDD'T'HH:mm:ssZ`.\n\n`time` or `strict_time`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, three digit fraction of second, and time zone\n    offset: `HH:mm:ss.SSSZ`.\n\n`time_no_millis` or `strict_time_no_millis`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, and time zone offset: `HH:mm:ssZ`.\n\n`t_time` or `strict_t_time`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, three digit fraction of second, and time zone\n    offset prefixed by 'T': `'T'HH:mm:ss.SSSZ`.\n\n`t_time_no_millis` or `strict_t_time_no_millis`::\n\n    A formatter for a two digit hour of day, two digit minute of hour, two\n    digit second of minute, and time zone offset prefixed by 'T': `'T'HH:mm:ssZ`.\n\n`week_date` or `strict_week_date`::\n\n    A formatter for a full date as four digit weekyear, two digit week of\n    weekyear, and one digit day of week: `YYYY-'W'ww-e`.\n    This uses the ISO week-date definition.\n\n`week_date_time` or `strict_week_date_time`::\n\n    A formatter that combines a full weekyear date and time, separated by a\n    'T': `YYYY-'W'ww-e'T'HH:mm:ss.SSSZ`.\n    This uses the ISO week-date definition.\n\n`week_date_time_no_millis` or `strict_week_date_time_no_millis`::\n\n    A formatter that combines a full weekyear date and time without millis,\n    separated by a 'T': `YYYY-'W'ww-e'T'HH:mm:ssZ`.\n    This uses the ISO week-date definition.\n\n`weekyear` or `strict_weekyear`::\n\n    A formatter for a four digit weekyear: `YYYY`.\n    This uses the ISO week-date definition.\n\n`weekyear_week` or `strict_weekyear_week`::\n\n    A formatter for a four digit weekyear and two digit week of weekyear:\n    `YYYY-'W'ww`.\n    This uses the ISO week-date definition.\n\n`weekyear_week_day` or `strict_weekyear_week_day`::\n\n    A formatter for a four digit weekyear, two digit week of weekyear, and one\n    digit day of week: `YYYY-'W'ww-e`.\n    This uses the ISO week-date definition.\n\n`year` or `strict_year`::\n\n    A formatter for a four digit year: `yyyy`.\n\n`year_month` or `strict_year_month`::\n\n    A formatter for a four digit year and two digit month of year: `yyyy-MM`.\n\n`year_month_day` or `strict_year_month_day`::\n\n    A formatter for a four digit year, two digit month of year, and two digit\n    day of month: `yyyy-MM-dd`.\n"
}