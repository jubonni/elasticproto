{
    "meta": {
        "size": 14428,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/inner-hits.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "inner-hits",
        "version": "8.15"
    },
    "doc": "[[inner-hits]]\n=== Retrieve inner hits\n\nThe <<parent-join, parent-join>> and <<nested, nested>> features allow the return of documents that\nhave matches in a different scope. In the parent/child case, parent documents are returned based on matches in child\ndocuments or child documents are returned based on matches in parent documents. In the nested case, documents are returned\nbased on matches in nested inner objects.\n\nIn both cases, the actual matches in the different scopes that caused a document to be returned are hidden. In many cases,\nit's very useful to know which inner nested objects (in the case of nested) or children/parent documents (in the case\nof parent/child) caused certain information to be returned. The inner hits feature can be used for this. This feature\nreturns per search hit in the search response additional nested hits that caused a search hit to match in a different scope.\n\nInner hits can be used by defining an `inner_hits` definition on a `nested`, `has_child` or `has_parent` query and filter.\nThe structure looks like this:\n\n[source,js]\n--------------------------------------------------\n\"<query>\" : {\n    \"inner_hits\" : {\n        <inner_hits_options>\n    }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nIf `inner_hits` is defined on a query that supports it then each search hit will contain an `inner_hits` json object with the following structure:\n\n[source,js]\n--------------------------------------------------\n\"hits\": [\n     {\n        \"_index\": ...,\n        \"_type\": ...,\n        \"_id\": ...,\n        \"inner_hits\": {\n           \"<inner_hits_name>\": {\n              \"hits\": {\n                 \"total\": ...,\n                 \"hits\": [\n                    {\n                       \"_id\": ...,\n                       ...\n                    },\n                    ...\n                 ]\n              }\n           }\n        },\n        ...\n     },\n     ...\n]\n--------------------------------------------------\n// NOTCONSOLE\n\n[discrete]\n[[inner-hits-options]]\n==== Options\n\nInner hits support the following options:\n\n[horizontal]\n`from`:: The offset from where the first hit to fetch for each `inner_hits` in the returned regular search hits.\n`size`:: The maximum number of hits to return per `inner_hits`. By default the top three matching hits are returned.\n`sort`:: How the inner hits should be sorted per `inner_hits`. By default the hits are sorted by the score.\n`name`:: The name to be used for the particular inner hit definition in the response. Useful when multiple inner hits\n         have been defined in a single search request. The default depends in which query the inner hit is defined.\n         For `has_child` query and filter this is the child type, `has_parent` query and filter this is the parent type\n         and the nested query and filter this is the nested path.\n\nInner hits also supports the following per document features:\n\n* <<highlighting,Highlighting>>\n* <<request-body-search-explain,Explain>>\n* <<search-fields-param,Search fields>>\n* <<source-filtering,Source filtering>>\n* <<script-fields,Script fields>>\n* <<docvalue-fields,Doc value fields>>\n* <<request-body-search-version,Include versions>>\n* <<request-body-search-seq-no-primary-term,Include Sequence Numbers and Primary Terms>>\n\n[discrete]\n[[nested-inner-hits]]\n==== Nested inner hits\n\nThe nested `inner_hits` can be used to include nested inner objects as inner hits to a search hit.\n\n[source,console]\n--------------------------------------------------\nPUT test\n{\n  \"mappings\": {\n    \"properties\": {\n      \"comments\": {\n        \"type\": \"nested\"\n      }\n    }\n  }\n}\n\nPUT test/_doc/1?refresh\n{\n  \"title\": \"Test title\",\n  \"comments\": [\n    {\n      \"author\": \"kimchy\",\n      \"number\": 1\n    },\n    {\n      \"author\": \"nik9000\",\n      \"number\": 2\n    }\n  ]\n}\n\nPOST test/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"comments\",\n      \"query\": {\n        \"match\": {\"comments.number\" : 2}\n      },\n      \"inner_hits\": {} <1>\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The inner hit definition in the nested query. No other options need to be defined.\n\nAn example of a response snippet that could be generated from the above search request:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...,\n  \"hits\": {\n    \"total\" : {\n        \"value\": 1,\n        \"relation\": \"eq\"\n    },\n    \"max_score\": 1.0,\n    \"hits\": [\n      {\n        \"_index\": \"test\",\n        \"_id\": \"1\",\n        \"_score\": 1.0,\n        \"_source\": ...,\n        \"inner_hits\": {\n          \"comments\": { <1>\n            \"hits\": {\n              \"total\" : {\n                  \"value\": 1,\n                  \"relation\": \"eq\"\n              },\n              \"max_score\": 1.0,\n              \"hits\": [\n                {\n                  \"_index\": \"test\",\n                  \"_id\": \"1\",\n                  \"_nested\": {\n                    \"field\": \"comments\",\n                    \"offset\": 1\n                  },\n                  \"_score\": 1.0,\n                  \"_source\": {\n                    \"author\": \"nik9000\",\n                    \"number\": 2\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"_source\": \\.\\.\\./\"_source\": $body.hits.hits.0._source/]\n// TESTRESPONSE[s/\\.\\.\\./\"timed_out\": false, \"took\": $body.took, \"_shards\": $body._shards/]\n\n<1> The name used in the inner hit definition in the search request. A custom key can be used via the `name` option.\n\nThe `_nested` metadata is crucial in the above example, because it defines from what inner nested object this inner hit\ncame from. The `field` defines the object array field the nested hit is from and the `offset` relative to its location\nin the `_source`. Due to sorting and scoring the actual location of the hit objects in the `inner_hits` is usually\ndifferent than the location a nested inner object was defined.\n\nBy default the `_source` is returned also for the hit objects in `inner_hits`, but this can be changed. Either via\n`_source` filtering feature part of the source can be returned or be disabled. If stored fields are defined on the\nnested level these can also be returned via the `fields` feature.\n\nAn important default is that the `_source` returned in hits inside `inner_hits` is relative to the `_nested` metadata.\nSo in the above example only the comment part is returned per nested hit and not the entire source of the top level\ndocument that contained the comment.\n\n[discrete]\n[[nested-inner-hits-source]]\n===== Nested inner hits and +_source+\n\nNested document don't have a `_source` field, because the entire source of document is stored with the root document under\nits `_source` field. To include the source of just the nested document, the source of the root document is parsed and just\nthe relevant bit for the nested document is included as source in the inner hit. Doing this for each matching nested document\nhas an impact on the time it takes to execute the entire search request, especially when `size` and the inner hits' `size`\nare set higher than the default. To avoid the relatively expensive source extraction for nested inner hits, one can disable\nincluding the source and solely rely on doc values fields. Like this:\n\n[source,console]\n--------------------------------------------------\nPUT test\n{\n  \"mappings\": {\n    \"properties\": {\n      \"comments\": {\n        \"type\": \"nested\"\n      }\n    }\n  }\n}\n\nPUT test/_doc/1?refresh\n{\n  \"title\": \"Test title\",\n  \"comments\": [\n    {\n      \"author\": \"kimchy\",\n      \"text\": \"comment text\"\n    },\n    {\n      \"author\": \"nik9000\",\n      \"text\": \"words words words\"\n    }\n  ]\n}\n\nPOST test/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"comments\",\n      \"query\": {\n        \"match\": {\"comments.text\" : \"words\"}\n      },\n      \"inner_hits\": {\n        \"_source\" : false,\n        \"docvalue_fields\" : [\n          \"comments.text.keyword\"\n        ]\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n////\n\nResponse not included in text but tested for completeness sake.\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...,\n  \"hits\": {\n    \"total\" : {\n        \"value\": 1,\n        \"relation\": \"eq\"\n    },\n    \"max_score\": 1.0444684,\n    \"hits\": [\n      {\n        \"_index\": \"test\",\n        \"_id\": \"1\",\n        \"_score\": 1.0444684,\n        \"_source\": ...,\n        \"inner_hits\": {\n          \"comments\": { <1>\n            \"hits\": {\n              \"total\" : {\n                \"value\": 1,\n                \"relation\": \"eq\"\n              },\n              \"max_score\": 1.0444684,\n              \"hits\": [\n                {\n                  \"_index\": \"test\",\n                  \"_id\": \"1\",\n                  \"_nested\": {\n                    \"field\": \"comments\",\n                    \"offset\": 1\n                  },\n                  \"_score\": 1.0444684,\n                  \"fields\": {\n                    \"comments.text.keyword\": [\n                      \"words words words\"\n                    ]\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"_source\": \\.\\.\\./\"_source\": $body.hits.hits.0._source/]\n// TESTRESPONSE[s/\\.\\.\\./\"timed_out\": false, \"took\": $body.took, \"_shards\": $body._shards/]\n\n////\n\n[discrete]\n[[hierarchical-nested-inner-hits]]\n==== Hierarchical levels of nested object fields and inner hits.\n\nIf a mapping has multiple levels of hierarchical nested object fields each level can be accessed via dot notated path.\nFor example if there is a `comments` nested field that contains a `votes` nested field and votes should directly be returned\nwith the root hits then the following path can be defined:\n\n[source,console]\n--------------------------------------------------\nPUT test\n{\n  \"mappings\": {\n    \"properties\": {\n      \"comments\": {\n        \"type\": \"nested\",\n        \"properties\": {\n          \"votes\": {\n            \"type\": \"nested\"\n          }\n        }\n      }\n    }\n  }\n}\n\nPUT test/_doc/1?refresh\n{\n  \"title\": \"Test title\",\n  \"comments\": [\n    {\n      \"author\": \"kimchy\",\n      \"text\": \"comment text\",\n      \"votes\": []\n    },\n    {\n      \"author\": \"nik9000\",\n      \"text\": \"words words words\",\n      \"votes\": [\n        {\"value\": 1 , \"voter\": \"kimchy\"},\n        {\"value\": -1, \"voter\": \"other\"}\n      ]\n    }\n  ]\n}\n\nPOST test/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"comments.votes\",\n        \"query\": {\n          \"match\": {\n            \"comments.votes.voter\": \"kimchy\"\n          }\n        },\n        \"inner_hits\" : {}\n    }\n  }\n}\n--------------------------------------------------\n\nWhich would look like:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...,\n  \"hits\": {\n    \"total\" : {\n        \"value\": 1,\n        \"relation\": \"eq\"\n    },\n    \"max_score\": 0.6931471,\n    \"hits\": [\n      {\n        \"_index\": \"test\",\n        \"_id\": \"1\",\n        \"_score\": 0.6931471,\n        \"_source\": ...,\n        \"inner_hits\": {\n          \"comments.votes\": { <1>\n            \"hits\": {\n              \"total\" : {\n                  \"value\": 1,\n                  \"relation\": \"eq\"\n              },\n              \"max_score\": 0.6931471,\n              \"hits\": [\n                {\n                  \"_index\": \"test\",\n                  \"_id\": \"1\",\n                  \"_nested\": {\n                    \"field\": \"comments\",\n                    \"offset\": 1,\n                    \"_nested\": {\n                      \"field\": \"votes\",\n                      \"offset\": 0\n                    }\n                  },\n                  \"_score\": 0.6931471,\n                  \"_source\": {\n                    \"value\": 1,\n                    \"voter\": \"kimchy\"\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"_source\": \\.\\.\\./\"_source\": $body.hits.hits.0._source/]\n// TESTRESPONSE[s/\\.\\.\\./\"timed_out\": false, \"took\": $body.took, \"_shards\": $body._shards/]\n\nThis indirect referencing is only supported for nested inner hits.\n\n[discrete]\n[[parent-child-inner-hits]]\n==== Parent/child inner hits\n\nThe parent/child `inner_hits` can be used to include parent or child:\n\n[source,console]\n--------------------------------------------------\nPUT test\n{\n  \"mappings\": {\n    \"properties\": {\n      \"my_join_field\": {\n        \"type\": \"join\",\n        \"relations\": {\n          \"my_parent\": \"my_child\"\n        }\n      }\n    }\n  }\n}\n\nPUT test/_doc/1?refresh\n{\n  \"number\": 1,\n  \"my_join_field\": \"my_parent\"\n}\n\nPUT test/_doc/2?routing=1&refresh\n{\n  \"number\": 1,\n  \"my_join_field\": {\n    \"name\": \"my_child\",\n    \"parent\": \"1\"\n  }\n}\n\nPOST test/_search\n{\n  \"query\": {\n    \"has_child\": {\n      \"type\": \"my_child\",\n      \"query\": {\n        \"match\": {\n          \"number\": 1\n        }\n      },\n      \"inner_hits\": {}    <1>\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The inner hit definition like in the nested example.\n\nAn example of a response snippet that could be generated from the above search request:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...,\n  \"hits\": {\n    \"total\": {\n      \"value\": 1,\n      \"relation\": \"eq\"\n    },\n    \"max_score\": 1.0,\n    \"hits\": [\n      {\n        \"_index\": \"test\",\n        \"_id\": \"1\",\n        \"_score\": 1.0,\n        \"_source\": {\n          \"number\": 1,\n          \"my_join_field\": \"my_parent\"\n        },\n        \"inner_hits\": {\n          \"my_child\": {\n            \"hits\": {\n              \"total\": {\n                \"value\": 1,\n                \"relation\": \"eq\"\n              },\n              \"max_score\": 1.0,\n              \"hits\": [\n                {\n                  \"_index\": \"test\",\n                  \"_id\": \"2\",\n                  \"_score\": 1.0,\n                  \"_routing\": \"1\",\n                  \"_source\": {\n                    \"number\": 1,\n                    \"my_join_field\": {\n                      \"name\": \"my_child\",\n                      \"parent\": \"1\"\n                    }\n                  }\n                }\n              ]\n            }\n          }\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"_source\": \\.\\.\\./\"_source\": $body.hits.hits.0._source/]\n// TESTRESPONSE[s/\\.\\.\\./\"timed_out\": false, \"took\": $body.took, \"_shards\": $body._shards/]\n"
}