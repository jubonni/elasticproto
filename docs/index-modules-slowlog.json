{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.479082",
        "size": 6595,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-modules-slowlog.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "index-modules-slowlog",
        "version": "8.15"
    },
    "doc": "[[index-modules-slowlog]]\n== Slow Log\n\n[discrete]\n[[search-slow-log]]\n=== Search Slow Log\n\nShard level slow search log allows to log slow search (query and fetch\nphases) into a dedicated log file.\n\nThresholds can be set for both the query phase of the execution, and\nfetch phase, here is a sample:\n\n[source,yaml]\n--------------------------------------------------\nindex.search.slowlog.threshold.query.warn: 10s\nindex.search.slowlog.threshold.query.info: 5s\nindex.search.slowlog.threshold.query.debug: 2s\nindex.search.slowlog.threshold.query.trace: 500ms\n\nindex.search.slowlog.threshold.fetch.warn: 1s\nindex.search.slowlog.threshold.fetch.info: 800ms\nindex.search.slowlog.threshold.fetch.debug: 500ms\nindex.search.slowlog.threshold.fetch.trace: 200ms\n--------------------------------------------------\n\nAll of the above settings are _dynamic_ and can be set for each index using the\n<<indices-update-settings, update indices settings>> API. For example:\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_settings\n{\n  \"index.search.slowlog.threshold.query.warn\": \"10s\",\n  \"index.search.slowlog.threshold.query.info\": \"5s\",\n  \"index.search.slowlog.threshold.query.debug\": \"2s\",\n  \"index.search.slowlog.threshold.query.trace\": \"500ms\",\n  \"index.search.slowlog.threshold.fetch.warn\": \"1s\",\n  \"index.search.slowlog.threshold.fetch.info\": \"800ms\",\n  \"index.search.slowlog.threshold.fetch.debug\": \"500ms\",\n  \"index.search.slowlog.threshold.fetch.trace\": \"200ms\"\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\nBy default thresholds are disabled (set to `-1`).\n\nThe logging is done on the shard level scope, meaning the execution of a\nsearch request within a specific shard. It does not encompass the whole\nsearch request, which can be broadcast to several shards in order to\nexecute. Some of the benefits of shard level logging is the association\nof the actual execution on the specific machine, compared with request\nlevel.\n\n\nThe search slow log file is configured in the `log4j2.properties` file.\n\n[discrete]\n==== Identifying search slow log origin\n\nIt is often useful to identify what triggered a slow running query.\nTo include information about the user that triggered a slow search,\nuse the `index.search.slowlog.include.user` setting.\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_settings\n{\n  \"index.search.slowlog.include.user\": true\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\nThis will result in user information being included in the slow log.\n\n[source,js]\n---------------------------\n{\n  \"@timestamp\": \"2024-02-21T12:42:37.255Z\",\n  \"log.level\": \"WARN\",\n  \"auth.type\": \"REALM\",\n  \"elasticsearch.slowlog.id\": \"tomcat-123\",\n  \"elasticsearch.slowlog.message\": \"[index6][0]\",\n  \"elasticsearch.slowlog.search_type\": \"QUERY_THEN_FETCH\",\n  \"elasticsearch.slowlog.source\": \"{\\\"query\\\":{\\\"match_all\\\":{\\\"boost\\\":1.0}}}\",\n  \"elasticsearch.slowlog.stats\": \"[]\",\n  \"elasticsearch.slowlog.took\": \"747.3micros\",\n  \"elasticsearch.slowlog.took_millis\": 0,\n  \"elasticsearch.slowlog.total_hits\": \"1 hits\",\n  \"elasticsearch.slowlog.total_shards\": 1,\n  \"user.name\": \"elastic\",\n  \"user.realm\": \"reserved\",\n  \"ecs.version\": \"1.2.0\",\n  \"service.name\": \"ES_ECS\",\n  \"event.dataset\": \"elasticsearch.index_search_slowlog\",\n  \"process.thread.name\": \"elasticsearch[runTask-0][search][T#5]\",\n  \"log.logger\": \"index.search.slowlog.query\",\n  \"elasticsearch.cluster.uuid\": \"Ui23kfF1SHKJwu_hI1iPPQ\",\n  \"elasticsearch.node.id\": \"JK-jn-XpQ3OsDUsq5ZtfGg\",\n  \"elasticsearch.node.name\": \"node-0\",\n  \"elasticsearch.cluster.name\": \"distribution_run\"\n}\n\n---------------------------\n// NOTCONSOLE\n\nIf a call was initiated with an `X-Opaque-ID` header, then the ID is included\nin Search Slow logs in the **elasticsearch.slowlog.id** field. See\n<<x-opaque-id, X-Opaque-Id HTTP header>> for details and best practices.\n\n[discrete]\n[[index-slow-log]]\n=== Index Slow log\n\nThe indexing slow log, similar in functionality to the search slow\nlog. The log file name ends with `_index_indexing_slowlog.json`. Log and\nthe thresholds are configured in the same way as the search slowlog.\nIndex slowlog sample:\n\n[source,yaml]\n--------------------------------------------------\nindex.indexing.slowlog.threshold.index.warn: 10s\nindex.indexing.slowlog.threshold.index.info: 5s\nindex.indexing.slowlog.threshold.index.debug: 2s\nindex.indexing.slowlog.threshold.index.trace: 500ms\nindex.indexing.slowlog.source: 1000\n--------------------------------------------------\n\nAll of the above settings are _dynamic_ and can be set for each index using the\n<<indices-update-settings, update indices settings>> API. For example:\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_settings\n{\n  \"index.indexing.slowlog.threshold.index.warn\": \"10s\",\n  \"index.indexing.slowlog.threshold.index.info\": \"5s\",\n  \"index.indexing.slowlog.threshold.index.debug\": \"2s\",\n  \"index.indexing.slowlog.threshold.index.trace\": \"500ms\",\n  \"index.indexing.slowlog.source\": \"1000\"\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\nTo include information about the user that triggered a slow indexing event,\nuse the `index.indexing.slowlog.include.user` setting.\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_settings\n{\n  \"index.indexing.slowlog.include.user\": true\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\nBy default Elasticsearch will log the first 1000 characters of the _source in\nthe slowlog. You can change that with `index.indexing.slowlog.source`. Setting\nit to `false` or `0` will skip logging the source entirely, while setting it to\n`true` will log the entire source regardless of size. The original `_source` is\nreformatted by default to make sure that it fits on a single log line. If preserving\nthe original document format is important, you can turn off reformatting by setting\n`index.indexing.slowlog.reformat` to `false`, which will cause the source to be\nlogged \"as is\" and can potentially span multiple log lines.\n\nThe index slow log file is configured in the `log4j2.properties` file.\n\n[discrete]\n=== Slow log levels\n\nYou can mimic the search or indexing slow log level by setting appropriate\nthreshold making \"more verbose\" loggers to be switched off.\nIf for instance we want to simulate `index.indexing.slowlog.level: INFO`\nthen all we need to do is to set\n`index.indexing.slowlog.threshold.index.debug` and `index.indexing.slowlog.threshold.index.trace` to `-1`.\n"
}