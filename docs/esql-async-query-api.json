{
    "meta": {
        "size": 4690,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-async-query-api.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "esql-async-query-api",
        "version": "8.15"
    },
    "doc": "[[esql-async-query-api]]\n=== {esql} async query API\n++++\n<titleabbrev>{esql} async query API</titleabbrev>\n++++\n\nRuns an async <<esql,{esql} query>>.\n\nThe async query API lets you asynchronously execute a query request,\nmonitor its progress, and retrieve results when they become available.\n\nThe API accepts the same parameters and request body as the synchronous\n<<esql-query-api,query API>>, along with additional async related\nproperties as outlined below.\n\n[source,console]\n----\nPOST /_query/async\n{\n  \"query\": \"\"\"\n    FROM library\n    | EVAL year = DATE_TRUNC(1 YEARS, release_date)\n    | STATS MAX(page_count) BY year\n    | SORT year\n    | LIMIT 5\n  \"\"\",\n  \"wait_for_completion_timeout\": \"2s\"\n}\n----\n// TEST[setup:library]\n// TEST[skip:awaitsfix https://github.com/elastic/elasticsearch/issues/104013]\n\nIf the results are not available within the given timeout period, 2 seconds\nin this case, no results are returned but rather a response that\nincludes:\n\n * A query ID\n * An `is_running` value of _true_, indicating the query is ongoing\n\nThe query continues to run in the background without blocking other\nrequests.\n\n[source,console-result]\n----\n{\n  \"id\": \"FmNJRUZ1YWZCU3dHY1BIOUhaenVSRkEaaXFlZ3h4c1RTWFNocDdnY2FSaERnUTozNDE=\",\n  \"is_running\": true\n}\n----\n// TEST[skip: no access to query ID - may return response values]\n\nOtherwise, if the response's `is_running` value is `false`, the async\nquery has finished and the results are returned.\n\n[source,console-result]\n----\n{\n  \"is_running\": false,\n  \"columns\": ...\n}\n----\n// TEST[skip: no access to query ID - may return response values]\n\n[[esql-async-query-api-request]]\n==== {api-request-title}\n\n`POST /_query/async`\n\n[[esql-async-query-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `read`\n<<privileges-list-indices,index privilege>> for the data stream, index,\nor alias you query.\n\n[[esql-async-query-api-path-params]]\n==== {api-path-parms-title}\n\nThe API accepts the same parameters as the synchronous\n<<esql-query-api-query-params,query API>>.\n\n[[esql-async-query-api-request-body]]\n==== {api-request-body-title}\n\nThe API accepts the same request body as the synchronous\n<<esql-query-api-request-body,query API>>, along with the following\nparameters:\n\n[[esql-async-query-api-wait-for-completion-timeout]]\n`wait_for_completion_timeout`::\n+\n--\n(Optional, <<time-units,time value>>)\nTimeout duration to wait for the request to finish. Defaults to a 1 second,\nmeaning the request waits for 1 second for the query results.\n\nIf the query completes during this period then results will be\nreturned. Otherwise, a query `id` is returned that can later be used to\nretrieve the results.\n\nIf the request does not complete during this period, a query\n<<esql-async-query-api-response-body-query-id,id>> is returned.\n--\n\n[[esql-async-query-api-keep-on-completion]]\n`keep_on_completion`::\n+\n--\n(Optional, Boolean)\nIf `true`, the query and its results are stored in the cluster.\n\nIf `false`, the query and its results are stored in the cluster only if the\nrequest does not complete during the period set by the\n<<esql-async-query-api-wait-for-completion-timeout,`wait_for_completion_timeout`>>\nparameter. Defaults to `false`.\n--\n\n`keep_alive`::\n+\n--\n(Optional, <<time-units,time value>>)\nPeriod for which the query and its results are stored in the cluster. Defaults\nto `5d` (five days).\n\nWhen this period expires, the query and its results are deleted, even if the\nquery is still ongoing.\n\nIf the <<esql-async-query-api-keep-on-completion,`keep_on_completion`>> parameter\nis `false`, {es} only stores async queries that do not complete within the period\nset by the <<esql-async-query-api-wait-for-completion-timeout,`wait_for_completion_timeout`>>\nparameter, regardless of this value.\n--\n\n[[esql-async-query-api-response-body]]\n==== {api-response-body-title}\n\nThe API returns the same response body as the synchronous\n<<esql-query-api-response-body,query API>>, along with the following\nproperties:\n\n[[esql-async-query-api-response-body-query-id]]\n`id`::\n+\n--\n(string)\nIdentifier for the query.\n\nThis query ID is only provided if one of the following conditions is met:\n\n* A query request does not return complete results during the\n<<esql-async-query-api-wait-for-completion-timeout,`wait_for_completion_timeout`>>\nparameter's timeout period.\n\n* The query request's <<esql-async-query-api-keep-on-completion,`keep_on_completion`>>\nparameter is `true`.\n\nYou can use this ID with the <<esql-async-query-get-api,{esql} async query get\nAPI>> to get the current status and available results for the query.\n--\n\n`is_running`::\n+\n--\n(Boolean)\nIf `true`, the query request is still executing.\n--\n"
}