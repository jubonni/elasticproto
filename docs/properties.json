{
    "meta": {
        "size": 2527,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/properties.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "properties",
        "version": "8.15"
    },
    "doc": "[[properties]]\n=== `properties`\n\nType mappings, <<object,`object` fields>> and <<nested,`nested` fields>>\ncontain sub-fields, called `properties`. These properties may be of any\n<<mapping-types,data type>>, including `object` and `nested`. Properties can\nbe added:\n\n* explicitly by defining them when <<indices-create-index,creating an index>>.\n* explicitly by defining them when adding or updating a mapping type with the <<indices-put-mapping,update mapping>> API.\n* <<dynamic-mapping,dynamically>> just by indexing documents containing new fields.\n\nBelow is an example of adding `properties` to a mapping type, an `object`\nfield, and a `nested` field:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": { <1>\n      \"manager\": {\n        \"properties\": { <2>\n          \"age\":  { \"type\": \"integer\" },\n          \"name\": { \"type\": \"text\"  }\n        }\n      },\n      \"employees\": {\n        \"type\": \"nested\",\n        \"properties\": { <3>\n          \"age\":  { \"type\": \"integer\" },\n          \"name\": { \"type\": \"text\"  }\n        }\n      }\n    }\n  }\n}\n\nPUT my-index-000001/_doc/1 <4>\n{\n  \"region\": \"US\",\n  \"manager\": {\n    \"name\": \"Alice White\",\n    \"age\": 30\n  },\n  \"employees\": [\n    {\n      \"name\": \"John Smith\",\n      \"age\": 34\n    },\n    {\n      \"name\": \"Peter Brown\",\n      \"age\": 26\n    }\n  ]\n}\n--------------------------------------------------\n\n<1> Properties in the top-level mappings definition.\n<2> Properties under the `manager` object field.\n<3> Properties under the `employees` nested field.\n<4> An example document which corresponds to the above mapping.\n\nTIP: The `properties` setting is allowed to have different settings for fields\nof the same name in the same index. New properties can be added to existing\nfields using the <<indices-put-mapping,update mapping API>>.\n\n==== Dot notation\n\nInner fields can be referred to in queries, aggregations, etc., using _dot\nnotation_:\n\n[source,console]\n--------------------------------------------------\nGET my-index-000001/_search\n{\n  \"query\": {\n    \"match\": {\n      \"manager.name\": \"Alice White\" \n    }\n  },\n  \"aggs\": {\n    \"Employees\": {\n      \"nested\": {\n        \"path\": \"employees\"\n      },\n      \"aggs\": {\n        \"Employee Ages\": {\n          \"histogram\": {\n            \"field\": \"employees.age\", \n            \"interval\": 5\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\nIMPORTANT: The full path to the inner field must be specified.\n"
}