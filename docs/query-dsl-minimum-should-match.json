{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.673067",
        "size": 2620,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-minimum-should-match.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "query-dsl-minimum-should-match",
        "version": "8.15"
    },
    "doc": "[[query-dsl-minimum-should-match]]\n== `minimum_should_match` parameter\n\nThe `minimum_should_match` parameter's possible values:\n\n[cols=\"<,<,<\",options=\"header\",]\n|=======================================================================\n|Type |Example |Description\n|Integer |`3` |Indicates a fixed value regardless of the number of\noptional clauses.\n\n|Negative integer |`-2` |Indicates that the total number of optional\nclauses, minus this number should be mandatory.\n\n|Percentage |`75%` |Indicates that this percent of the total number of\noptional clauses are necessary. The number computed from the percentage\nis rounded down and used as the minimum.\n\n|Negative percentage |`-25%` |Indicates that this percent of the total\nnumber of optional clauses can be missing. The number computed from the\npercentage is rounded down, before being subtracted from the total to\ndetermine the minimum.\n\n|Combination |`3<90%` |A positive integer, followed by the less-than\nsymbol, followed by any of the previously mentioned specifiers is a\nconditional specification. It indicates that if the number of optional\nclauses is equal to (or less than) the integer, they are all required,\nbut if it's greater than the integer, the specification applies. In this\nexample: if there are 1 to 3 clauses they are all required, but for 4 or\nmore clauses only 90% are required.\n\n|Multiple combinations |`2<-25% 9<-3` |Multiple conditional\nspecifications can be separated by spaces, each one only being valid for\nnumbers greater than the one before it. In this example: if there are 1\nor 2 clauses both are required, if there are 3-9 clauses all but 25% are\nrequired, and if there are more than 9 clauses, all but three are\nrequired.\n|=======================================================================\n\n*NOTE:*\n\nWhen dealing with percentages, negative values can be used to get\ndifferent behavior in edge cases. 75% and -25% mean the same thing when\ndealing with 4 clauses, but when dealing with 5 clauses 75% means 3 are\nrequired, but -25% means 4 are required.\n\nIf the calculations based on the specification determine that no\noptional clauses are needed, the usual rules about BooleanQueries still\napply at search time (a BooleanQuery containing no required clauses must\nstill match at least one optional clause)\n\nNo matter what number the calculation arrives at, a value greater than\nthe number of optional clauses, or a value less than 1 will never be\nused. (ie: no matter how low or how high the result of the calculation\nresult is, the minimum number of required matches will never be lower\nthan 1 or greater than the number of clauses.\n"
}