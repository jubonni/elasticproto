{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.358067",
        "size": 5941,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-minimal-setup.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "security-minimal-setup",
        "version": "8.15"
    },
    "doc": "[[security-minimal-setup]]\n=== Set up minimal security for {es}\n++++\n<titleabbrev>Set up minimal security</titleabbrev>\n++++\n\nIMPORTANT: You only need to complete the following steps if you're running an\nexisting, unsecured cluster and want to enable the {es} {security-features}.\n\nIn {es} 8.0 and later, security is\n<<configuring-stack-security,enabled automatically>> when you start {es} for the\nfirst time.\n\nIf you're running an existing {es} cluster where security is disabled, you can\nmanually enable the {es} {security-features} and then create passwords for\nbuilt-in users. You can add more users later, but using the built-in users\nsimplifies the process of enabling security for your cluster.\n\ninclude::../security-manual-configuration.asciidoc[tag=minimal-security-note]\n\n==== Enable {es} security features\n\nEnabling the {es} security features provides basic authentication so\nthat you can run a local cluster with username and password authentication.\n\n. On *every* node in your cluster, stop both {kib} and {es} if they are running.\n\n. On *every* node in your cluster, add the `xpack.security.enabled` setting to\nthe `$ES_PATH_CONF/elasticsearch.yml` file and set the value to `true`:\n+\n[source,yaml]\n----\nxpack.security.enabled: true\n----\n+\nNOTE: The `$ES_PATH_CONF` variable is the path for the {es}\nconfiguration files. If you installed {es} using archive distributions\n(`zip` or `tar.gz`), the variable defaults to `$ES_HOME/config`. If you used\npackage distributions (Debian or RPM), the variable defaults to `/etc/elasticsearch`.\n\n. If your cluster has a single node, add the `discovery.type` setting in the\n`$ES_PATH_CONF/elasticsearch.yml` file and set the value to `single-node`. This\nsetting ensures that your node does not inadvertently connect to other clusters\nthat might be running on your network.\n+\n[source,yaml]\n----\ndiscovery.type: single-node\n----\n\n[[security-create-builtin-users]]\n==== Set passwords for built-in users\n\nTo communicate with your cluster, you must configure a password for\nthe `elastic` and `kibana_system` built-in users. Unless you enable anonymous\naccess (not recommended), all requests that don\u2019t include credentials are\nrejected.\n\nNOTE: You only need to set passwords for the `elastic` and `kibana_system` users\nwhen enabling minimal or basic security.\n\n. On *every* node in your cluster, start {es}. For example, if you installed\n{es} with a `.tar.gz` package, run the following command from the `ES_HOME`\ndirectory:\n+\n[source,shell]\n----\n./bin/elasticsearch\n----\n\n. On any node in your cluster, open another terminal window and set the password\nfor the `elastic` built-in user by running the\n<<reset-password,`elasticsearch-reset-password`>> utility.\nThis command resets the password to an auto-generated value.\n+\n[source,shell]\n----\n./bin/elasticsearch-reset-password -u elastic\n----\n+\nIf you want to set the password to a specific value, run the command with the \ninteractive (`-i`) parameter.\n+\n[source,shell]\n----\n./bin/elasticsearch-reset-password -i -u elastic\n----\n\n. Set the password for the `kibana_system` built-in user.\n+\n[source,shell]\n----\n./bin/elasticsearch-reset-password -u kibana_system\n----\n\n. Save the new passwords. In the next step, you'll add the the password for the\n`kibana_system` user to {kib}.\n\n*Next*: <<add-built-in-users,Configure {kib} to connect to {es} with a password>>\n\n[[add-built-in-users]]\n==== Configure {kib} to connect to {es} with a password\n\nWhen the {es} security features are enabled, users must log in to {kib} with a\nvalid username and password.\n\nYou'll configure {kib} to use the built-in `kibana_system` user and the password that\nyou created earlier. {kib} performs some background tasks that require use of the\n`kibana_system` user.\n\nThis account is not meant for individual users and does not have permission to log in\nto {kib} from a browser. Instead, you'll log in to {kib} as the `elastic` superuser.\n\n. Add the `elasticsearch.username` setting to the `KBN_PATH_CONF/kibana.yml`\nfile and set the value to the `kibana_system` user:\n+\n[source,yaml]\n----\nelasticsearch.username: \"kibana_system\"\n----\n+\nNOTE: The `KBN_PATH_CONF` variable is the path for the {kib}\nconfiguration files. If you installed {kib} using archive distributions\n(`zip` or `tar.gz`), the variable defaults to `KIB_HOME/config`. If you used\npackage distributions (Debian or RPM), the variable defaults to `/etc/kibana`.\n\n. From the directory where you installed {kib}, run the following commands\nto create the {kib} keystore and add the secure settings:\n\n   a. Create the {kib} keystore:\n+\n[source,shell]\n----\n./bin/kibana-keystore create\n----\n\n   b. Add the password for the `kibana_system` user to the {kib} keystore:\n+\n[source,shell]\n----\n./bin/kibana-keystore add elasticsearch.password\n----\n+\nWhen prompted, enter the password for the `kibana_system` user.\n\n. Restart {kib}. For example, if you installed {kib} with a `.tar.gz` package, run the following command from the {kib} directory:\n+\n[source,shell]\n----\n./bin/kibana\n----\n\n. Log in to {kib} as the `elastic` user. Use this superuser account to\n{kibana-ref}/tutorial-secure-access-to-kibana.html[manage spaces, create new users, and assign roles]. If you're running {kib} locally, go to `http://localhost:5601` to view the login page.\n\n[[minimal-security-whatsnext]]\n==== What's next?\n\nCongratulations! You enabled password protection for your local cluster to\nprevent unauthorized access. You can log in to {kib} securely as the `elastic`\nuser and create additional users and roles. If you're running a <<single-node-discovery,single-node cluster>>, then you can stop here.\n\nIf your cluster has multiple nodes, then you must configure Transport Layer\nSecurity (TLS) between nodes. <<dev-vs-prod-mode,Production mode>> clusters\nwill not start if you do not enable TLS.\n\n<<security-basic-setup,Set up basic security for the {stack}>> to\nsecure all internal communication between nodes in your cluster.\n"
}