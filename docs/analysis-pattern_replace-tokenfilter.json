{
    "meta": {
        "size": 4033,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-pattern_replace-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "analysis-pattern_replace-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-pattern_replace-tokenfilter]]\n=== Pattern replace token filter\n++++\n<titleabbrev>Pattern replace</titleabbrev>\n++++\n\nUses a regular expression to match and replace token substrings.\n\nThe `pattern_replace` filter uses\nhttps://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html[Java's\nregular expression syntax]. By default, the filter replaces matching substrings\nwith an empty substring (`\"\"`). Replacement substrings can use Java's\nhttps://docs.oracle.com/javase/8/docs/api/java/util/regex/Matcher.html#appendReplacement-java.lang.StringBuffer-java.lang.String-[`$g`\nsyntax] to reference capture groups from the original token text.\n\n[WARNING]\n====\nA poorly-written regular expression may run slowly or return a\nStackOverflowError, causing the node running the expression to exit suddenly.\n\nRead more about\nhttps://www.regular-expressions.info/catastrophic.html[pathological regular\nexpressions and how to avoid them].\n====\n\nThis filter uses Lucene's\n{lucene-analysis-docs}/pattern/PatternReplaceFilter.html[PatternReplaceFilter].\n\n[[analysis-pattern-replace-tokenfilter-analyze-ex]]\n==== Example\n\nThe following <<indices-analyze,analyze API>> request uses the `pattern_replace`\nfilter to prepend `watch` to the substring `dog` in `foxes jump lazy dogs`.\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"whitespace\",\n  \"filter\": [\n    {\n      \"type\": \"pattern_replace\",\n      \"pattern\": \"(dog)\",\n      \"replacement\": \"watch$1\"\n    }\n  ],\n  \"text\": \"foxes jump lazy dogs\"\n}\n----\n\nThe filter produces the following tokens.\n\n[source,text]\n----\n[ foxes, jump, lazy, watchdogs ]\n----\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"foxes\",\n      \"start_offset\": 0,\n      \"end_offset\": 5,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"jump\",\n      \"start_offset\": 6,\n      \"end_offset\": 10,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"lazy\",\n      \"start_offset\": 11,\n      \"end_offset\": 15,\n      \"type\": \"word\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"watchdogs\",\n      \"start_offset\": 16,\n      \"end_offset\": 20,\n      \"type\": \"word\",\n      \"position\": 3\n    }\n  ]\n}\n----\n////\n\n[[analysis-pattern-replace-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n`all`::\n(Optional, Boolean)\nIf `true`, all substrings matching the `pattern` parameter's regular expression\nare replaced. If `false`, the filter replaces only the first matching substring\nin each token. Defaults to `true`.\n\n`pattern`::\n(Required, string)\nRegular expression, written in\nhttps://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html[Java's\nregular expression syntax]. The filter replaces token substrings matching this\npattern with the substring in the `replacement` parameter.\n\n`replacement`::\n(Optional, string)\nReplacement substring. Defaults to an empty substring (`\"\"`).\n\n[[analysis-pattern-replace-tokenfilter-customize]]\n==== Customize and add to an analyzer\n\nTo customize the `pattern_replace` filter, duplicate it to create the basis\nfor a new custom token filter. You can modify the filter using its configurable\nparameters.\n\nThe following <<indices-create-index,create index API>> request\nconfigures a new <<analysis-custom-analyzer,custom analyzer>> using a custom\n`pattern_replace` filter, `my_pattern_replace_filter`.\n\nThe `my_pattern_replace_filter` filter uses the regular expression `[\u00a3|\u20ac]` to\nmatch and remove the currency symbols `\u00a3` and `\u20ac`. The filter's `all`\nparameter is `false`, meaning only the first matching symbol in each token is\nremoved.\n\n[source,console]\n----\nPUT /my-index-000001\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"my_analyzer\": {\n          \"tokenizer\": \"keyword\",\n          \"filter\": [\n            \"my_pattern_replace_filter\"\n          ]\n        }\n      },\n      \"filter\": {\n        \"my_pattern_replace_filter\": {\n          \"type\": \"pattern_replace\",\n          \"pattern\": \"[\u00a3|\u20ac]\",\n          \"replacement\": \"\",\n          \"all\": false\n        }\n      }\n    }\n  }\n}\n----\n"
}