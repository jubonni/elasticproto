{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.463591",
        "size": 4712,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/enrich-stats-api.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "enrich-stats-api",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[enrich-stats-api]]\n=== Enrich stats API\n++++\n<titleabbrev>Enrich stats</titleabbrev>\n++++\n\nReturns <<coordinating-node,enrich coordinator>> statistics\nand information about <<enrich-policy,enrich policies>>\nthat are currently executing.\n\n[source,console]\n----\nGET /_enrich/_stats\n----\n\n\n[[enrich-stats-api-request]]\n==== {api-request-title}\n\n`GET /_enrich/_stats`\n\n\n[[enrich-stats-api-response-body]]\n==== {api-response-body-title}\n\n`executing_policies`::\n+\n--\n(Array of objects)\nObjects containing information\nabout each enrich policy\nthat is currently executing.\n\nReturned parameters include:\n\n`name`::\n(String)\nName of the enrich policy.\n\n`task`::\n(<<tasks,Task object>>)\nObject containing detailed information\nabout the policy execution task.\n--\n\n`coordinator_stats`::\n+\n--\n(Array of objects)\nObjects containing information\nabout each <<coordinating-node,coordinating ingest node>>\nfor configured enrich processors.\n\nReturned parameters include:\n\n`node_id`::\n(String)\nID of the ingest node coordinating search requests\nfor configured enrich processors.\n\n`queue_size`::\n(Integer)\nNumber of search requests in the queue.\n\n`remote_requests_current`::\n(Integer)\nCurrent number of outstanding remote requests.\n\n`remote_requests_total`::\n(Integer)\nNumber of outstanding remote requests executed\nsince node startup.\n+\nIn most cases,\na remote request includes multiple search requests.\nThis depends on the number of search requests in the queue\nwhen the remote request is executed.\n\n`executed_searches_total`::\n(Integer)\nNumber of search requests\nthat enrich processors have executed\nsince node startup.\n--\n\n`cache_stats`::\n+\n--\n(Array of objects)\nObjects containing information about the enrich\ncache stats on each ingest node.\n\nReturned parameters include:\n\n`node_id`::\n(String)\nID of the ingest node with a enrich cache.\n\n`count`::\n(Integer)\nNumber of cached entries.\n\n`hits`::\n(Integer)\nThe number of enrich lookups served from cache.\n\n`misses`::\n(Integer)\nThe number of time enrich lookups couldn't be\nserved from cache.\n\n`evictions`::\n(Integer)\nThe number cache entries evicted from the cache.\n\n`hits_time_in_millis`::\n(Long)\nThe amount of time in milliseconds spent fetching data from the cache on successful cache hits only.\n\n`misses_time_in_millis`::\n(Long)\nThe amount of time in milliseconds spent fetching data from the enrich index and updating the cache, on cache misses only.\n\n`size_in_bytes`::\n(Long)\nAn _approximation_ of the size in bytes that the enrich cache takes up on the heap.\n--\n\n[[enrich-stats-api-example]]\n==== {api-examples-title}\n\n\n[source,console]\n----\nGET /_enrich/_stats\n----\n//TEST[s/^/PUT \\/_enrich\\/policy\\/my-policy\\/_execute\\/n/\\\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"executing_policies\": [\n    {\n      \"name\": \"my-policy\",\n      \"task\": {\n        \"id\": 124,\n        \"type\": \"direct\",\n        \"action\": \"cluster:admin/xpack/enrich/execute\",\n        \"start_time_in_millis\": 1458585884904,\n        \"running_time_in_nanos\": 47402,\n        \"cancellable\": false,\n        \"parent_task_id\": \"oTUltX4IQMOUUVeiohTt8A:123\",\n        \"headers\": {\n          \"X-Opaque-Id\": \"123456\"\n        }\n      }\n    }\n  ],\n  \"coordinator_stats\": [\n    {\n      \"node_id\": \"1sFM8cmSROZYhPxVsiWew\",\n      \"queue_size\": 0,\n      \"remote_requests_current\": 0,\n      \"remote_requests_total\": 0,\n      \"executed_searches_total\": 0\n    }\n  ],\n  \"cache_stats\": [\n    {\n      \"node_id\": \"1sFM8cmSROZYhPxVsiWew\",\n      \"count\": 0,\n      \"hits\": 0,\n      \"misses\": 0,\n      \"evictions\": 0,\n      \"hits_time_in_millis\": 0,\n      \"misses_time_in_millis\": 0,\n      \"size_in_bytes\": 0\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"executing_policies\": \\[[^\\]]*\\]/\"executing_policies\": $body.$_path/]\n// TESTRESPONSE[s/\"node_id\": \"1sFM8cmSROZYhPxVsiWew\"/\"node_id\" : $body.coordinator_stats.0.node_id/]\n// TESTRESPONSE[s/\"remote_requests_total\": 0/\"remote_requests_total\" : $body.coordinator_stats.0.remote_requests_total/]\n// TESTRESPONSE[s/\"executed_searches_total\": 0/\"executed_searches_total\" : $body.coordinator_stats.0.executed_searches_total/]\n// TESTRESPONSE[s/\"node_id\": \"1sFM8cmSROZYhPxVsiWew\"/\"node_id\" : $body.cache_stats.0.node_id/]\n// TESTRESPONSE[s/\"count\": 0/\"count\" : $body.cache_stats.0.count/]\n// TESTRESPONSE[s/\"misses\": 0/\"misses\" : $body.cache_stats.0.misses/]\n// TESTRESPONSE[s/\"evictions\": 0/\"evictions\" : $body.cache_stats.0.evictions/]\n// TESTRESPONSE[s/\"hits_time_in_millis\": 0/\"hits_time_in_millis\" : $body.cache_stats.0.hits_time_in_millis/]\n// TESTRESPONSE[s/\"misses_time_in_millis\": 0/\"misses_time_in_millis\" : $body.cache_stats.0.misses_time_in_millis/]\n// TESTRESPONSE[s/\"size_in_bytes\": 0/\"size_in_bytes\" : $body.cache_stats.0.size_in_bytes/]\n"
}