{
    "meta": {
        "size": 5378,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/set-processor.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "set-processor",
        "version": "8.15"
    },
    "doc": "[[set-processor]]\n=== Set processor\n++++\n<titleabbrev>Set</titleabbrev>\n++++\n\nSets one field and associates it with the specified value. If the field already exists,\nits value will be replaced with the provided one.\n\n[[set-options]]\n.Set Options\n[options=\"header\"]\n|======\n| Name        | Required | Default | Description\n| `field`     | yes      | -       | The field to insert, upsert, or update. Supports <<template-snippets,template snippets>>.\n| `value`     | yes*     | -       | The value to be set for the field. Supports <<template-snippets,template snippets>>. May specify only one of `value` or `copy_from`.\n| `copy_from` | no       | -       | The origin field which will be copied to `field`, cannot set `value` simultaneously. Supported data types are `boolean`, `number`, `array`, `object`, `string`, `date`, etc.\n| `override`  | no       | `true`  | If `true` processor will update fields with pre-existing non-null-valued field. When set to `false`, such fields will not be touched.\n| `ignore_empty_value` | no | `false` | If `true` and used in combination with `value` which is a <<template-snippets,template snippet>> that evaluates to `null` or an empty string, the processor quietly exits without modifying the document. Similarly, if used in combination with `copy_from` it will quietly exit if the field does not exist or its value evaluates to `null` or an empty string.\n| `media_type` | no       | `application/json` | The media type for encoding `value`. Applies only when `value` is a <<template-snippets,template snippet>>. Must be one of `application/json`, `text/plain`, or `application/x-www-form-urlencoded`.\ninclude::common-options.asciidoc[]\n|======\n\n[source,js]\n--------------------------------------------------\n{\n  \"description\" : \"sets the value of count to 1\",\n  \"set\": {\n    \"field\": \"count\",\n    \"value\": 1\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\nThis processor can also be used to copy data from one field to another. For example:\n\n[source,console]\n--------------------------------------------------\nPUT _ingest/pipeline/set_os\n{\n  \"description\": \"sets the value of host.os.name from the field os\",\n  \"processors\": [\n    {\n      \"set\": {\n        \"field\": \"host.os.name\",\n        \"value\": \"{{{os}}}\"\n      }\n    }\n  ]\n}\n\nPOST _ingest/pipeline/set_os/_simulate\n{\n  \"docs\": [\n    {\n      \"_source\": {\n        \"os\": \"Ubuntu\"\n      }\n    }\n  ]\n}\n--------------------------------------------------\n\nResult:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"docs\" : [\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_version\" : \"-3\",\n        \"_source\" : {\n          \"host\" : {\n            \"os\" : {\n              \"name\" : \"Ubuntu\"\n            }\n          },\n          \"os\" : \"Ubuntu\"\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2019-03-11T21:54:37.909224Z\"\n        }\n      }\n    }\n  ]\n}\n--------------------------------------------------\n// TESTRESPONSE[s/2019-03-11T21:54:37.909224Z/$body.docs.0.doc._ingest.timestamp/]\n\nThis processor can also access array fields using dot notation:\n[source,console]\n--------------------------------------------------\nPOST /_ingest/pipeline/_simulate\n{\n  \"pipeline\": {\n    \"processors\": [\n      {\n        \"set\": {\n          \"field\": \"my_field\",\n          \"value\": \"{{{input_field.1}}}\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"input_field\": [\n          \"Ubuntu\",\n          \"Windows\",\n          \"Ventura\"\n        ]\n      }\n    }\n  ]\n}\n--------------------------------------------------\n\nResult:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"docs\": [\n    {\n      \"doc\": {\n        \"_index\": \"index\",\n        \"_id\": \"id\",\n        \"_version\": \"-3\",\n        \"_source\": {\n          \"input_field\": [\n            \"Ubuntu\",\n            \"Windows\",\n            \"Ventura\"\n          ],\n          \"my_field\": \"Windows\"\n        },\n        \"_ingest\": {\n          \"timestamp\": \"2023-05-05T16:04:16.456475214Z\"\n        }\n      }\n    }\n  ]\n}\n--------------------------------------------------\n// TESTRESPONSE[s/2023-05-05T16:04:16.456475214Z/$body.docs.0.doc._ingest.timestamp/]\n\n\nThe contents of a field including complex values such as arrays and objects can be copied to another field using `copy_from`:\n[source,console]\n--------------------------------------------------\nPUT _ingest/pipeline/set_bar\n{\n  \"description\": \"sets the value of bar from the field foo\",\n  \"processors\": [\n    {\n      \"set\": {\n        \"field\": \"bar\",\n        \"copy_from\": \"foo\"\n      }\n    }\n  ]\n}\n\nPOST _ingest/pipeline/set_bar/_simulate\n{\n  \"docs\": [\n    {\n      \"_source\": {\n        \"foo\": [\"foo1\", \"foo2\"]\n      }\n    }\n  ]\n}\n--------------------------------------------------\n\nResult:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"docs\" : [\n    {\n      \"doc\" : {\n        \"_index\" : \"_index\",\n        \"_id\" : \"_id\",\n        \"_version\" : \"-3\",\n        \"_source\" : {\n          \"bar\": [\"foo1\", \"foo2\"],\n          \"foo\": [\"foo1\", \"foo2\"]\n        },\n        \"_ingest\" : {\n          \"timestamp\" : \"2020-09-30T12:55:17.742795Z\"\n        }\n      }\n    }\n  ]\n}\n--------------------------------------------------\n// TESTRESPONSE[s/2020-09-30T12:55:17.742795Z/$body.docs.0.doc._ingest.timestamp/]\n"
}