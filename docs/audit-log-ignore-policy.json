{
    "meta": {
        "size": 4042,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/audit-log-ignore-policy.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "audit-log-ignore-policy",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[audit-log-ignore-policy]]\n=== Logfile audit events ignore policies\n\nThe comprehensive audit trail is necessary to ensure accountability. It offers tremendous\nvalue during incident response and can even be required for demonstrating compliance.\n\nThe drawback of an audited system is represented by the inevitable performance penalty incurred.\nIn all truth, the audit trail spends _I/O ops_ that are not available anymore for the user's queries.\nSometimes the verbosity of the audit trail may become a problem that the event type restrictions,\n<<audit-log-settings, defined by `include` and `exclude`>>, will not alleviate.\n\n*Audit events ignore policies* are a finer way to tune the verbosity of the audit trail.\nThese policies define rules that match audit events which will be _ignored_ (read as: not printed).\nRules match on the values of attributes of audit events and complement the `include` or `exclude` method.\nImagine the corpus of audit events and the policies chopping off unwanted events.\nWith a sole exception, all audit events are subject to the ignore policies.\nThe exception are events of type `security_config_change`, which cannot be filtered out,\nunless excluded altogether.\n\nIMPORTANT: When utilizing audit events ignore policies you are acknowledging potential\naccountability gaps that could render illegitimate actions undetectable.\nPlease take time to review these policies whenever your system architecture changes.\n\nA policy is a named set of filter rules. Each filter rule applies to a single event attribute,\none of the `users`, `realms`, `actions`, `roles` or `indices` attributes. The filter rule defines\na list of <<regexp-syntax,Lucene regexp>>, *any* of which has to match the value of the audit\nevent attribute for the rule to match.\nA policy matches an event if *all* the rules comprising it match the event.\nAn audit event is ignored, therefore not printed, if it matches *any* policy. All other\nnon-matching events are printed as usual.\n\nAll policies are defined under the `xpack.security.audit.logfile.events.ignore_filters`\nsettings namespace. For example, the following policy named _example1_ matches\nevents from the _kibana_system_ or _admin_user_ principals that operate over indices of the\nwildcard form _app-logs*_:\n\n[source,yaml]\n----------------------------\nxpack.security.audit.logfile.events.ignore_filters:\n  example1:\n    users: [\"kibana_system\", \"admin_user\"]\n    indices: [\"app-logs*\"]\n----------------------------\n\nAn audit event generated by the _kibana_system_ user and operating over multiple indices\n, some of which do not match the indices wildcard, will not match.\nAs expected, operations generated by all other users (even operating only on indices that\nmatch the _indices_ filter) will not match this policy either.\n\nAudit events of different types may have <<audit-event-attributes, different attributes>>.\nIf an event does not contain an attribute for which some policy defines filters, the\nevent will not match the policy.\nFor example, the following policy will never match `authentication_success` or\n`authentication_failed` events, irrespective of the user's roles, because these\nevent schemas do not contain the `role` attribute:\n\n[source,yaml]\n----------------------------\nxpack.security.audit.logfile.events.ignore_filters:\n  example2:\n    roles: [\"admin\", \"ops_admin_*\"]\n----------------------------\n\nLikewise, any events of users with multiple roles, some of which do not match the\nregexps will not match this policy.\n\nFor completeness, although practical use cases should be sparse, a filter can match\na missing attribute of an event, using the empty string (\"\") or the empty list ([]).\nFor example, the following policy will match events that do not have the `indices`\nattribute (`anonymous_access_denied`, `authentication_success` and other types) as well\nas events over the _next_ index.\n\n[source,yaml]\n----------------------------\nxpack.security.audit.logfile.events.ignore_filters:\n  example3:\n    indices: [\"next\", \"\"]\n----------------------------\n"
}