{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.983271",
        "size": 3368,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/put-trained-models-aliases.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "put-trained-models-aliases",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[put-trained-models-aliases]]\n= Create or update trained model aliases API\n[subs=\"attributes\"]\n++++\n<titleabbrev>Create or update trained model aliases</titleabbrev>\n++++\n\n\nCreates or updates a trained model alias.\n\nA trained model alias is a logical name used to reference a single trained model.\n\n[[ml-put-trained-models-aliases-request]]\n== {api-request-title}\n\n`PUT _ml/trained_models/<model_id>/model_aliases/<model_alias>`\n\n\n[[ml-put-trained-models-aliases-prereq]]\n== {api-prereq-title}\n\nRequires the `manage_ml` cluster privilege. This privilege is included in the\n`machine_learning_admin` built-in role.\n\n\n[[ml-put-trained-models-aliases-desc]]\n== {api-description-title}\n\nYou can use aliases instead of trained model identifiers to make it easier to\nreference your models. For example, you can use aliases in {infer} aggregations\nand processors.\n\nAn alias must be unique and refer to only a single trained model. However,\nyou can have multiple aliases for each trained model.\n\nAPI Restrictions:\n\n* You are not allowed to update an alias such that it references a different\ntrained model ID and the model uses a different type of {dfanalytics}. For example,\nthis situation occurs if you have a trained model for\n{reganalysis} and a trained model for {classanalysis}; you cannot reassign an\nalias from one type of trained model to another.\n* You cannot update an alias from a `pytorch` model and a {dfanalytics} model.\n* You cannot update the alias from a deployed `pytorch` model to one\nnot currently deployed.\n\nIf you use this API to update an alias and there are very few input fields in\ncommon between the old and new trained models for the model alias, the API\nreturns a warning.\n\n[[ml-put-trained-models-aliases-path-params]]\n== {api-path-parms-title}\n\n`model_alias`::\n(Required, string)\nThe alias to create or update. This value cannot end in numbers.\n\n`model_id`::\n(Required, string)\nThe identifier for the trained model that the alias refers to.\n\n[[ml-put-trained-models-aliases-query-params]]\n== {api-query-parms-title}\n\n`reassign`::\n(Optional, boolean)\nSpecifies whether the alias gets reassigned to the specified trained model if it\nis already assigned to a different model. If the alias is already assigned and\nthis parameter is `false`, the API returns an error. Defaults to `false`.\n\n[[ml-put-trained-models-aliases-example]]\n== {api-examples-title}\n\n[[ml-put-trained-models-aliases-example-new-alias]]\n=== Create a trained model alias\n\nThe following example shows how to create an alias (`flight_delay_model`) for a\ntrained model (`flight-delay-prediction-1574775339910`):\n\n[source,console]\n--------------------------------------------------\nPUT _ml/trained_models/flight-delay-prediction-1574775339910/model_aliases/flight_delay_model\n--------------------------------------------------\n// TEST[skip:setup kibana sample data]\n\n[[ml-put-trained-models-aliases-example-put-alias]]\n=== Update a trained model alias\n\nThe following example shows how to reassign an alias (`flight_delay_model`) to a\ndifferent trained model (`flight-delay-prediction-1580004349800`):\n\n[source,console]\n--------------------------------------------------\nPUT _ml/trained_models/flight-delay-prediction-1580004349800/model_aliases/flight_delay_model?reassign=true\n--------------------------------------------------\n// TEST[skip:setup kibana sample data]\n"
}