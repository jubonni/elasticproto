{
    "meta": {
        "size": 11816,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/built-in-roles.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "built-in-roles",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[built-in-roles]]\n=== Built-in roles\n\nThe {stack-security-features} apply a default role to all users, including\n<<anonymous-access, anonymous users>>. The default role enables users to access\nthe authenticate endpoint, change their own passwords, and get information about\nthemselves.\n\nThere is also a set of built-in roles you can explicitly assign to users. These\nroles have a fixed set of privileges and cannot be updated.\n\n[[built-in-roles-apm-system]] `apm_system` ::\nGrants access necessary for the APM system user to send system-level data\n(such as monitoring) to {es}.\n\n[[built-in-roles-apm-user]] `apm_user` ::\nGrants the privileges required for APM users (such as `read` and\n`view_index_metadata` privileges on the `apm-*` and `.ml-anomalies*` indices).\ndeprecated:[7.13.0,\"See {kibana-ref}/apm-app-users.html[APM app users and privileges\\] for alternatives.\"].\n\n[[built-in-roles-beats-admin]] `beats_admin` ::\nGrants access to the `.management-beats` index, which contains configuration\ninformation for the Beats.\n\n[[built-in-roles-beats-system]] `beats_system` ::\nGrants access necessary for the Beats system user to send system-level data\n(such as monitoring) to {es}.\n+\n--\n[NOTE]\n===============================\n* This role should not be assigned to users as the granted permissions may\nchange between releases.\n* This role does not provide access to the beats indices and is not\nsuitable for writing beats output to {es}.\n===============================\n\n--\n\n[[built-in-roles-data-frame-transforms-admin]] `data_frame_transforms_admin` ::\nGrants `manage_data_frame_transforms` cluster privileges, which enable you to\nmanage {transforms}. This role also includes all\n{kibana-ref}/kibana-privileges.html[Kibana privileges] for the {ml-features}.\ndeprecated:[7.5.0,\"Replaced by <<built-in-roles-transform-admin,`transform_admin`>>\"].\n\n[[built-in-roles-data-frame-transforms-user]] `data_frame_transforms_user` ::\nGrants `monitor_data_frame_transforms` cluster privileges, which enable you to\nuse {transforms}. This role also includes all\n{kibana-ref}/kibana-privileges.html[Kibana privileges] for the {ml-features}.\ndeprecated:[7.5.0,\"Replaced by <<built-in-roles-transform-user,`transform_user`>>\"].\n\n[[built-in-roles-editor]] `editor` ::\n\nGrants full access to all features in {kib} (including Solutions) and read-only access to data indices.\n+\n--\n[NOTE]\n===============================\n* This role provides read access to any index that is not prefixed with a dot.\n* This role automatically grants full access to new {kib} features as soon as they are released.\n* Some {kib} features may also require creation or write access to data indices. {ml-cap} {dfanalytics-jobs}\n  is an example. For such features those privileges must be defined in a separate role.\n===============================\n\n--\n\n[[built-in-roles-enrich-user]] `enrich_user` ::\nGrants access to manage *all* enrich indices (`.enrich-*`) and *all* operations on\ningest pipelines.\n\n[[built-in-roles-inference-admin]] `inference_admin`::\nProvides all of the privileges of the `inference_user` role and the full\nuse of the {inference} APIs. Grants the `manage_inference` cluster privilege.\n\n[[built-in-roles-inference-user]] `inference_user`::\nProvides the minimum privileges required to view {inference} configurations\nand perform inference. Grants the `monintor_inference` cluster privilege.\n\n[[built-in-roles-ingest-user]] `ingest_admin` ::\nGrants access to manage *all* index templates and *all* ingest pipeline configurations.\n+\nNOTE: This role does *not* provide the ability to create indices; those privileges\nmust be defined in a separate role.\n\n[[built-in-roles-kibana-dashboard]] `kibana_dashboard_only_user` ::\n(This role is deprecated, please use\n{kibana-ref}/kibana-privileges.html#kibana-feature-privileges[{kib} feature privileges]\ninstead).\nGrants read-only access to the {kib} Dashboard in every\n{kibana-ref}/xpack-spaces.html[space in {kib}].\nThis role does not have access to editing tools in {kib}.\n\n[[built-in-roles-kibana-system]] `kibana_system` ::\nGrants access necessary for the {kib} system user to read from and write to the\n{kib} indices, manage index templates and tokens, and check the availability of\nthe {es} cluster. It also permits\nactivating, searching, and retrieving user profiles,\nas well as updating user profile data for the `kibana-*` namespace.\nThis role grants read access to the `.monitoring-*` indices and read and write\naccess to the `.reporting-*` indices. For more information,\nsee {kibana-ref}/using-kibana-with-security.html[Configuring Security in {kib}].\n+\nNOTE: This role should not be assigned to users as the granted permissions may\nchange between releases.\n\n[[built-in-roles-kibana-admin]] `kibana_admin`::\nGrants access to all features in {kib}. For more information on {kib} authorization,\nsee {kibana-ref}/xpack-security-authorization.html[Kibana authorization].\n\n[[built-in-roles-kibana-user]] `kibana_user`::\n(This role is deprecated, please use the\n<<built-in-roles-kibana-admin,`kibana_admin`>> role instead.)\nGrants access to all features in {kib}. For more information on {kib} authorization,\nsee {kibana-ref}/xpack-security-authorization.html[Kibana authorization].\n\n[[built-in-roles-logstash-admin]] `logstash_admin` ::\nGrants access to the `.logstash*` indices for managing configurations, and grants\nnecessary access for logstash-specific APIs exposed by the logstash x-pack plugin.\n\n[[built-in-roles-logstash-system]] `logstash_system` ::\nGrants access necessary for the Logstash system user to send system-level data\n(such as monitoring) to {es}. For more information, see\n{logstash-ref}/ls-security.html[Configuring Security in Logstash].\n+\n--\n[NOTE]\n===============================\n* This role should not be assigned to users as the granted permissions may\nchange between releases.\n* This role does not provide access to the logstash indices and is not\nsuitable for use within a Logstash pipeline.\n===============================\n--\n\n[[built-in-roles-ml-admin]] `machine_learning_admin`::\nProvides all of the privileges of the `machine_learning_user` role plus the full\nuse of the {ml} APIs. Grants `manage_ml` cluster privileges, read access to\n`.ml-anomalies*`, `.ml-notifications*`, `.ml-state*`, `.ml-meta*` indices and\nwrite access to `.ml-annotations*` indices. {ml-cap} administrators also need\nindex privileges for source and destination indices and roles that grant\naccess to {kib}. See {ml-docs-setup-privileges}.\n\n[[built-in-roles-ml-user]] `machine_learning_user`::\nGrants the minimum privileges required to view {ml} configuration,\nstatus, and work with results. This role grants `monitor_ml` cluster privileges,\nread access to the `.ml-notifications` and `.ml-anomalies*` indices\n(which store {ml} results), and write access to `.ml-annotations*` indices.\n{ml-cap} users also need index privileges for source and destination\nindices and roles that grant access to {kib}. See {ml-docs-setup-privileges}.\n\n[[built-in-roles-monitoring-user]] `monitoring_user`::\nGrants the minimum privileges required for any user of {monitoring} other than those\nrequired to use {kib}. This role grants access to the monitoring indices and grants\nprivileges necessary for reading basic cluster information. This role also includes\nall {kibana-ref}/kibana-privileges.html[Kibana privileges] for the {stack-monitor-features}.\nMonitoring users should also be assigned the `kibana_admin` role, or another role\nwith {kibana-ref}/xpack-security-authorization.html[access to the {kib} instance].\n\n[[built-in-roles-remote-monitoring-agent]] `remote_monitoring_agent`::\nGrants the minimum privileges required to write data into the monitoring indices\n(`.monitoring-*`). This role also has the privileges necessary to create\n{metricbeat} indices (`metricbeat-*`) and write data into them.\n\n[[built-in-roles-remote-monitoring-collector]] `remote_monitoring_collector`::\nGrants the minimum privileges required to collect monitoring data for the {stack}.\n\n[[built-in-roles-reporting-user]] `reporting_user`::\nGrants the specific privileges required for users of {reporting} other than those\nrequired to use {kib}. This role grants access to the reporting indices; each\nuser has access to only their own reports.\nReporting users should also be assigned additional roles that grant\n{kibana-ref}/xpack-security-authorization.html[access to {kib}] as well as read\naccess to the <<roles-indices-priv,indices>> that will be used to generate reports.\n\n[[built-in-roles-rollup-admin]] `rollup_admin`::\nGrants `manage_rollup` cluster privileges, which enable you to manage and execute all rollup actions.\n\n[[built-in-roles-rollup-user]] `rollup_user`::\nGrants `monitor_rollup` cluster privileges, which enable you to perform read-only operations related to rollups.\n\n[[built-in-roles-snapshot-user]] `snapshot_user`::\nGrants the necessary privileges to create snapshots of **all** the indices and\nto view their metadata. This role enables users to view the configuration of\nexisting snapshot repositories and snapshot details. It does not grant authority\nto remove or add repositories or to restore snapshots. It also does not enable\nto change index settings or to read or update data stream or index data.\n\n[[built-in-roles-superuser]] `superuser`::\nGrants full access to cluster management and data indices. This role also grants\ndirect read-only access to restricted indices like `.security`. A user with the\n`superuser` role can <<run-as-privilege, impersonate>> any other user in the system.\n+\nOn {ecloud}, all standard users, including those with the `superuser` role are\nrestricted from performing <<operator-only-functionality,operator-only>> actions.\n+\nIMPORTANT: This role can manage security and create roles with unlimited privileges.\nTake extra care when assigning it to a user.\n\n[[built-in-roles-transform-admin]] `transform_admin`::\nGrants `manage_transform` cluster privileges, which enable you to manage\n{transforms}. This role also includes all\n{kibana-ref}/kibana-privileges.html[Kibana privileges] for the {ml-features}.\n\n[[built-in-roles-transform-user]] `transform_user`::\nGrants `monitor_transform` cluster privileges, which enable you to perform\nread-only operations related to {transforms}. This role also includes all\n{kibana-ref}/kibana-privileges.html[Kibana privileges] for the {ml-features}.\n\n[[built-in-roles-transport-client]] `transport_client`::\nGrants the privileges required to access the cluster through the Java Transport\nClient. The Java Transport Client fetches information about the nodes in the\ncluster using the _Node Liveness API_ and the _Cluster State API_ (when\nsniffing is enabled). Assign your users this role if they use the\nTransport Client.\n+\nNOTE: Using the Transport Client effectively means the users are granted access\nto the cluster state. This means users can view the metadata over all indices,\nindex templates, mappings, node and basically everything about the cluster.\nHowever, this role does not grant permission to view the data in all indices.\n\n[[built-in-roles-viewer]] `viewer` ::\n\nGrants read-only access to all features in {kib} (including Solutions) and to data indices.\n+\n--\n[NOTE]\n===============================\n* This role provides read access to any index that is not prefixed with a dot.\n* This role automatically grants read-only access to new {kib} features as soon as they are available.\n===============================\n\n--\n\n[[built-in-roles-watcher-admin]] `watcher_admin`::\n+\nAllows users to create and execute all {watcher} actions. Grants read access to\nthe `.watches` index. Also grants read access to the watch history and the\ntriggered watches index.\n\n[[built-in-roles-watcher-user]] `watcher_user`::\n+\nGrants read access to the `.watches` index, the get watch action and the watcher\nstats.\n"
}