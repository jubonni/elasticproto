{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.214579",
        "size": 3839,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/configure-operator-privileges.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "configure-operator-privileges",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[configure-operator-privileges]]\n=== Configure operator privileges\n\nNOTE: {cloud-only}\n\nBefore you can use operator privileges, you must\n<<enable-operator-privileges, enable the feature>> on all nodes in the cluster\nand <<designate-operator-users,designate operator users>>.\n\n[[enable-operator-privileges]]\n==== Enable operator privileges\n\nIn order to use the operator privileges feature, it must be enabled explicitly\non each node in the cluster. Add the following setting in each\n`elasticsearch.yml` file:\n\n[source,yaml]\n----------------------------\nxpack.security.operator_privileges.enabled: true\n----------------------------\n\nIf the node is already running before you make this change, you must restart\nthe node for the feature to take effect.\n\nWARNING: The feature needs to be either enabled or disabled consistently across\nall nodes in a cluster. Otherwise, you can get inconsistent behaviour depending\non which node first receives a request and which node executes it.\n\nWhen operator privileges are enabled on a cluster,\n<<operator-only-functionality,specific functionalities>> are restricted and can\nbe executed only by users who have been explicitly designated as operator users.\nIf a regular user attempts to execute these functionalities (even if they have\nthe `superuser` role), a security exception occurs.\n\n[[designate-operator-users]]\n==== Designate operator users\n\nOperator users are just normal {es} users with special rights to perform\noperator-only functionalities. They are specified in an `operator_users.yml`\nfile, which is located in the config directory (as defined by the `ES_PATH_CONF`\nenvironment variable). Similar to\n<<file-realm-configuration,other security config files>>, the\n`operator_users.yml` file is local to a node and does not apply globally to the\ncluster. This means, in most cases, the same file should be distributed or\ncopied to all nodes in a cluster.\n\nThe `operator_users.yml` file defines a set of criteria that an authenticating\nuser must match to be considered as an operator user. The following snippet\nshows an example of such a file:\n\n[source,yaml]\n-----------------------------------\noperator: <1>\n  - usernames: [\"system_agent_1\",\"system_agent_2\"] <2>\n    realm_type: \"file\" <3>\n    auth_type: \"realm\" <4>\n-----------------------------------\n<1> A fixed value of `operator` signals the beginning of the definition.\n<2> A list of user names allowed for operator users. This field is mandatory.\n<3> The type of the authenticating realm allowed for operator users. The default\nand only acceptable value is <<file-realm,`file`>>.\n<4> The authentication type allowed for operator users. The default and only\nacceptable value is `realm`.\n\nYou must specify at least the `usernames` field. If no other fields are\nspecified, their default values are used. All fields must be matched for a user\nto be qualified as an operator user. You can also specify multiple groups of\ncriteria. This is currently not very useful since this feature does not yet\nsupport other realms or authentication types.\n\nThere are also two implicit rules that affect which users are operator users:\n\n1. If the authenticating user <<run-as-privilege,runs as>> another user, neither\nof them are considered to be operator users.\n2. All <<internal-users>> are implicitly operator users.\n\nIMPORTANT: After a user is designated as an operator user, they are still\nsubject to regular <<authorization,RBAC user authorization>> checks. That is to\nsay, in addition to specifying that a user is an operator user, you must also\ngrant them the necessary {es} roles to perform their tasks. Consequently, it is\nentirely possible that an operator user can encounter an \"access denied\" error\nand fail to perform certain actions due to RBAC check failures. In short, an\noperator user is *not* automatically a `superuser`.\n"
}