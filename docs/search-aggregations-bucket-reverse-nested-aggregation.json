{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.249066",
        "size": 4313,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-reverse-nested-aggregation.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "search-aggregations-bucket-reverse-nested-aggregation",
        "version": "8.15"
    },
    "doc": "[[search-aggregations-bucket-reverse-nested-aggregation]]\n=== Reverse nested aggregation\n++++\n<titleabbrev>Reverse nested</titleabbrev>\n++++\n\nA special single bucket aggregation that enables aggregating on parent docs from nested documents. Effectively this\naggregation can break out of the nested block structure and link to other nested structures or the root document,\nwhich allows nesting other aggregations that aren't part of the nested object in a nested aggregation.\n\nThe `reverse_nested` aggregation must be defined inside a `nested` aggregation.\n\n.Options:\n* `path` - Which defines to what nested object field should be joined back. The default is empty,\nwhich means that it joins back to the root / main document level. The path cannot contain a reference to\na nested object field that falls outside the `nested` aggregation's nested structure a `reverse_nested` is in.\n\nFor example, lets say we have an index for a ticket system with issues and comments. The comments are inlined into\nthe issue documents as nested documents. The mapping could look like:\n\n[source,console,id=reversed-nested-aggregation-example]\n--------------------------------------------------\nPUT /issues\n{\n  \"mappings\": {\n    \"properties\": {\n      \"tags\": { \"type\": \"keyword\" },\n      \"comments\": {                            <1>\n        \"type\": \"nested\",\n        \"properties\": {\n          \"username\": { \"type\": \"keyword\" },\n          \"comment\": { \"type\": \"text\" }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The `comments` is an array that holds nested documents under the `issue` object.\n\nThe following aggregations will return the top commenters' username that have commented and per top commenter the top\ntags of the issues the user has commented on:\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nPOST /issues/_doc/0?refresh\n{\"tags\": [\"tag_1\"], \"comments\": [{\"username\": \"username_1\"}]}\n--------------------------------------------------\n// TEST[continued]\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nGET /issues/_search\n{\n  \"query\": {\n    \"match_all\": {}\n  },\n  \"aggs\": {\n    \"comments\": {\n      \"nested\": {\n        \"path\": \"comments\"\n      },\n      \"aggs\": {\n        \"top_usernames\": {\n          \"terms\": {\n            \"field\": \"comments.username\"\n          },\n          \"aggs\": {\n            \"comment_to_issue\": {\n              \"reverse_nested\": {}, <1>\n              \"aggs\": {\n                \"top_tags_per_comment\": {\n                  \"terms\": {\n                    \"field\": \"tags\"\n                  }\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n// TEST[s/_search/_search\\?filter_path=aggregations/]\n\nAs you can see above, the `reverse_nested` aggregation is put in to a `nested` aggregation as this is the only place\nin the dsl where the `reverse_nested` aggregation can be used. Its sole purpose is to join back to a parent doc higher\nup in the nested structure.\n\n<1> A `reverse_nested` aggregation that joins back to the root / main document level, because no `path` has been defined.\nVia the `path` option the `reverse_nested` aggregation can join back to a different level, if multiple layered nested\nobject types have been defined in the mapping\n\nPossible response snippet:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"aggregations\": {\n    \"comments\": {\n      \"doc_count\": 1,\n      \"top_usernames\": {\n        \"doc_count_error_upper_bound\" : 0,\n        \"sum_other_doc_count\" : 0,\n        \"buckets\": [\n          {\n            \"key\": \"username_1\",\n            \"doc_count\": 1,\n            \"comment_to_issue\": {\n              \"doc_count\": 1,\n              \"top_tags_per_comment\": {\n                \"doc_count_error_upper_bound\" : 0,\n                \"sum_other_doc_count\" : 0,\n                \"buckets\": [\n                  {\n                    \"key\": \"tag_1\",\n                    \"doc_count\": 1\n                  }\n                  ...\n                ]\n              }\n            }\n          }\n          ...\n        ]\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\.//]\n"
}