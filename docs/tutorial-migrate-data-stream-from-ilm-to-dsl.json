{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.798580",
        "size": 18086,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/tutorial-migrate-data-stream-from-ilm-to-dsl.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "tutorial-migrate-data-stream-from-ilm-to-dsl",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[tutorial-migrate-data-stream-from-ilm-to-dsl]]\n=== Tutorial: Migrate ILM managed data stream to data stream lifecycle\n\nIn this tutorial we'll look at migrating an existing data stream from <<index-lifecycle-management,Index Lifecycle Management ({ilm-init})>> to\n<<data-stream-lifecycle,data stream lifecycle>>. The existing {ilm-init} managed backing indices will continue\nto be managed by {ilm-init} until they age out and get deleted by {ilm-init}; however,\nthe new backing indices will be managed by data stream lifecycle.\nThis way, a data stream is gradually migrated away from being managed by {ilm-init} to\nbeing managed by data stream lifecycle. As we'll see, {ilm-init} and data stream lifecycle\ncan co-manage a data stream; however, an index can only be managed by one system at\na time.\n\n[discrete]\n[[migrate-dsl-ilm-tldr]]\n==== TL;DR\nTo migrate a data stream from {ilm-init} to data stream lifecycle we'll have to execute\ntwo steps:\n\n1. Update the index template that's backing the data stream to set <<index-lifecycle-prefer-ilm, prefer_ilm>>\nto `false`, and to configure data stream lifecycle.\n2. Configure the data stream lifecycle for the _existing_ data stream using\nthe <<data-streams-put-lifecycle, lifecycle API>>.\n\nFor more details see the <<migrate-from-ilm-to-dsl, migrate to data stream lifecycle>> section.\n\n[discrete]\n[[setup-test-data]]\n==== Setup ILM managed data stream\nLet's first create a data stream with two backing indices managed by {ilm-init}.\nWe first create an {ilm-init} policy:\n\n[source,console]\n----\nPUT _ilm/policy/pre-dsl-ilm-policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\": {\n            \"max_primary_shard_size\": \"50gb\"\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"7d\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n----\n\nAnd let's create an index template that'll back the data stream and configures {ilm-init}:\n\n[source,console]\n----\nPUT _index_template/dsl-data-stream-template\n{\n  \"index_patterns\": [\"dsl-data-stream*\"],\n  \"data_stream\": { },\n  \"priority\": 500,\n  \"template\": {\n    \"settings\": {\n      \"index.lifecycle.name\": \"pre-dsl-ilm-policy\"\n    }\n  }\n}\n----\n// TEST[continued]\n\nWe'll now index a document targetting `dsl-data-stream` to create the data stream\nand we'll also manually rollover the data stream to have another generation index created:\n\n[source,console]\n----\nPOST dsl-data-stream/_doc?\n{\n  \"@timestamp\": \"2023-10-18T16:21:15.000Z\",\n  \"message\": \"192.0.2.42 - - [06/May/2099:16:21:15 +0000] \\\"GET /images/bg.jpg HTTP/1.0\\\" 200 24736\"\n}\n----\n// TEST[continued]\n\n[source,console]\n----\nPOST dsl-data-stream/_rollover\n----\n// TEST[continued]\n\nWe'll use the <<indices-get-data-stream, GET _data_stream>> API to inspect the state of\nthe data stream:\n\n[source,console]\n--------------------------------------------------\nGET _data_stream/dsl-data-stream\n--------------------------------------------------\n// TEST[continued]\n\nInspecting the response we'll see that both backing indices are managed by {ilm-init}\nand that the next generation index will also be managed by {ilm-init}:\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"dsl-data-stream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\",    <1>\n          \"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\",\n          \"prefer_ilm\": true,                                       <2>\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",                       <3>\n          \"managed_by\": \"Index Lifecycle Management\"                <4>\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"\n        }\n      ],\n      \"generation\": 2,\n      \"status\": \"GREEN\",\n      \"template\": \"dsl-data-stream-template\",\n      \"next_generation_managed_by\": \"Index Lifecycle Management\",   <5>\n      \"prefer_ilm\": true,                                           <6>\n      \"ilm_policy\": \"pre-dsl-ilm-policy\",                           <7>\n      \"hidden\": false,\n      \"system\": false,\n      \"allow_custom_routing\": false,\n      \"replicated\": false,\n      \"rollover_on_write\": false\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\"/\"index_name\": $body.data_streams.0.indices.0.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\"/\"index_uuid\": $body.data_streams.0.indices.0.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\"/\"index_name\": $body.data_streams.0.indices.1.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\"/\"index_uuid\": $body.data_streams.0.indices.1.index_uuid/]\n// TESTRESPONSE[s/\"status\": \"GREEN\"/\"status\": \"YELLOW\",\"failure_store\":{\"enabled\": false, \"indices\": [], \"rollover_on_write\": true}/]\n\n<1> The name of the backing index.\n<2> For each backing index we display the value of the <<index-lifecycle-prefer-ilm, prefer_ilm>>\nconfiguration which will indicate if {ilm-init} takes precedence over data stream lifecycle in case\nboth systems are configured for an index.\n<3> The {ilm-init} policy configured for this index.\n<4> The system that manages this index (possible values are \"Index Lifecycle Management\",\n\"Data stream lifecycle\", or \"Unmanaged\")\n<5> The system that will manage the next generation index (the new write index of this\ndata stream, once the data stream is rolled over). The possible values are\n\"Index Lifecycle Management\", \"Data stream lifecycle\", or \"Unmanaged\".\n<6> The <<index-lifecycle-prefer-ilm, prefer_ilm>> value configured in the index template\nthat's backing the data stream. This value will be configured for all the new backing indices.\nIf it's not configured in the index template the backing indices will receive the `true`\ndefault value ({ilm-init} takes precedence over data stream lifecycle by default as it's\ncurrently richer in features).\n<7> The {ilm-init} policy configured in the index template that's backing this data\nstream (which will be configured on all the new backing indices, as long as it exists\nin the index template).\n\n[discrete]\n[[migrate-from-ilm-to-dsl]]\n==== Migrate data stream to data stream lifecycle\nTo migrate the `dsl-data-stream` to data stream lifecycle we'll have to execute\ntwo steps:\n\n1. Update the index template that's backing the data stream to set <<index-lifecycle-prefer-ilm, prefer_ilm>>\nto `false`, and to configure data stream lifecycle.\n2. Configure the data stream lifecycle for the _existing_ `dsl-data-stream` using\nthe <<data-streams-put-lifecycle, lifecycle API>>.\n\nIMPORTANT: The data stream lifecycle configuration that's added to the index template,\nbeing a data stream configuration, will only apply to **new** data streams.\nOur data stream exists already, so even though we added a data stream lifecycle\nconfiguration in the index template it will not be applied to `dsl-data-stream`.\n\n\n[[update-index-template-for-dsl]]\nLet's update the index template:\n\n[source,console]\n----\nPUT _index_template/dsl-data-stream-template\n{\n  \"index_patterns\": [\"dsl-data-stream*\"],\n  \"data_stream\": { },\n  \"priority\": 500,\n  \"template\": {\n    \"settings\": {\n      \"index.lifecycle.name\": \"pre-dsl-ilm-policy\",\n      \"index.lifecycle.prefer_ilm\": false             <1>\n    },\n    \"lifecycle\": {\n      \"data_retention\": \"7d\"                          <2>\n    }\n  }\n}\n----\n// TEST[continued]\n\n<1> The `prefer_ilm` setting will now be configured on the **new** backing indices\n(created by rolling over the data stream) such that {ilm-init} does _not_ take\nprecedence over data stream lifecycle.\n<2> We're configuring the data stream lifecycle so _new_ data streams will be\nmanaged by data stream lifecycle.\n\nWe've now made sure that new data streams will be managed by data stream lifecycle.\n\nLet's update our existing `dsl-data-stream` and configure data stream lifecycle:\n\n[source,console]\n----\nPUT _data_stream/dsl-data-stream/_lifecycle\n{\n    \"data_retention\": \"7d\"\n}\n----\n// TEST[continued]\n\nWe can inspect the data stream to check that the next generation will indeed be\nmanaged by data stream lifecycle:\n\n[source,console]\n--------------------------------------------------\nGET _data_stream/dsl-data-stream\n--------------------------------------------------\n// TEST[continued]\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"dsl-data-stream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\",\n          \"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"                <1>\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"                <2>\n        }\n      ],\n      \"generation\": 2,\n      \"status\": \"GREEN\",\n      \"template\": \"dsl-data-stream-template\",\n      \"lifecycle\": {\n        \"enabled\": true,\n        \"data_retention\": \"7d\",\n        \"effective_retention\": \"7d\",\n        \"retention_determined_by\": \"data_stream_configuration\"\n      },\n      \"ilm_policy\": \"pre-dsl-ilm-policy\",\n      \"next_generation_managed_by\": \"Data stream lifecycle\",         <3>\n      \"prefer_ilm\": false,                                           <4>\n      \"hidden\": false,\n      \"system\": false,\n      \"allow_custom_routing\": false,\n      \"replicated\": false,\n      \"rollover_on_write\": false\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\"/\"index_name\": $body.data_streams.0.indices.0.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\"/\"index_uuid\": $body.data_streams.0.indices.0.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\"/\"index_name\": $body.data_streams.0.indices.1.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\"/\"index_uuid\": $body.data_streams.0.indices.1.index_uuid/]\n// TESTRESPONSE[s/\"status\": \"GREEN\"/\"status\": \"YELLOW\",\"failure_store\":{\"enabled\": false, \"indices\": [], \"rollover_on_write\": true}/]\n\n<1> The existing backing index will continue to be managed by {ilm-init}\n<2> The existing backing index will continue to be managed by {ilm-init}\n<3> The next generation index will be managed by Data stream lifecycle\n<4> The `prefer_ilm` setting value we configured in the index template is reflected\nand will be configured accordingly for new backing indices.\n\nWe'll now rollover the data stream to see the new generation index being managed by\ndata stream lifecycle:\n\n[source,console]\n----\nPOST dsl-data-stream/_rollover\n----\n// TEST[continued]\n\n[source,console]\n----\nGET _data_stream/dsl-data-stream\n----\n// TEST[continued]\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"dsl-data-stream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\",\n          \"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"                <1>\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"                <2>\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000003\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8abcd1\",\n          \"prefer_ilm\": false,                                      <3>\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Data stream lifecycle\"                     <4>\n        }\n      ],\n      \"generation\": 3,\n      \"status\": \"GREEN\",\n      \"template\": \"dsl-data-stream-template\",\n      \"lifecycle\": {\n        \"enabled\": true,\n        \"data_retention\": \"7d\",\n        \"effective_retention\": \"7d\",\n        \"retention_determined_by\": \"data_stream_configuration\"\n      },\n      \"ilm_policy\": \"pre-dsl-ilm-policy\",\n      \"next_generation_managed_by\": \"Data stream lifecycle\",\n      \"prefer_ilm\": false,\n      \"hidden\": false,\n      \"system\": false,\n      \"allow_custom_routing\": false,\n      \"replicated\": false,\n      \"rollover_on_write\": false\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\"/\"index_name\": $body.data_streams.0.indices.0.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\"/\"index_uuid\": $body.data_streams.0.indices.0.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\"/\"index_name\": $body.data_streams.0.indices.1.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\"/\"index_uuid\": $body.data_streams.0.indices.1.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000003\"/\"index_name\": $body.data_streams.0.indices.2.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8abcd1\"/\"index_uuid\": $body.data_streams.0.indices.2.index_uuid/]\n// TESTRESPONSE[s/\"status\": \"GREEN\"/\"status\": \"YELLOW\",\"failure_store\":{\"enabled\": false, \"indices\": [], \"rollover_on_write\": true}/]\n\n<1> The backing indices that existed before rollover will continue to be managed by {ilm-init}\n<2> The backing indices that existed before rollover will continue to be managed by {ilm-init}\n<3> The new write index received the `false` value for the `prefer_ilm` setting, as we configured\nin the index template\n<4> The new write index is managed by `Data stream lifecycle`\n\n[discrete]\n[[migrate-from-dsl-to-ilm]]\n==== Migrate data stream back to ILM\nWe can easily change this data stream to be managed by {ilm-init} because we didn't remove\nthe {ilm-init} policy when we <<update-index-template-for-dsl, updated\nthe index template>>.\n\nWe can achieve this in two ways:\n\n1. <<data-streams-delete-lifecycle, Delete the lifecycle>> from the data streams\n2. Disable data stream lifecycle by configuring the `enabled` flag to `false`.\n\nLet's implement option 2 and disable the data stream lifecycle:\n\n[source,console]\n----\nPUT _data_stream/dsl-data-stream/_lifecycle\n{\n    \"data_retention\": \"7d\",\n    \"enabled\": false <1>\n}\n----\n// TEST[continued]\n<1> The `enabled` flag can be ommitted and defaults to `true` however, here we\nexplicitly configure it to `false`\nLet's check the state of the data stream:\n\n[source,console]\n----\nGET _data_stream/dsl-data-stream\n----\n// TEST[continued]\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"dsl-data-stream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\",\n          \"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\",\n          \"prefer_ilm\": true,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"\n        },\n        {\n          \"index_name\": \".ds-dsl-data-stream-2023.10.19-000003\",\n          \"index_uuid\": \"PA_JquKGSiKcAKBA8abcd1\",\n          \"prefer_ilm\": false,\n          \"ilm_policy\": \"pre-dsl-ilm-policy\",\n          \"managed_by\": \"Index Lifecycle Management\"                <1>\n        }\n      ],\n      \"generation\": 3,\n      \"status\": \"GREEN\",\n      \"template\": \"dsl-data-stream-template\",\n      \"lifecycle\": {\n        \"enabled\": false,                                          <2>\n        \"data_retention\": \"7d\"\n      },\n      \"ilm_policy\": \"pre-dsl-ilm-policy\",\n      \"next_generation_managed_by\": \"Index Lifecycle Management\",  <3>\n      \"prefer_ilm\": false,\n      \"hidden\": false,\n      \"system\": false,\n      \"allow_custom_routing\": false,\n      \"replicated\": false,\n      \"rollover_on_write\": false\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000001\"/\"index_name\": $body.data_streams.0.indices.0.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"xCEhwsp8Tey0-FLNFYVwSg\"/\"index_uuid\": $body.data_streams.0.indices.0.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000002\"/\"index_name\": $body.data_streams.0.indices.1.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8DJ5gw\"/\"index_uuid\": $body.data_streams.0.indices.1.index_uuid/]\n// TESTRESPONSE[s/\"index_name\": \".ds-dsl-data-stream-2023.10.19-000003\"/\"index_name\": $body.data_streams.0.indices.2.index_name/]\n// TESTRESPONSE[s/\"index_uuid\": \"PA_JquKGSiKcAKBA8abcd1\"/\"index_uuid\": $body.data_streams.0.indices.2.index_uuid/]\n// TESTRESPONSE[s/\"status\": \"GREEN\"/\"status\": \"YELLOW\",\"failure_store\":{\"enabled\": false, \"indices\": [], \"rollover_on_write\": true}/]\n<1> The write index is now managed by {ilm-init}\n<2> The `lifecycle` configured on the data stream is now disabled.\n<3> The next write index will be managed by {ilm-init}\n\nHad we removed the {ilm-init} policy from the index template when we <<update-index-template-for-dsl, updated>>\nit, the write index of the data stream will now be `Unmanaged` because the index\nwouldn't have the {ilm-init} policy configured to fallback onto.\n\n//////////////////////////\n[source,console]\n--------------------------------------------------\nDELETE _data_stream/dsl-data-stream\nDELETE _index_template/dsl-data-stream-template\nDELETE _ilm/policy/pre-dsl-ilm-policy\n--------------------------------------------------\n// TEST[continued]\n\n//////////////////////////\n\n"
}