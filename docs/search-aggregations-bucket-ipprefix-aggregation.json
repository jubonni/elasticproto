{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.819587",
        "size": 9734,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-ipprefix-aggregation.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "search-aggregations-bucket-ipprefix-aggregation",
        "version": "8.15"
    },
    "doc": "[[search-aggregations-bucket-ipprefix-aggregation]]\n=== IP prefix aggregation\n++++\n<titleabbrev>IP prefix</titleabbrev>\n++++\n\nA bucket aggregation that groups documents based on the network or sub-network of an IP address. An IP address consists of two groups of bits: the most significant bits which represent the network prefix, and the least significant bits which represent the host.\n\n[[ipprefix-agg-ex]]\n==== Example\n\nFor example, consider the following index:\n[source,console]\n----------------------------------------------\nPUT network-traffic\n{\n    \"mappings\": {\n        \"properties\": {\n            \"ipv4\": { \"type\": \"ip\" },\n            \"ipv6\": { \"type\": \"ip\" }\n        }\n    }\n}\n\nPOST /network-traffic/_bulk?refresh\n{\"index\":{\"_id\":0}}\n{\"ipv4\":\"192.168.1.10\",\"ipv6\":\"2001:db8:a4f8:112a:6001:0:12:7f10\"}\n{\"index\":{\"_id\":1}}\n{\"ipv4\":\"192.168.1.12\",\"ipv6\":\"2001:db8:a4f8:112a:6001:0:12:7f12\"}\n{\"index\":{\"_id\":2}}\n{ \"ipv4\":\"192.168.1.33\",\"ipv6\":\"2001:db8:a4f8:112a:6001:0:12:7f33\"}\n{\"index\":{\"_id\":3}}\n{\"ipv4\":\"192.168.1.10\",\"ipv6\":\"2001:db8:a4f8:112a:6001:0:12:7f10\"}\n{\"index\":{\"_id\":4}}\n{\"ipv4\":\"192.168.2.41\",\"ipv6\":\"2001:db8:a4f8:112c:6001:0:12:7f41\"}\n{\"index\":{\"_id\":5}}\n{\"ipv4\":\"192.168.2.10\",\"ipv6\":\"2001:db8:a4f8:112c:6001:0:12:7f10\"}\n{\"index\":{\"_id\":6}}\n{\"ipv4\":\"192.168.2.23\",\"ipv6\":\"2001:db8:a4f8:112c:6001:0:12:7f23\"}\n{\"index\":{\"_id\":7}}\n{\"ipv4\":\"192.168.3.201\",\"ipv6\":\"2001:db8:a4f8:114f:6001:0:12:7201\"}\n{\"index\":{\"_id\":8}}\n{\"ipv4\":\"192.168.3.107\",\"ipv6\":\"2001:db8:a4f8:114f:6001:0:12:7307\"}\n----------------------------------------------\n// TESTSETUP\n\nThe following aggregation groups documents into buckets. Each bucket identifies a different sub-network. The sub-network is calculated by applying a netmask with prefix length of `24` to each IP address in the `ipv4` field:\n\n[source,console,id=ip-prefix-ipv4-example]\n--------------------------------------------------\nGET /network-traffic/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ipv4-subnets\": {\n      \"ip_prefix\": {\n        \"field\": \"ipv4\",\n        \"prefix_length\": 24\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ipv4-subnets\": {\n      \"buckets\": [\n        {\n          \"key\": \"192.168.1.0\",\n          \"is_ipv6\": false,\n          \"doc_count\": 4,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        {\n          \"key\": \"192.168.2.0\",\n          \"is_ipv6\": false,\n          \"doc_count\": 3,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        {\n           \"key\": \"192.168.3.0\",\n           \"is_ipv6\": false,\n           \"doc_count\": 2,\n           \"prefix_length\": 24,\n           \"netmask\": \"255.255.255.0\"\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\nTo aggregate IPv6 addresses, set `is_ipv6` to `true`.\n\n[source,console,id=ip-prefix-ipv6-example]\n--------------------------------------------------\nGET /network-traffic/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ipv6-subnets\": {\n      \"ip_prefix\": {\n        \"field\": \"ipv6\",\n        \"prefix_length\": 64,\n        \"is_ipv6\": true\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nIf `is_ipv6` is `true`, the response doesn't include a `netmask` for each bucket.\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ipv6-subnets\": {\n      \"buckets\": [\n        {\n          \"key\": \"2001:db8:a4f8:112a::\",\n          \"is_ipv6\": true,\n          \"doc_count\": 4,\n          \"prefix_length\": 64\n        },\n        {\n          \"key\": \"2001:db8:a4f8:112c::\",\n          \"is_ipv6\": true,\n          \"doc_count\": 3,\n          \"prefix_length\": 64\n        },\n        {\n          \"key\": \"2001:db8:a4f8:114f::\",\n          \"is_ipv6\": true,\n          \"doc_count\": 2,\n          \"prefix_length\": 64\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\n[role=\"child_attributes\"]\n[[ip-prefix-agg-params]]\n==== Parameters\n\n`field`::\n(Required, string)\nThe document IP address field to aggregate on. The field mapping type must be <<ip,`ip`>>.\n\n`prefix_length`::\n(Required, integer)\nLength of the network prefix. For IPv4 addresses, the accepted range is `[0, 32]`. For IPv6 addresses, the accepted range is `[0, 128]`.\n\n`is_ipv6`::\n(Optional, boolean)\nDefines whether the prefix applies to IPv6 addresses. Just specifying the `prefix_length` parameter is not enough to know if an IP prefix applies to IPv4 or IPv6 addresses. Defaults to `false`.\n\n`append_prefix_length`::\n(Optional, boolean)\nDefines whether the prefix length is appended to IP address keys in the response. Defaults to `false`.\n\n`keyed`::\n(Optional, boolean)\nDefines whether buckets are returned as a hash rather than an array in the response. Defaults to `false`.\n\n`min_doc_count`::\n(Optional, integer)\nDefines the minimum number of documents for buckets to be included in the response. Defaults to `1`.\n\n\n[[ipprefix-agg-response]]\n==== Response body\n\n`key`::\n(string)\nThe IPv6 or IPv4 subnet.\n\n`prefix_length`::\n(integer)\nThe length of the prefix used to aggregate the bucket.\n\n`doc_count`::\n(integer)\nNumber of documents matching a specific IP prefix.\n\n`is_ipv6`::\n(boolean)\nDefines whether the netmask is an IPv6 netmask.\n\n`netmask`::\n(string)\nThe IPv4 netmask. If `is_ipv6` is `true` in the request, this field is missing in the response.\n\n[[ipprefix-agg-keyed-response]]\n==== Keyed Response\n\nSet the `keyed` flag of `true` to associate an unique IP address key with each bucket and return sub-networks as a hash rather than an array.\n\nExample:\n\n[source,console,id=ip-prefix-keyed-example]\n--------------------------------------------------\nGET /network-traffic/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ipv4-subnets\": {\n      \"ip_prefix\": {\n        \"field\": \"ipv4\",\n        \"prefix_length\": 24,\n        \"keyed\": true\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ipv4-subnets\": {\n      \"buckets\": {\n        \"192.168.1.0\": {\n          \"is_ipv6\": false,\n          \"doc_count\": 4,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        \"192.168.2.0\": {\n          \"is_ipv6\": false,\n          \"doc_count\": 3,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        \"192.168.3.0\": {\n          \"is_ipv6\": false,\n          \"doc_count\": 2,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\n[[ipprefix-agg-append-prefix-length]]\n==== Append the prefix length to the IP address key\n\nSet the `append_prefix_length` flag to `true` to catenate IP address keys with the prefix length of the sub-network.\n\nExample:\n\n[source,console,id=ip-prefix-append-prefix-len-example]\n--------------------------------------------------\nGET /network-traffic/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ipv4-subnets\": {\n      \"ip_prefix\": {\n        \"field\": \"ipv4\",\n        \"prefix_length\": 24,\n        \"append_prefix_length\": true\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ipv4-subnets\": {\n      \"buckets\": [\n        {\n          \"key\": \"192.168.1.0/24\",\n          \"is_ipv6\": false,\n          \"doc_count\": 4,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        {\n          \"key\": \"192.168.2.0/24\",\n          \"is_ipv6\": false,\n          \"doc_count\": 3,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        {\n          \"key\": \"192.168.3.0/24\",\n          \"is_ipv6\": false,\n          \"doc_count\": 2,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\n[[ipprefix-agg-min-doc-count]]\n==== Minimum document count\n\nUse the `min_doc_count` parameter to only return buckets with a minimum number of documents.\n\n[source,console,id=ip-prefix-min-doc-count-example]\n--------------------------------------------------\nGET /network-traffic/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ipv4-subnets\": {\n      \"ip_prefix\": {\n        \"field\": \"ipv4\",\n        \"prefix_length\": 24,\n        \"min_doc_count\": 3\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ipv4-subnets\": {\n      \"buckets\": [\n        {\n          \"key\": \"192.168.1.0\",\n          \"is_ipv6\": false,\n          \"doc_count\": 4,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        },\n        {\n          \"key\": \"192.168.2.0\",\n          \"is_ipv6\": false,\n          \"doc_count\": 3,\n          \"prefix_length\": 24,\n          \"netmask\": \"255.255.255.0\"\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\n"
}