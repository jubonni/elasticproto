{
    "meta": {
        "size": 2762,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-forcemerge.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ilm-forcemerge",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-forcemerge]]\n=== Force merge\n\nPhases allowed: hot, warm.\n\n<<indices-forcemerge,Force merges>> the index into\nthe specified maximum number of <<indices-segments,segments>>.\n\n[NOTE]\nShards that are relocating during a `forcemerge` will not be merged.\n\nTo use the `forcemerge` action in the `hot` phase, the `rollover` action *must* be present.\nIf no rollover action is configured, {ilm-init} will reject the policy.\n\n[[ilm-forcemerge-performance]]\n.Performance considerations\n****\nForce merge is a resource-intensive operation.\nIf too many force merges are triggered at once, it can negatively impact your cluster.\nThis can happen when you apply an {ilm-init} policy that includes a force merge action\nto existing indices.\nIf they meet the `min_age` criteria, they can immediately proceed through multiple phases.\nYou can prevent this by increasing the `min_age` or setting `index.lifecycle.origination_date`\nto change how the index age is calculated.\n\nIf you experience a force merge task queue backlog,\nyou might need to increase the size of the force merge threadpool so\nindices can be force merged in parallel.\nTo do this, configure the `thread_pool.force_merge.size` <<cluster-get-settings,cluster setting>>.\n\nIMPORTANT: This can have cascading performance impacts.\nMonitor cluster performance and increment the size of the thread pool slowly to reduce the backlog.\n\nForce merging will be performed by the nodes within the current phase of the index. A forcemerge in\nthe `hot` phase will use hot nodes with potentially faster nodes, while impacting ingestion more. A\nforcemerge in the `warm` phase will use warm nodes and potentially take longer to perform, but\nwithout impacting ingestion in the `hot` tier.\n****\n\n\n[[ilm-forcemerge-options]]\n==== Options\n\n`max_num_segments`::\n(Required, integer)\nNumber of segments to merge to. To fully merge the index, set to `1`.\n\n`index_codec`::\n(Optional, string)\nCodec used to compress the document store. The only accepted value is\n`best_compression`, which uses {wikipedia}/Zstd[ZSTD] for a higher\ncompression ratio but slower stored fields performance. To use the default LZ4\ncodec, omit this argument.\n+\nWARNING: If using `best_compression`, {ilm-init} will <<indices-close,close>>\nand then <<indices-open-close,re-open>> the index prior to the force merge.\nWhile closed, the index will be unavailable for read or write operations.\n\n[[ilm-forcemerge-action-ex]]\n==== Example\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"forcemerge\" : {\n            \"max_num_segments\": 1\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n"
}