{
    "meta": {
        "size": 2317,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_80_jvm_option_changes.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "breaking_80_jvm_option_changes",
        "version": "8.15"
    },
    "doc": "[discrete]\n[[breaking_80_jvm_option_changes]]\n==== JVM option changes\n\nTIP: {ess-skip-section}\n\n[[breaking_80_allocation_change_flood_stage_block_always_removed]]\n.`es.disk.auto_release_flood_stage_block` has been removed.\n[%collapsible]\n====\n*Details* +\nIf a node exceeds the flood-stage disk watermark then we add a block to all of\nits indices to prevent further writes as a last-ditch attempt to prevent the\nnode completely exhausting its disk space. By default, from 7.4 onwards the\nblock is automatically removed when a node drops below the high watermark\nagain, but this behaviour could be disabled by setting the system property\n`es.disk.auto_release_flood_stage_block` to `false`. This behaviour is no\nlonger optional, and this system property must now not be set.\n\n*Impact* +\nDiscontinue use of the `es.disk.auto_release_flood_stage_block` system property.\nSetting this system property will result in an error on startup.\n====\n\n.`es.rest.url_plus_as_space` has been removed.\n[%collapsible]\n====\n*Details* +\nStarting in version 7.4, a `+` in a URL will be encoded as `%2B` by all REST API functionality. Prior versions handled a `+` as a single space.\nIn these previous versions, if your application required handling `+` as a single space, you could return to the old behaviour by setting the system property\n`es.rest.url_plus_as_space` to `true`. Note that this behaviour is deprecated and setting this system property to `true` will cease\nto be supported in version 8.\n\n*Impact* +\nUpdate your application or workflow to assume `+` in a URL is encoded as `%2B`.\n====\n\n.`es.unsafely_permit_handshake_from_incompatible_builds` has been removed.\n[%collapsible]\n====\n*Details* +\n{es} has a check that verifies that communicating pairs of nodes of the same\nversion are running exactly the same build and therefore using the same wire\nformat as each other. In previous versions this check can be bypassed by\nsetting the system property\n`es.unsafely_permit_handshake_from_incompatible_builds` to `true`. The use of\nthis system property is now forbidden.\n\n*Impact* +\nDiscontinue use of the `es.unsafely_permit_handshake_from_incompatible_builds`\nsystem property, and ensure that all nodes of the same version are running\nexactly the same build. Setting this system property will result in an error\non startup.\n====\n"
}