{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.210580",
        "size": 9948,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/processors.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "processors",
        "version": "8.15"
    },
    "doc": "[[processors]]\n== Ingest processor reference\n++++\n<titleabbrev>Processor reference</titleabbrev>\n++++\n\nAn <<ingest,ingest pipeline>> is made up of a sequence of processors that are applied to documents as they are ingested into an index.\nEach processor performs a specific task, such as filtering, transforming, or enriching data.\n\nEach successive processor depends on the output of the previous processor, so the order of processors is important.\nThe modified documents are indexed into {es} after all processors are applied.\n\n{es} includes over 40 configurable processors.\nThe subpages in this section contain reference documentation for each processor.\nTo get a list of available\nprocessors, use the <<cluster-nodes-info,nodes info>> API.\n\n[source,console]\n----\nGET _nodes/ingest?filter_path=nodes.*.ingest.processors\n----\n\n[discrete]\n[[ingest-processors-categories]]\n=== Ingest processors by category\n\nWe've categorized the available processors on this page and summarized their functions.\nThis will help you find the right processor for your use case.\n\n* <<ingest-process-category-data-enrichment>>\n* <<ingest-process-category-data-transformation>>\n* <<ingest-process-category-data-filtering>>\n* <<ingest-process-category-pipeline-handling>>\n* <<ingest-process-category-array-json-handling>>\n\n[discrete]\n[[ingest-process-category-data-enrichment]]\n=== Data enrichment processors\n\n[discrete]\n[[ingest-process-category-data-enrichment-general]]\n==== General outcomes\n\n<<append-processor, `append` processor>>::\nAppends a value to a field.\n\n<<date-index-name-processor, `date_index_name` processor>>::\nPoints documents to the right time-based index based on a date or timestamp field.\n\n<<enrich-processor, `enrich` processor>>::\nEnriches documents with data from another index.\n[TIP]\n====\nRefer to <<ingest-enriching-data, Enrich your data>> for detailed examples of how to use the `enrich` processor to add data from your existing indices to incoming documents during ingest.\n====\n\n<<inference-processor, `inference` processor>>::\nUses {ml} to classify and tag text fields.\n\n[discrete]\n[[ingest-process-category-data-enrichment-specific]]\n==== Specific outcomes\n\n<<attachment, `attachment` processor>>::\nParses and indexes binary data, such as PDFs and Word documents.\n\n<<ingest-circle-processor, `circle` processor>>::\nConverts a location field to a Geo-Point field.\n\n<<community-id-processor, `community_id` processor>>::\nComputes the Community ID for network flow data.\n\n<<fingerprint-processor, `fingerprint` processor>>::\nComputes a hash of the document\u2019s content.\n\n<<ingest-geo-grid-processor, `geo_grid` processor>>::\nConverts geo-grid definitions of grid tiles or cells to regular bounding boxes or polygons which describe their shape.\n\n<<geoip-processor, `geoip` processor>>::\nAdds information about the geographical location of an IPv4 or IPv6 address.\n\n<<network-direction-processor, `network_direction` processor>>::\nCalculates the network direction given a source IP address, destination IP address, and a list of internal networks.\n\n<<registered-domain-processor, `registered_domain` processor>>::\nExtracts the registered domain (also known as the effective top-level domain or eTLD), sub-domain, and top-level domain from a fully qualified domain name (FQDN).\n\n<<ingest-node-set-security-user-processor, `set_security_user` processor>>::\nSets user-related details (such as `username`,  `roles`, `email`, `full_name`,`metadata`, `api_key`, `realm` and `authentication_type`) from the current authenticated user to the current document by pre-processing the ingest.\n\n<<uri-parts-processor, `uri_parts` processor>>::\nParses a Uniform Resource Identifier (URI) string and extracts its components as an object.\n\n<<urldecode-processor, `urldecode` processor>>::\nURL-decodes a string.\n\n<<user-agent-processor, `user_agent` processor>>::\nParses user-agent strings to extract information about web clients.\n\n[discrete]\n[[ingest-process-category-data-transformation]]\n=== Data transformation processors\n\n[discrete]\n[[ingest-process-category-data-transformation-general]]\n==== General outcomes\n\n<<convert-processor, `convert` processor>>::\nConverts a field in the currently ingested document to a different type, such as converting a string to an integer.\n\n<<dissect-processor, `dissect` processor>>::\nExtracts structured fields out of a single text field within a document.\nUnlike the <<grok-processor,grok processor>>, dissect does not use regular expressions.\nThis makes the dissect's a simpler and often faster alternative.\n\n<<grok-processor, `grok` processor>>::\nExtracts structured fields out of a single text field within a document, using the <<grok, Grok>> regular expression dialect that supports reusable aliased expressions.\n\n<<gsub-processor, `gsub` processor>>::\nConverts a string field by applying a regular expression and a replacement.\n\n<<redact-processor, `redact` processor>>::\nUses the <<grok, Grok>> rules engine to obscure text in the input document matching the given Grok patterns.\n\n<<rename-processor, `rename` processor>>::\nRenames an existing field.\n\n<<set-processor, `set` processor>>::\nSets a value on a field.\n\n[discrete]\n[[ingest-process-category-data-transformation-specific]]\n==== Specific outcomes\n\n<<bytes-processor, `bytes` processor>>::\nConverts a human-readable byte value to its value in bytes (for example `1kb` becomes `1024`).\n\n<<csv-processor, `csv` processor>>::\nExtracts a single line of CSV data from a text field.\n\n<<date-processor, `date` processor>>::\nExtracts and converts date fields.\n\n<<dot-expand-processor, `dot_expand`>> processor::\nExpands a field with dots into an object field.\n\n<<htmlstrip-processor, `html_strip` processor>>::\nRemoves HTML tags from a field.\n\n<<join-processor, `join` processor>>::\nJoins each element of an array into a single string using a separator character between each element.\n\n<<kv-processor, `kv` processor>>::\nParse messages (or specific event fields) containing key-value pairs.\n\n<<lowercase-processor, `lowercase` processor>> and <<uppercase-processor, `uppercase` processor>>::\nConverts a string field to lowercase or uppercase.\n\n<<split-processor, `split` processor>>::\nSplits a field into an array of values.\n\n<<trim-processor, `trim` processor>>::\nTrims whitespace from field. \n\n[discrete]\n[[ingest-process-category-data-filtering]]\n=== Data filtering processors\n\n<<drop-processor, `drop` processor>>::\nDrops the document without raising any errors.\n\n<<remove-processor, `remove` processor>>::\nRemoves fields from documents.\n\n[discrete]\n[[ingest-process-category-pipeline-handling]]\n=== Pipeline handling processors\n\n<<fail-processor, `fail` processor>>::\nRaises an exception. Useful for when you expect a pipeline to fail and want to relay a specific message to the requester.\n\n<<pipeline-processor, `pipeline` processor>>::\nExecutes another pipeline.\n\n<<reroute-processor, `reroute` processor>>::\nReroutes documents to another target index or data stream.\n\n<<terminate-processor, `terminate` processor>>::\nTerminates the current ingest pipeline, causing no further processors to be run.\n\n[discrete]\n[[ingest-process-category-array-json-handling]]\n=== Array/JSON handling processors\n\n<<foreach-processor, `for_each` processor>>::\nRuns an ingest processor on each element of an array or object.\n\n<<json-processor, `json` processor>>::\nConverts a JSON string into a structured JSON object.\n\n<<script-processor, `script` processor>>::\nRuns an inline or stored <<modules-scripting, script>> on incoming documents.\nThe script runs in the {painless}/painless-ingest-processor-context.html[painless `ingest` context].\n\n<<sort-processor, `sort` processor>>::\nSorts the elements of an array in ascending or descending order.\n\n[discrete]\n[[ingest-process-plugins]]\n=== Add additional processors\n\nYou can install additional processors as {plugins}/ingest.html[plugins].\n\nYou must install any plugin processors on all nodes in your cluster. Otherwise,\n{es} will fail to create pipelines containing the processor.\n\nMark a plugin as mandatory by setting `plugin.mandatory` in\n`elasticsearch.yml`. A node will fail to start if a mandatory plugin is not\ninstalled.\n\n[source,yaml]\n----\nplugin.mandatory: my-ingest-plugin\n----\n\ninclude::processors/append.asciidoc[]\ninclude::processors/attachment.asciidoc[]\ninclude::processors/bytes.asciidoc[]\ninclude::processors/circle.asciidoc[]\ninclude::processors/community-id.asciidoc[]\ninclude::processors/convert.asciidoc[]\ninclude::processors/csv.asciidoc[]\ninclude::processors/date.asciidoc[]\ninclude::processors/date-index-name.asciidoc[]\ninclude::processors/dissect.asciidoc[]\ninclude::processors/dot-expand.asciidoc[]\ninclude::processors/drop.asciidoc[]\ninclude::processors/enrich.asciidoc[]\ninclude::processors/fail.asciidoc[]\ninclude::processors/fingerprint.asciidoc[]\ninclude::processors/foreach.asciidoc[]\ninclude::processors/geo-grid.asciidoc[]\ninclude::processors/geoip.asciidoc[]\ninclude::processors/grok.asciidoc[]\ninclude::processors/gsub.asciidoc[]\ninclude::processors/html_strip.asciidoc[]\ninclude::processors/inference.asciidoc[]\ninclude::processors/join.asciidoc[]\ninclude::processors/json.asciidoc[]\ninclude::processors/kv.asciidoc[]\ninclude::processors/lowercase.asciidoc[]\ninclude::processors/network-direction.asciidoc[]\ninclude::processors/pipeline.asciidoc[]\ninclude::processors/redact.asciidoc[]\ninclude::processors/registered-domain.asciidoc[]\ninclude::processors/remove.asciidoc[]\ninclude::processors/rename.asciidoc[]\ninclude::processors/reroute.asciidoc[]\ninclude::processors/script.asciidoc[]\ninclude::processors/set.asciidoc[]\ninclude::processors/set-security-user.asciidoc[]\ninclude::processors/sort.asciidoc[]\ninclude::processors/split.asciidoc[]\ninclude::processors/terminate.asciidoc[]\ninclude::processors/trim.asciidoc[]\ninclude::processors/uppercase.asciidoc[]\ninclude::processors/url-decode.asciidoc[]\ninclude::processors/uri-parts.asciidoc[]\ninclude::processors/user-agent.asciidoc[]\n"
}