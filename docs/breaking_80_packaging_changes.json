{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.084579",
        "size": 2820,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_80_packaging_changes.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "breaking_80_packaging_changes",
        "version": "8.15"
    },
    "doc": "[discrete]\n[[breaking_80_packaging_changes]]\n==== Packaging changes\n\nTIP: {ess-skip-section}\n\n.The layout of the data folder has changed.\n[%collapsible]\n====\n*Details* +\nEach node's data is now stored directly in the data directory set by the\n`path.data` setting, rather than in `${path.data}/nodes/0`, because the removal\nof the `node.max_local_storage_nodes` setting means that nodes may no longer\nshare a data path.\n\n*Impact* +\nAt startup, {es} will automatically migrate the data path to the new layout.\nThis automatic migration will not proceed if the data path contains data for\nmore than one node. You should move to a configuration in which each node has\nits own data path before upgrading.\n\nIf you try to upgrade a configuration in which there is data for more than one\nnode in a data path then the automatic migration will fail and {es}\nwill refuse to start. To resolve this you will need to perform the migration\nmanually. The data for the extra nodes are stored in folders named\n`${path.data}/nodes/1`, `${path.data}/nodes/2` and so on, and you should move\neach of these folders to an appropriate location and then configure the\ncorresponding node to use this location for its data path. If your nodes each\nhave more than one data path in their `path.data` settings then you should move\nall the corresponding subfolders in parallel. Each node uses the same subfolder\n(e.g. `nodes/2`) across all its data paths.\n====\n\n.The default Maxmind geoip databases have been removed.\n[%collapsible]\n====\n*Details* +\nThe default Maxmind geoip databases that shipped by default with Elasticsearch\nhave been removed. These databases are out dated and stale and using these\ndatabases will likely result in incorrect geoip lookups.\n\nBy default since 7.13, these pre-packaged geoip databases\nwere used in case no database were specified in the config directory or before\nthe geoip downloader downloaded the geoip databases. When the geoip database\ndownloader completed downloading the new databases then these pre-packaged\ndatabases were no longer used.\n\n*Impact* +\nIf the geoip downloader is disabled and no geoip databases are provided\nin the config directory of each ingest node then the geoip processor will\nno longer perform geoip lookups and tag these documents with the fact that\nthe requested database is no longer available.\n\nAfter a cluster has been started and before the geoip downloader has completed\ndownloading the most up to data databases, the geoip processor will not perform\nany geoip lookups and tag documents that the requested database is not available.\nAfter the geoip downloader has completed downloading the most up to data databases\nthen the geoip processor will function as normal. The window of time that the\ngeoip processor can't do geoip lookups after cluster startup should be very small.\n====\n"
}