{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.821282",
        "size": 6806,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/actions-pagerduty.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "actions-pagerduty",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[actions-pagerduty]]\n=== {watcher} PagerDuty action\n++++\n<titleabbrev>PagerDuty action</titleabbrev>\n++++\n\nUse the PagerDuty action to create events in https://pagerduty.com/[\nPagerDuty]. To create PagerDuty events, you must <<configuring-pagerduty,\nconfigure at least one PagerDuty account>> in `elasticsearch.yml`.\n\n[[configuring-pagerduty-actions]]\n==== Configuring PagerDuty actions\n\nYou configure PagerDuty actions in the `actions` array. Action-specific attributes\nare specified using the `pagerduty` keyword.\n\nThe following snippet shows a simple PagerDuty action definition:\n\n[source,js]\n--------------------------------------------------\n\"actions\" : {\n  \"notify-pagerduty\" : {\n    \"transform\" : { ... },\n    \"throttle_period\" : \"5m\",\n    \"pagerduty\" : {\n      \"description\" : \"Main system down, please check!\" <1>\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> Description of the message\n\n\n[[adding-context-and-payloads-to-pagerduty-actions]]\n==== Adding meta information to a PagerDuty incident\n\nTo give the PagerDuty incident some more context, you can attach the\npayload as well as an array of contexts to the action.\n\n[source,js]\n--------------------------------------------------\n\"actions\" : {\n  \"notify-pagerduty\" : {\n    \"throttle_period\" : \"5m\",\n    \"pagerduty\" : {\n      \"account\" : \"team1\",\n      \"description\" : \"Main system down, please check! Happened at {{ctx.execution_time}}\",\n      \"attach_payload\" : true,\n      \"client\" : \"/foo/bar/{{ctx.watch_id}}\",\n      \"client_url\" : \"http://www.example.org/\",\n      \"contexts\" : [\n        {\n          \"type\": \"link\",\n          \"href\": \"http://acme.pagerduty.com\"\n        },{\n          \"type\": \"link\",\n          \"href\": \"http://acme.pagerduty.com\",\n          \"text\": \"View the incident on {{ctx.payload.link}}\"\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\n\n[[pagerduty-action-attributes]]\n==== Pagerduty action attributes\n\n[cols=\",^,\", options=\"header\"]\n|======\n| Name        |Required   | Description\n| `account`   | no        | The account to use, falls back to the default one.\n                            The account needs a `service_api_key` attribute.\n|======\n\nNOTE: Although some of the attributes below have names which match the PagerDuty \"Events API v1\" parameter\n      names, the \"Events API v2\" API is finally used by translating the attributes appropriately.\n\n[[pagerduty-event-trigger-incident-attributes]]\n.Pagerduty event trigger incident attributes\n[cols=\",^,\", options=\"header\"]\n|======\n| Name              |Required | Description\n\n| `description`     | yes     | A quick description for this event\n\n| `event_type`      | no      | The event type to sent. Must be one of `trigger`,\n                                `resolve` or `acknowledge`. Defaults to `trigger`.\n\n| `incident_key`    | no      | The incident key on the pagerduty side, also used\n                                for de-duplication and allows to resolve or acknowledge\n                                incidents.\n\n| `client`          | no      | Name of the client triggering the incident, i.e.\n                                `Watcher Monitoring`\n\n| `client_url`      | no      | A client URL to visit to get more detailed information.\n\n| `attach_payload`  | no      | If set to `true` the payload is attached as a detail\n                                to the API call. Defaults to `false`.\n\n| `contexts`        | no      | An array of objects, that allow you to provide\n                                additional links or images in order to provide more\n                                context to the trigger.\n\n| `proxy.host`      | no      | The proxy host to use (only in combination with `proxy.port`)\n\n| `proxy.port`      | no      | The proxy port to use (only in combination with `proxy.host`)\n|======\n\nYou can configure defaults for the above values for the whole service using the\n`xpack.notification.pagerduty.event_defaults.*` properties as well as\nper account using `xpack.notification.pagerduty.account.your_account_name.event_defaults.*`\n\nNOTE: All of those objects have templating support, so you can use data from the\n      context and the payload as part of all the fields.\n\n[[pagerduty-event-trigger-context-attributes]]\n.Pagerduty event trigger context attributes\n[cols=\",^,\", options=\"header\"]\n|======\n| Name    |Required | Description\n\n| `type`  | yes     | One of `link` or `image`.\n\n| `href`  | yes/no  | A link to include more information. Must be there if the\n                      type is `link`, optional if the type is `image`\n\n| `src`   | no      | A src attribute for the `image` type.\n|======\n\n[[configuring-pagerduty]]\n==== Configuring PagerDuty accounts\n\nYou configure the accounts {watcher} uses to communicate with PagerDuty in \nthe `xpack.notification.pagerduty` namespace in `elasticsearch.yml`.\n\nTo configure a PagerDuty account, you need the API integration key for\nthe PagerDuty service you want to send notifications to. To get the\nkey:\n\n. Log in to http://pagerduty.com[pagerduty.com] as an account administrator.\n. Go to **Services** and select the PagerDuty service you wish to target.\n. Click the **Integrations** tab and add an **Events API V2** integration if one does not already exist.\n. Copy the API integration key for use below.\n\nTo configure a PagerDuty account in the keystore, you\nmust specify an account name and integration key, (see <<secure-settings>>):\n\n[source,yaml]\n--------------------------------------------------\nbin/elasticsearch-keystore add xpack.notification.pagerduty.account.my_pagerduty_account.secure_service_api_key\n--------------------------------------------------\n\ndeprecated[7.0.0, \"Storing the service api key in the YAML file or via cluster update settings is still supported, but the keystore setting should be used.\"]\n\nYou can also specify defaults for the\n<<pagerduty-event-trigger-incident-attributes,PagerDuty event attributes>>:\n.\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.pagerduty:\n  account:\n    my_pagerduty_account:\n      event_defaults:\n        description: \"Watch notification\"\n        incident_key: \"my_incident_key\"\n        client: \"my_client\"\n        client_url: http://www.example.org\n        event_type: trigger\n        attach_payload: true\n--------------------------------------------------\n\nIf you configure multiple PagerDuty accounts, you either need to set a default \naccount or specify which account the event should be sent with in the\n<<actions-pagerduty,`pagerduty`>> action.\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.pagerduty:\n  default_account: team1 \n  account:\n    team1:\n      ...\n    team2:\n      ...\n--------------------------------------------------\n"
}