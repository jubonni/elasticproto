{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.222578",
        "size": 6777,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/configuring-metricbeat.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "configuring-metricbeat",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[configuring-metricbeat]]\n== Collecting {es} monitoring data with {metricbeat}\n\n[subs=\"attributes\"]\n++++\n<titleabbrev>Collecting monitoring data with {metricbeat}</titleabbrev>\n++++\n\nIn 6.5 and later, you can use {metricbeat} to collect data about {es} \nand ship it to the monitoring cluster, rather than routing it through exporters \nas described in <<collecting-monitoring-data>>.\n\nWant to use {agent} instead? Refer to <<configuring-elastic-agent>>.\n\nimage::monitoring/images/metricbeat.png[Example monitoring architecture]\n\n. {metricbeat-ref}/metricbeat-installation-configuration.html[Install\n{metricbeat}]. Ideally install a single {metricbeat} instance configured with\n`scope: cluster` and configure `hosts` to point to an endpoint (e.g. a\nload-balancing proxy) which directs requests to the master-ineligible nodes in\nthe cluster. If this is not possible then install one {metricbeat} instance for\neach {es} node in the production cluster and use the default `scope: node`.\nWhen {metricbeat} is monitoring {es} with `scope: node` then you must install a\n{metricbeat} instance for each {es} node. If you don't, some metrics will not\nbe collected. {metricbeat} with `scope: node` collects most of the metrics from\nthe elected master of the cluster, so you must scale up all your\nmaster-eligible nodes to account for this extra load and you should not use\nthis mode if you have dedicated master nodes.\n\n. Enable the {es} module in {metricbeat} on each {es} node.\n+\n--\nFor example, to enable the default configuration for the {stack-monitor-features}\nin the `modules.d` directory, run the following command:\n\n[\"source\",\"sh\",subs=\"attributes,callouts\"]\n----------------------------------------------------------------------\nmetricbeat modules enable elasticsearch-xpack\n----------------------------------------------------------------------\n\nFor more information, refer to \n{metricbeat-ref}/metricbeat-module-elasticsearch.html[{es} module]. \n--\n\n. Configure the {es} module in {metricbeat} on each {es} node.\n+\n--\nThe `modules.d/elasticsearch-xpack.yml` file contains the following settings:\n\n[source,yaml]\n----------------------------------\n  - module: elasticsearch\n    xpack.enabled: true\n    period: 10s\n    hosts: [\"http://localhost:9200\"] <1>\n    #scope: node <2>\n    #username: \"user\"\n    #password: \"secret\"\n    #ssl.enabled: true\n    #ssl.certificate_authorities: [\"/etc/pki/root/ca.pem\"]\n    #ssl.certificate: \"/etc/pki/client/cert.pem\"\n    #ssl.key: \"/etc/pki/client/cert.key\"\n    #ssl.verification_mode: \"full\"\n----------------------------------\n<1> By default, the module collects {es} monitoring metrics from\n`http://localhost:9200`. If that host and port number are not correct, you must\nupdate the `hosts` setting. If you configured {es} to use encrypted\ncommunications, you must access it via HTTPS. For example, use a `hosts` setting\nlike `https://localhost:9200`.\n<2> By default, `scope` is set to `node` and each entry in the `hosts` list\nindicates a distinct node in an {es} cluster. If you set `scope` to `cluster`\nthen each entry in the `hosts` list indicates a single endpoint for a distinct\n{es} cluster (for example, a load-balancing proxy fronting the cluster). You\nshould use `scope: cluster` if the cluster has dedicated master nodes, and\nconfigure the endpoint in the `hosts` list not to direct requests to the\ndedicated master nodes.\n\nIf Elastic {security-features} are enabled, you must also provide a user ID\nand password so that {metricbeat} can collect metrics successfully: \n\n.. Create a user on the production cluster that has the\n<<built-in-roles,`remote_monitoring_collector` built-in role>>. \nAlternatively, use the\n<<built-in-users,`remote_monitoring_user` built-in user>>.\n\n.. Add the `username` and `password` settings to the {es} module configuration\nfile. \n\n.. If TLS is enabled on the HTTP layer of your {es} cluster, you must either use https as the URL scheme in the `hosts` setting or add the `ssl.enabled: true` setting. Depending on the TLS configuration of your {es} cluster, you might also need to specify {metricbeat-ref}/configuration-ssl.html[additional ssl.*] settings.\n--\n\n. Optional: Disable the system module in {metricbeat}.\n+\n--\nBy default, the {metricbeat-ref}/metricbeat-module-system.html[system module] is\nenabled. The information it collects, however, is not shown on the *Monitoring*\npage in {kib}. Unless you want to use that information for other purposes, run\nthe following command:\n\n[\"source\",\"sh\",subs=\"attributes,callouts\"]\n----------------------------------------------------------------------\nmetricbeat modules disable system\n----------------------------------------------------------------------\n\n--\n\n. Identify where to send the monitoring data.\n+\n--\nTIP: In production environments, we strongly recommend using a separate cluster \n(referred to as the _monitoring cluster_) to store the data. Using a separate \nmonitoring cluster prevents production cluster outages from impacting your \nability to access your monitoring data. It also prevents monitoring activities \nfrom impacting the performance of your production cluster.\n\nFor example, specify the {es} output information in the {metricbeat} \nconfiguration file (`metricbeat.yml`):\n\n[source,yaml]\n----------------------------------\noutput.elasticsearch:\n  # Array of hosts to connect to.\n  hosts: [\"http://es-mon-1:9200\", \"http://es-mon-2:9200\"] <1>\n  \n  # Optional protocol and basic auth credentials.\n  #protocol: \"https\"\n  #username: \"elastic\"\n  #password: \"changeme\"\n----------------------------------\n<1> In this example, the data is stored on a monitoring cluster with nodes \n`es-mon-1` and `es-mon-2`. \n\nIf you configured the monitoring cluster to use encrypted communications, you\nmust access it via HTTPS. For example, use a `hosts` setting like\n`https://es-mon-1:9200`.\n\nIMPORTANT: The {es} {monitor-features} use ingest pipelines, therefore the\ncluster that stores the monitoring data must have at least one \n<<ingest,ingest node>>. \n\nIf {es} {security-features} are enabled on the monitoring cluster, you must\nprovide a valid user ID and password so that {metricbeat} can send metrics \nsuccessfully: \n\n.. Create a user on the monitoring cluster that has the \n<<built-in-roles,`remote_monitoring_agent` built-in role>>. \nAlternatively, use the \n<<built-in-users,`remote_monitoring_user` built-in user>>.\n\n.. Add the `username` and `password` settings to the {es} output information in \nthe {metricbeat} configuration file.\n\nFor more information about these configuration options, see \n{metricbeat-ref}/elasticsearch-output.html[Configure the {es} output].\n--\n\n. {metricbeat-ref}/metricbeat-starting.html[Start {metricbeat}] on each node. \n\n. {kibana-ref}/monitoring-data.html[View the monitoring data in {kib}]. \n"
}