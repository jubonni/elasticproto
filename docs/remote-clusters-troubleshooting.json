{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.127076",
        "size": 22235,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/remote-clusters-troubleshooting.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "remote-clusters-troubleshooting",
        "version": "8.15"
    },
    "doc": "[[remote-clusters-troubleshooting]]\n=== Troubleshooting remote clusters\n\n++++\n<titleabbrev>Troubleshooting</titleabbrev>\n++++\n\nYou may encounter several issues when setting up a remote cluster for {ccr} or\n{ccs}.\n\n[[remote-clusters-troubleshooting-general]]\n==== General troubleshooting\n\n[[remote-clusters-troubleshooting-check-connection]]\n===== Checking whether a remote cluster has connected successfully\n\nA successful call to the cluster settings update API for adding or updating\nremote clusters does not necessarily mean the configuration is successful.\nUse the <<cluster-remote-info,remote cluster info API>> to verify that a local\ncluster is successfully connected to a remote cluster.\n\ninclude::remote-clusters-remote-info.asciidoc[]\n\n[[remote-clusters-troubleshooting-enable-server]]\n===== Enabling the remote cluster server\n\nWhen using API key authentication, cross-cluster traffic happens on the remote\ncluster interface, instead of the transport interface. The remote cluster\ninterface is not enabled by default. This means a node is not ready to accept\nincoming cross-cluster requests by default, while it is ready to send outgoing\ncross-cluster requests. Ensure you've enabled the remote cluster server on every\nnode of the remote cluster. In `elasticsearch.yml`:\n\n* Set <<remote-cluster-network-settings,`remote_cluster_server.enabled`>> to\n`true`.\n* Configure the bind and publish address for remote cluster server traffic, for\nexample using <<remote-cluster-network-settings,`remote_cluster.host`>>. Without\nconfiguring the address, remote cluster traffic may be bound to the local\ninterface, and remote clusters running on other machines can't connect.\n* Optionally, configure the remote server port using\n<<remote_cluster.port,`remote_cluster.port`>> (defaults to `9443`).\n\n[[remote-clusters-troubleshooting-common-issues]]\n==== Common issues\n\nThe following issues are listed in the order they may occur while setting up a\nremote cluster.\n\n[[remote-clusters-not-reachable]]\n===== Remote cluster not reachable\n\n====== Symptom\n\nA local cluster may not be able to reach a remote cluster for many reasons. For\nexample, the remote cluster server may not be enabled, an incorrect host or port\nmay be configured, or a firewall may be blocking traffic. When a remote cluster\nis not reachable, check the logs of the local cluster for a `connect_exception`.\n\nWhen the remote cluster is configured using proxy mode:\n[source,txt,subs=+quotes]\n----\n[2023-06-28T16:36:47,264][WARN ][o.e.t.ProxyConnectionStrategy] [local-node] failed to open any proxy connections to cluster [my]\norg.elasticsearch.transport.ConnectTransportException: [][192.168.0.42:9443] *connect_exception*\n----\n\nWhen the remote cluster is configured using sniff mode:\n[source,txt,subs=+quotes]\n----\n[2023-06-28T16:38:37,731][WARN ][o.e.t.SniffConnectionStrategy] [local-node] fetching nodes from external cluster [my] failed\norg.elasticsearch.transport.ConnectTransportException: [][192.168.0.42:9443] *connect_exception*\n----\n\n====== Resolution\n\n* Check the host and port for the remote cluster are correct.\n* Ensure the <<remote-clusters-troubleshooting-enable-server,remote cluster\nserver is enabled>> on the remote cluster.\n* Ensure no firewall is blocking the communication.\n\n[[remote-clusters-unreliable-network]]\n===== Remote cluster connection is unreliable\n\n====== Symptom\n\nThe local cluster can connect to the remote cluster, but the connection does\nnot work reliably. For example, some cross-cluster requests may succeed while\nothers report connection errors, time out, or appear to be stuck waiting for\nthe remote cluster to respond.\n\nWhen {es} detects that the remote cluster connection is not working, it will\nreport the following message in its logs:\n[source,txt,subs=+quotes]\n----\n[2023-06-28T16:36:47,264][INFO ][o.e.t.ClusterConnectionManager] [local-node] transport connection to [{my-remote#192.168.0.42:9443}{...}] closed by remote\n----\nThis message will also be logged if the node of the remote cluster to which\n{es} is connected is shut down or restarted.\n\nNote that with some network configurations it could take minutes or hours for\nthe operating system to detect that a connection has stopped working. Until the\nfailure is detected and reported to {es}, requests involving the remote cluster\nmay time out or may appear to be stuck.\n\n====== Resolution\n\n* Ensure that the network between the clusters is as reliable as possible.\n\n* Ensure that the network is configured to permit <<long-lived-connections>>.\n\n* Ensure that the network is configured to detect faulty connections quickly.\n  In particular, you must enable and fully support TCP keepalives, and set a\n  short <<system-config-tcpretries,retransmission timeout>>.\n\n* On Linux systems, execute `ss -tonie` to verify the details of the\n  configuration of each network connection between the clusters.\n\n* If the problems persist, capture network packets at both ends of the\n  connection and analyse the traffic to look for delays and lost messages.\n\n[[remote-clusters-troubleshooting-tls-trust]]\n===== TLS trust not established\n\nTLS can be misconfigured on the local or the remote cluster. The result is that\nthe local cluster does not trust the certificate presented by the remote\ncluster.\n\n====== Symptom\n\nThe local cluster logs `failed to establish trust with server`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-29T09:40:55,465][WARN ][o.e.c.s.DiagnosticTrustManager] [local-node] *failed to establish trust with server* at [192.168.0.42]; the server provided a certificate with subject name [CN=remote_cluster], fingerprint [529de35e15666ffaa26afa50876a2a48119db03a], no keyUsage and no extendedKeyUsage; the certificate is valid between [2023-01-29T12:08:37Z] and [2032-08-29T12:08:37Z] (current time is [2023-08-16T23:40:55.464275Z], certificate dates are valid); the session uses cipher suite [TLS_AES_256_GCM_SHA384] and protocol [TLSv1.3]; the certificate has subject alternative names [DNS:localhost,DNS:localhost6.localdomain6,IP:127.0.0.1,IP:0:0:0:0:0:0:0:1,DNS:localhost4,DNS:localhost6,DNS:localhost.localdomain,DNS:localhost4.localdomain4,IP:192.168.0.42]; the certificate is issued by [CN=Elastic Auto RemoteCluster CA] but the server did not provide a copy of the issuing certificate in the certificate chain; this ssl context ([(shared) (with trust configuration: JDK-trusted-certs)]) is not configured to trust that issuer but trusts [97] other issuers\nsun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n----\n\nThe remote cluster logs `client did not trust this server's certificate`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-29T09:40:55,478][WARN ][o.e.x.c.s.t.n.SecurityNetty4Transport] [remote-node] *client did not trust this server's certificate*, closing connection Netty4TcpChannel{localAddress=/192.168.0.42:9443, remoteAddress=/192.168.0.84:57305, profile=_remote_cluster}\n----\n\n====== Resolution\n\nRead the warn log message on the local cluster carefully to determine the exact\ncause of the failure. For example:\n\n* Is the remote cluster certificate not signed by a trusted CA? This is the most\nlikely cause.\n* Is hostname verification failing?\n* Is the certificate expired?\n\nOnce you know the cause, you should be able to fix it by adjusting the remote\ncluster related SSL settings on either the local cluster or the remote cluster.\n\nOften, the issue is on the local cluster. For example, fix it by configuring necessary\ntrusted CAs (`xpack.security.remote_cluster_client.ssl.certificate_authorities`).\n\nIf you change the `elasticsearch.yml` file, the associated cluster needs to be\nrestarted for the changes to take effect.\n\n[[remote-clusters-troubleshooting-api-key]]\n==== API key authentication issues\n\n[[remote-clusters-troubleshooting-transport-port-api-key]]\n===== Connecting to transport port when using API key authentication\n\nWhen using API key authentication, a local cluster should connect to a remote\ncluster's remote cluster server port (defaults to `9443`) instead of the\ntransport port (defaults to `9300`). A misconfiguration can lead to a number of\nsymptoms:\n\n====== Symptom 1\n\nIt's recommended to use different CAs and certificates for the transport\ninterface and the remote cluster server interface. If this recommendation is\nfollowed, a remote cluster client node does not trust the server certificate\npresented by a remote cluster on the transport interface.\n\nThe local cluster logs `failed to establish trust with server`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:48:46,575][WARN ][o.e.c.s.DiagnosticTrustManager] [local-node] *failed to establish trust with server* at [1192.168.0.42]; the server provided a certificate with subject name [CN=transport], fingerprint [c43e628be2a8aaaa4092b82d78f2bc206c492322], no keyUsage and no extendedKeyUsage; the certificate is valid between [2023-01-29T12:05:53Z] and [2032-08-29T12:05:53Z] (current time is [2023-06-28T02:48:46.574738Z], certificate dates are valid); the session uses cipher suite [TLS_AES_256_GCM_SHA384] and protocol [TLSv1.3]; the certificate has subject alternative names [DNS:localhost,DNS:localhost6.localdomain6,IP:127.0.0.1,IP:0:0:0:0:0:0:0:1,DNS:localhost4,DNS:localhost6,DNS:localhost.localdomain,DNS:localhost4.localdomain4,IP:192.168.0.42]; the certificate is issued by [CN=Elastic Auto Transport CA] but the server did not provide a copy of the issuing certificate in the certificate chain; this ssl context ([xpack.security.remote_cluster_client.ssl (with trust configuration: PEM-trust{/rcs2/ssl/remote-cluster-ca.crt})]) is not configured to trust that issuer, it only trusts the issuer [CN=Elastic Auto RemoteCluster CA] with fingerprint [ba2350661f66e46c746c1629f0c4b645a2587ff4]\nsun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n----\n\nThe remote cluster logs `client did not trust this server's certificate`:\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:48:46,584][WARN ][o.e.x.c.s.t.n.SecurityNetty4Transport] [remote-node] *client did not trust this server's certificate*, closing connection Netty4TcpChannel{localAddress=/192.168.0.42:9309, remoteAddress=/192.168.0.84:60810, profile=default}\n----\n\n====== Symptom 2\n\nThe CA and certificate can be shared between the transport and remote cluster\nserver interface. Since a remote cluster client does not have a client\ncertificate by default, the server will fail to verify the client certificate.\n\nThe local cluster logs `Received fatal alert: bad_certificate`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:43:30,705][WARN ][o.e.t.TcpTransport       ] [local-node] exception caught on transport layer [Netty4TcpChannel{localAddress=/192.168.0.84:60738, remoteAddress=/192.168.0.42:9309, profile=_remote_cluster}], closing connection\nio.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: *Received fatal alert: bad_certificate*\n----\n\nThe remote cluster logs `Empty client certificate chain`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:43:30,772][WARN ][o.e.t.TcpTransport       ] [remote-node] exception caught on transport layer [Netty4TcpChannel{localAddress=/192.168.0.42:9309, remoteAddress=/192.168.0.84:60783, profile=default}], closing connection\nio.netty.handler.codec.DecoderException: javax.net.ssl.SSLHandshakeException: *Empty client certificate chain*\n----\n\n====== Symptom 3\n\nIf the remote cluster client is configured for mTLS and provides a valid client\ncertificate, the connection fails because the client does not send the expected\nauthentication header.\n\nThe local cluster logs `missing authentication`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T13:04:52,710][WARN ][o.e.t.ProxyConnectionStrategy] [local-node] failed to open any proxy connections to cluster [my]\norg.elasticsearch.transport.RemoteTransportException: [remote-node][192.168.0.42:9309][cluster:internal/remote_cluster/handshake]\nCaused by: org.elasticsearch.ElasticsearchSecurityException: *missing authentication* credentials for action [cluster:internal/remote_cluster/handshake]\n----\n\nThis does not show up in the logs of the remote cluster.\n\n====== Symptom 4\n\nIf anonymous access is enabled on the remote cluster and it does not require\nauthentication, depending on the privileges of the anonymous user, the local\ncluster may log the following.\n\nIf the anonymous user does not the have necessary privileges to make a\nconnection, the local cluster logs `unauthorized`:\n\n[source,txt,subs=+quotes]\n----\norg.elasticsearch.transport.RemoteTransportException: [remote-node][192.168.0.42:9309][cluster:internal/remote_cluster/handshake]\nCaused by: org.elasticsearch.ElasticsearchSecurityException: action [cluster:internal/remote_cluster/handshake] is *unauthorized* for user [anonymous_foo] with effective roles [reporting_user], this action is granted by the cluster privileges [cross_cluster_search,cross_cluster_replication,manage,all]\n----\n\nIf the anonymous user has necessary privileges, for example it is a superuser,\nthe local cluster logs `requires channel profile to be [_remote_cluster],\nbut got [default]`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T13:09:52,031][WARN ][o.e.t.ProxyConnectionStrategy] [local-node] failed to open any proxy connections to cluster [my]\norg.elasticsearch.transport.RemoteTransportException: [remote-node][192.168.0.42:9309][cluster:internal/remote_cluster/handshake]\nCaused by: java.lang.IllegalArgumentException: remote cluster handshake action *requires channel profile to be [_remote_cluster], but got [default]*\n----\n\n====== Resolution\n\nCheck the port number and ensure you are indeed connecting to the remote cluster\nserver instead of the transport interface.\n\n[[remote-clusters-troubleshooting-no-api-key]]\n===== Connecting without a cross-cluster API key\n\nA local cluster uses the presence of a cross-cluster API key to determine the\nmodel with which it connects to a remote cluster. If a cross-cluster API key is\npresent, it uses API key based authentication. Otherwise, it uses certificate\nbased authentication. You can check what model is being used with the <<cluster-remote-info,remote cluster info API>> on the local cluster:\n\ninclude::remote-clusters-remote-info.asciidoc[]\n\nBesides checking the response of the remote cluster info API, you can also check\nthe logs.\n\n====== Symptom 1\n\nIf no cross-cluster API key is used, the local cluster uses the certificate\nbased authentication method, and connects to the remote cluster using the TLS\nconfiguration of the transport interface. If the remote cluster has different\nTLS CA and certificate for transport and remote cluster server interfaces (which\nis the recommendation), TLS verification will fail.\n\nThe local cluster logs `failed to establish trust with server`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:51:06,452][WARN ][o.e.c.s.DiagnosticTrustManager] [local-node] *failed to establish trust with server* at [<unknown host>]; the server provided a certificate with subject name [CN=remote_cluster], fingerprint [529de35e15666ffaa26afa50876a2a48119db03a], no keyUsage and no extendedKeyUsage; the certificate is valid between [2023-01-29T12:08:37Z] and [2032-08-29T12:08:37Z] (current time is [2023-06-28T02:51:06.451581Z], certificate dates are valid); the session uses cipher suite [TLS_AES_256_GCM_SHA384] and protocol [TLSv1.3]; the certificate has subject alternative names [DNS:localhost,DNS:localhost6.localdomain6,IP:127.0.0.1,IP:0:0:0:0:0:0:0:1,DNS:localhost4,DNS:localhost6,DNS:localhost.localdomain,DNS:localhost4.localdomain4,IP:192.168.0.42]; the certificate is issued by [CN=Elastic Auto RemoteCluster CA] but the server did not provide a copy of the issuing certificate in the certificate chain; this ssl context ([xpack.security.transport.ssl (with trust configuration: PEM-trust{/rcs2/ssl/transport-ca.crt})]) is not configured to trust that issuer, it only trusts the issuer [CN=Elastic Auto Transport CA] with fingerprint [bbe49e3f986506008a70ab651b188c70df104812]\nsun.security.validator.ValidatorException: PKIX path building failed: sun.security.provider.certpath.SunCertPathBuilderException: unable to find valid certification path to requested target\n----\n\nThe remote cluster logs `client did not trust this server's certificate`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T12:52:16,914][WARN ][o.e.x.c.s.t.n.SecurityNetty4Transport] [remote-node] *client did not trust this server's certificate*, closing connection Netty4TcpChannel{localAddress=/192.168.0.42:9443, remoteAddress=/192.168.0.84:60981, profile=_remote_cluster}\n----\n\n====== Symptom 2\n\nEven if TLS verification is not an issue, the connection fails due to missing\ncredentials.\n\nThe local cluster logs `Please ensure you have configured remote cluster credentials`:\n\n[source,txt,subs=+quotes]\n----\nCaused by: java.lang.IllegalArgumentException: Cross cluster requests through the dedicated remote cluster server port require transport header [_cross_cluster_access_credentials] but none found. *Please ensure you have configured remote cluster credentials* on the cluster originating the request.\n----\n\nThis does not show up in the logs of the remote cluster.\n\n====== Resolution\n\nAdd the cross-cluster API key to {es} keystore on every node of the local\ncluster. Use the <<cluster-nodes-reload-secure-settings>> API to reload the keystore.\n\n[[remote-clusters-troubleshooting-wrong-api-key-type]]\n===== Using the wrong API key type\n\nAPI key based authentication requires\n<<security-api-create-cross-cluster-api-key,cross-cluster API keys>>. It does\nnot work with <<security-api-create-api-key,REST API keys>>.\n\n====== Symptom\n\nThe local cluster logs `authentication expected API key type of [cross_cluster]`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T13:26:53,962][WARN ][o.e.t.ProxyConnectionStrategy] [local-node] failed to open any proxy connections to cluster [my]\norg.elasticsearch.transport.RemoteTransportException: [remote-node][192.168.0.42:9443][cluster:internal/remote_cluster/handshake]\nCaused by: org.elasticsearch.ElasticsearchSecurityException: *authentication expected API key type of [cross_cluster]*, but API key [agZXJocBmA2beJfq2yKu] has type [rest]\n----\n\nThis does not show up in the logs of the remote cluster.\n\n====== Resolution\n\nAsk the remote cluster administrator to create and distribute a\n<<security-api-create-cross-cluster-api-key,cross-cluster API key>>. Replace the\nexisting API key in the {es} keystore with this cross-cluster API key on every\nnode of the local cluster. Use the <<cluster-nodes-reload-secure-settings>> API to reload the keystore.\n\n[[remote-clusters-troubleshooting-non-valid-api-key]]\n===== Invalid API key\n\nA cross-cluster API can fail to authenticate. For example, when its credentials\nare incorrect, or if it's invalidated or expired.\n\n====== Symptom\n\nThe local cluster logs `unable to authenticate`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T13:22:58,264][WARN ][o.e.t.ProxyConnectionStrategy] [local-node] failed to open any proxy connections to cluster [my]\norg.elasticsearch.transport.RemoteTransportException: [remote-node][192.168.0.42:9443][cluster:internal/remote_cluster/handshake]\nCaused by: org.elasticsearch.ElasticsearchSecurityException: *unable to authenticate* user [agZXJocBmA2beJfq2yKu] for action [cluster:internal/remote_cluster/handshake]\n----\n\nThe remote cluster logs `Authentication using apikey failed`:\n\n[source,txt,subs=+quotes]\n----\n[2023-06-28T13:24:38,744][WARN ][o.e.x.s.a.ApiKeyAuthenticator] [remote-node] *Authentication using apikey failed* - invalid credentials for API key [agZXJocBmA2beJfq2yKu]\n----\n\n====== Resolution\n\nAsk the remote cluster administrator to create and distribute a\n<<security-api-create-cross-cluster-api-key,cross-cluster API key>>. Replace the\nexisting API key in the {es} keystore with this cross-cluster API key on every\nnode of the local cluster. Use the <<cluster-nodes-reload-secure-settings>> API to reload the keystore.\n\n[[remote-clusters-troubleshooting-insufficient-privileges]]\n===== API key or local user has insufficient privileges\n\nThe effective permission for a local user running requests on a remote cluster\nis determined by the intersection of the cross-cluster API key's privileges and\nthe local user's `remote_indices` privileges.\n\n====== Symptom\n\nRequest failures due to insufficient privileges result in API responses like:\n\n[source,js,subs=+quotes]\n----\n{\n    \"type\": \"security_exception\",\n    \"reason\": \"action [indices:data/read/search] towards remote cluster is *unauthorized for user* [foo] with assigned roles [foo-role] authenticated by API key id [agZXJocBmA2beJfq2yKu] of user [elastic-admin] on indices [cd], this action is granted by the index privileges [read,all]\"\n}\n----\n// NOTCONSOLE\n\nThis does not show up in any logs.\n\n====== Resolution\n\n. Check that the local user has the necessary `remote_indices` privileges. Grant sufficient `remote_indices` privileges if necessary.\n. If permission is not an issue locally, ask the remote cluster administrator to\ncreate and distribute a\n<<security-api-create-cross-cluster-api-key,cross-cluster API key>>. Replace the\nexisting API key in the {es} keystore with this cross-cluster API key on every\nnode of the local cluster. Use the <<cluster-nodes-reload-secure-settings>> API to reload the keystore.\n\n[[remote-clusters-troubleshooting-no-remote_indices-privileges]]\n===== Local user has no `remote_indices` privileges\n\nThis is a special case of insufficient privileges. In this case, the local user\nhas no `remote_indices` privileges at all for the target remote cluster. {es}\ncan detect that and issue a more explicit error response.\n\n====== Symptom\n\nThis results in API responses like:\n\n[source,js,subs=+quotes]\n----\n{\n    \"type\": \"security_exception\",\n    \"reason\": \"action [indices:data/read/search] towards remote cluster [my] is unauthorized for user [foo] with effective roles [] (assigned roles [foo-role] were not found) because *no remote indices privileges apply for the target cluster*\"\n}\n----\n// NOTCONSOLE\n\n====== Resolution\n\nGrant sufficient `remote_indices` privileges to the local user.\n"
}