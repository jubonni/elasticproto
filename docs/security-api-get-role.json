{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.263068",
        "size": 2769,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-role.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-api-get-role",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-get-role]]\n=== Get roles API\n++++\n<titleabbrev>Get roles</titleabbrev>\n++++\n\nRetrieves roles in the native realm.\n\n[[security-api-get-role-request]]\n==== {api-request-title}\n\n`GET /_security/role` +\n\n`GET /_security/role/<name>` +\n\n[[security-api-get-role-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have at least the `read_security` cluster privilege.\n\n[[security-api-get-role-desc]]\n==== {api-description-title}\n\nThe role management APIs are generally the preferred way to manage roles, rather than using\n<<roles-management-file,file-based role management>>. The get roles\nAPI cannot retrieve roles that are defined in roles files.\n\n[[security-api-get-role-path-params]]\n==== {api-path-parms-title}\n\n`name`::\n  (Optional, string) The name of the role. You can specify multiple roles as a\n  comma-separated list. If you do not specify this parameter, the API\n  returns information about all roles.\n\n[[security-api-get-role-response-body]]\n==== {api-response-body-title}\n\nA successful call returns an array of roles with the JSON representation of the\nrole. The returned role format is a simple extension of the <<defining-roles,role definition>> format,\nonly adding an extra field `transient_metadata.enabled`.\nThis field is `false` in case the role is automatically disabled, for example when the license\nlevel does not allow some permissions that the role grants.\n\n[[security-api-get-role-response-codes]]\n==== {api-response-codes-title}\n\nIf the role is not defined in the native realm, the request returns 404.\n\n[[security-api-get-role-example]]\n==== {api-examples-title}\n\nThe following example retrieves information about the `my_admin_role` role in\nthe native realm:\n\n[source,console]\n--------------------------------------------------\nGET /_security/role/my_admin_role\n--------------------------------------------------\n// TEST[setup:admin_role]\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"my_admin_role\": {\n    \"description\": \"Grants full access to all management features within the cluster.\",\n    \"cluster\" : [ \"all\" ],\n    \"indices\" : [\n      {\n        \"names\" : [ \"index1\", \"index2\" ],\n        \"privileges\" : [ \"all\" ],\n        \"allow_restricted_indices\" : false,\n        \"field_security\" : {\n          \"grant\" : [ \"title\", \"body\" ]}\n      }\n    ],\n    \"applications\" : [ ],\n    \"run_as\" : [ \"other_user\" ],\n    \"metadata\" : {\n      \"version\" : 1\n    },\n    \"transient_metadata\": {\n      \"enabled\": true\n    }\n  }\n}\n--------------------------------------------------\n\nTo retrieve all roles, omit the role name:\n\n[source,console]\n--------------------------------------------------\nGET /_security/role\n--------------------------------------------------\n// TEST[continued]\n\n"
}