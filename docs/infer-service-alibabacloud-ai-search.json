{
    "meta": {
        "size": 7341,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/infer-service-alibabacloud-ai-search.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "infer-service-alibabacloud-ai-search",
        "version": "8.15"
    },
    "doc": "[[infer-service-alibabacloud-ai-search]]\n=== AlibabaCloud AI Search {infer} service\n\nCreates an {infer} endpoint to perform an {infer} task with the `alibabacloud-ai-search` service.\n\n[discrete]\n[[infer-service-alibabacloud-ai-search-api-request]]\n==== {api-request-title}\n\n`PUT /_inference/<task_type>/<inference_id>`\n\n[discrete]\n[[infer-service-alibabacloud-ai-search-api-path-params]]\n==== {api-path-parms-title}\n\n`<inference_id>`::\n(Required, string)\ninclude::inference-shared.asciidoc[tag=inference-id]\n\n`<task_type>`::\n(Required, string)\ninclude::inference-shared.asciidoc[tag=task-type]\n+\n--\nAvailable task types:\n\n* `completion`,\n* `rerank`\n* `sparse_embedding`,\n* `text_embedding`.\n--\n\n[discrete]\n[[infer-service-alibabacloud-ai-search-api-request-body]]\n==== {api-request-body-title}\n\n`chunking_settings`::\n(Optional, object)\ninclude::inference-shared.asciidoc[tag=chunking-settings]\n\n`max_chunking_size`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-max-chunking-size]\n\n`overlap`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-overlap]\n\n`sentence_overlap`:::\n(Optional, integer)\ninclude::inference-shared.asciidoc[tag=chunking-settings-sentence-overlap]\n\n`strategy`:::\n(Optional, string)\ninclude::inference-shared.asciidoc[tag=chunking-settings-strategy]\n\n`service`::\n(Required, string) The type of service supported for the specified task type.\nIn this case,\n`alibabacloud-ai-search`.\n\n`service_settings`::\n(Required, object)\ninclude::inference-shared.asciidoc[tag=service-settings]\n+\n--\nThese settings are specific to the `alibabacloud-ai-search` service.\n--\n\n`api_key`:::\n(Required, string)\nA valid API key for the AlibabaCloud AI Search API.\n\n`service_id`:::\n(Required, string)\nThe name of the model service to use for the {infer} task.\n+\n--\nAvailable service_ids for the `completion` task:\n\n* `ops-qwen-turbo`\n* `qwen-turbo`\n* `qwen-plus`\n* `qwen-max`\n\u00f7 `qwen-max-longcontext`\n\nFor the supported `completion` service_ids, refer to the https://help.aliyun.com/zh/open-search/search-platform/developer-reference/text-generation-api-details[documentation].\n\nAvailable service_id for the `rerank` task is:\n\n* `ops-bge-reranker-larger`\n\nFor the supported `rerank` service_id, refer to the https://help.aliyun.com/zh/open-search/search-platform/developer-reference/ranker-api-details[documentation].\n\nAvailable service_id for the `sparse_embedding` task:\n\n* `ops-text-sparse-embedding-001`\n\nFor the supported `sparse_embedding` service_id, refer to the https://help.aliyun.com/zh/open-search/search-platform/developer-reference/text-sparse-embedding-api-details[documentation].\n\nAvailable service_ids for the `text_embedding` task:\n\n* `ops-text-embedding-001`\n* `ops-text-embedding-zh-001`\n* `ops-text-embedding-en-001`\n* `ops-text-embedding-002`\n\nFor the supported `text_embedding` service_ids, refer to the https://help.aliyun.com/zh/open-search/search-platform/developer-reference/text-embedding-api-details[documentation].\n\n--\n\n`host`:::\n(Required, string)\nThe name of the host address used for the {infer} task.\nYou can find the host address at https://opensearch.console.aliyun.com/cn-shanghai/rag/api-key[the API keys section] of the documentation.\n\n`workspace`:::\n(Required, string)\nThe name of the workspace used for the {infer} task.\n\n`rate_limit`:::\n(Optional, object)\nBy default, the `alibabacloud-ai-search` service sets the number of requests allowed per minute to `1000`.\nThis helps to minimize the number of rate limit errors returned from AlibabaCloud AI Search.\nTo modify this, set the `requests_per_minute` setting of this object in your service settings:\n+\n--\ninclude::inference-shared.asciidoc[tag=request-per-minute-example]\n--\n\n`task_settings`::\n(Optional, object)\ninclude::inference-shared.asciidoc[tag=task-settings]\n+\n.`task_settings` for the `text_embedding` task type\n[%collapsible%closed]\n=====\n`input_type`:::\n(Optional, string)\nSpecifies the type of input passed to the model.\nValid values are:\n* `ingest`: for storing document embeddings in a vector database.\n* `search`: for storing embeddings of search queries run against a vector database to find relevant documents.\n=====\n+\n.`task_settings` for the `sparse_embedding` task type\n[%collapsible%closed]\n=====\n`input_type`:::\n(Optional, string)\nSpecifies the type of input passed to the model.\nValid values are:\n* `ingest`: for storing document embeddings in a vector database.\n* `search`: for storing embeddings of search queries run against a vector database to find relevant documents.\n\n`return_token`:::\n(Optional, boolean)\nIf `true`, the token name will be returned in the response. Defaults to `false` which means only the token ID will be returned in the response.\n=====\n\n[discrete]\n[[inference-example-alibabacloud-ai-search]]\n==== AlibabaCloud AI Search service examples\n\nThe following example shows how to create an {infer} endpoint called `alibabacloud_ai_search_completion` to perform a `completion` task type.\n\n[source,console]\n------------------------------------------------------------\nPUT _inference/completion/alibabacloud_ai_search_completion\n{\n    \"service\": \"alibabacloud-ai-search\",\n    \"service_settings\": {\n        \"host\" : \"default-j01.platform-cn-shanghai.opensearch.aliyuncs.com\",\n        \"api_key\": \"{{API_KEY}}\",\n        \"service_id\": \"ops-qwen-turbo\",\n        \"workspace\" : \"default\"\n    }\n}\n------------------------------------------------------------\n// TEST[skip:TBD]\n\n\nThe next example shows how to create an {infer} endpoint called `alibabacloud_ai_search_rerank` to perform a `rerank` task type.\n\n[source,console]\n------------------------------------------------------------\nPUT _inference/rerank/alibabacloud_ai_search_rerank\n{\n    \"service\": \"alibabacloud-ai-search\",\n    \"service_settings\": {\n        \"api_key\": \"<api_key>\",\n        \"service_id\": \"ops-bge-reranker-larger\",\n        \"host\": \"default-j01.platform-cn-shanghai.opensearch.aliyuncs.com\",\n        \"workspace\": \"default\"\n    }\n}\n------------------------------------------------------------\n// TEST[skip:TBD]\n\n\nThe following example shows how to create an {infer} endpoint called `alibabacloud_ai_search_sparse` to perform a `sparse_embedding` task type.\n\n[source,console]\n------------------------------------------------------------\nPUT _inference/sparse_embedding/alibabacloud_ai_search_sparse\n{\n    \"service\": \"alibabacloud-ai-search\",\n    \"service_settings\": {\n        \"api_key\": \"<api_key>\",\n        \"service_id\": \"ops-text-sparse-embedding-001\",\n        \"host\": \"default-j01.platform-cn-shanghai.opensearch.aliyuncs.com\",\n        \"workspace\": \"default\"\n    }\n}\n------------------------------------------------------------\n// TEST[skip:TBD]\n\n\nThe following example shows how to create an {infer} endpoint called `alibabacloud_ai_search_embeddings` to perform a `text_embedding` task type.\n\n[source,console]\n------------------------------------------------------------\nPUT _inference/text_embedding/alibabacloud_ai_search_embeddings\n{\n    \"service\": \"alibabacloud-ai-search\",\n    \"service_settings\": {\n        \"api_key\": \"<api_key>\",\n        \"service_id\": \"ops-text-embedding-001\",\n        \"host\": \"default-j01.platform-cn-shanghai.opensearch.aliyuncs.com\",\n        \"workspace\": \"default\"\n    }\n}\n------------------------------------------------------------\n// TEST[skip:TBD]\n\n\n\n"
}