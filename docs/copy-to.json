{
    "meta": {
        "timestamp": "2024-11-01T03:07:08.993287",
        "size": 4465,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/copy-to.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "copy-to",
        "version": "8.15"
    },
    "doc": "[[copy-to]]\n=== `copy_to`\n\nThe `copy_to` parameter allows you to copy the values of multiple\nfields into a group field, which can then be queried as a single\nfield.\n\nTIP: If you often search multiple fields, you can improve search speeds by using\n`copy_to` to search fewer fields. See <<search-as-few-fields-as-possible>>.\n\nFor example, the `first_name` and `last_name` fields can be copied to\nthe `full_name` field as follows:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"first_name\": {\n        \"type\": \"text\",\n        \"copy_to\": \"full_name\" <1>\n      },\n      \"last_name\": {\n        \"type\": \"text\",\n        \"copy_to\": \"full_name\" <1>\n      },\n      \"full_name\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  \"first_name\": \"John\",\n  \"last_name\": \"Smith\"\n}\n\nGET my-index-000001/_search\n{\n  \"query\": {\n    \"match\": {\n      \"full_name\": { <2>\n        \"query\": \"John Smith\",\n        \"operator\": \"and\"\n      }\n    }\n  }\n}\n\n--------------------------------------------------\n\n<1>  The values of the `first_name` and `last_name` fields are copied to the\n     `full_name` field.\n\n<2>  The `first_name` and `last_name` fields can still be queried for the\n     first name and last name respectively, but the `full_name` field can be\n     queried for both first and last names.\n\nSome important points:\n\n* It is the field _value_ which is copied, not the terms (which result from the analysis process).\n* The original <<mapping-source-field,`_source`>> field will not be modified to show the copied values.\n* The same value can be copied to multiple fields, with `\"copy_to\": [ \"field_1\", \"field_2\" ]`\n* You cannot copy recursively using intermediary fields.\nThe following configuration will not copy data from `field_1` to `field_3`:\n+\n[source,console]\n----\nPUT bad_example_index\n{\n  \"mappings\": {\n    \"properties\": {\n      \"field_1\": {\n        \"type\": \"text\",\n        \"copy_to\": \"field_2\"\n      },\n      \"field_2\": {\n        \"type\": \"text\",\n        \"copy_to\": \"field_3\"\n      },\n      \"field_3\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n----\nInstead, copy to multiple fields from the source field:\n+\n[source,console]\n----\nPUT good_example_index\n{\n  \"mappings\": {\n    \"properties\": {\n      \"field_1\": {\n        \"type\": \"text\",\n        \"copy_to\": [\"field_2\", \"field_3\"]\n      },\n      \"field_2\": {\n        \"type\": \"text\"\n      },\n      \"field_3\": {\n        \"type\": \"text\"\n      }\n    }\n  }\n}\n----\n\nNOTE: `copy_to` is not supported for field types where values take the form of objects, e.g. `date_range`.\n\n[float]\n[[copy-to-dynamic-mapping]]\n==== Dynamic mapping\n\nConsider the following points when using `copy_to` with dynamic mappings:\n\n* If the target field does not exist in the index mappings, the usual\n<<dynamic-mapping,dynamic mapping>> behavior applies. By default, with\n<<dynamic,`dynamic`>> set to `true`, a non-existent target field will be\ndynamically added to the index mappings.\n* If `dynamic` is set to `false`, the\ntarget field will not be added to the index mappings, and the value will not be\ncopied.\n* If `dynamic` is set to `strict`, copying to a non-existent field will\nresult in an error.\n+\n** If the target field is nested, then `copy_to` fields must specify the full path to the nested field.\nOmitting the full path will lead to a `strict_dynamic_mapping_exception`.\nUse `\"copy_to\": [\"parent_field.child_field\"]` to correctly target a nested field.\n+\nFor example:\n+\n[source,console]\n--------------------------------------------------\nPUT /test_index\n{\n  \"mappings\": {\n    \"dynamic\": \"strict\",\n    \"properties\": {\n      \"description\": {\n        \"properties\": {\n          \"notes\": {\n            \"type\": \"text\",\n            \"copy_to\": [ \"description.notes_raw\"], <1>\n            \"analyzer\": \"standard\",\n            \"search_analyzer\": \"standard\"\n          },\n          \"notes_raw\": {\n            \"type\": \"keyword\"\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The `notes` field is copied to the `notes_raw` field. Targeting `notes_raw` alone instead of `description.notes_raw`\nwould lead to a `strict_dynamic_mapping_exception`.\n+\nIn this example, `notes_raw` is not defined at the root of the mapping, but under the `description` field.\nWithout the fully qualified path, {es} would interpret the `copy_to` target as a root-level field, not as a nested field under `description`. "
}