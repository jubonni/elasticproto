{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.396068",
        "size": 4953,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/service-tokens-command.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "service-tokens-command",
        "version": "8.15"
    },
    "doc": "[[service-tokens-command]]\n== elasticsearch-service-tokens\n\nUse the `elasticsearch-service-tokens` command to create, list, and delete file-based service account tokens.\n\n[discrete]\n=== Synopsis\n\n[source,shell]\n----\nbin/elasticsearch-service-tokens\n([create <service_account_principal> <token_name>]) |\n([list] [<service_account_principal>]) |\n([delete <service_account_principal> <token_name>])\n----\n\n[discrete]\n=== Description\n\nNOTE: The recommended way to manage <<service-accounts-tokens,service tokens>>\nis via the <<security-api-create-service-token>> API.\nFile based tokens are intended for use with orchestrators such as\n{ece-ref}[{ece}] and {eck-ref}[{eck}]\n\nThis command creates a `service_tokens` file in the `$ES_HOME/config` directory\nwhen you create the first service account token. This file does not exist by\ndefault. {es} monitors this file for changes and dynamically reloads it.\n\nThis command only makes changes to the `service_tokens` file on the local node.\nIf the service token will be used to authenticate requests against multiple nodes\nin the cluster then you must copy the `service_tokens` file to each node.\n\nSee <<service-accounts,service accounts>> for further information about the\nbehaviour of service accounts and the management of service tokens.\n\nIMPORTANT: To ensure that {es} can read the service account token information at\nstartup, run `elasticsearch-service-tokens` as the same user you use to run\n{es}. Running this command as `root` or some other user updates the permissions\nfor the `service_tokens` file and prevents {es} from accessing it.\n\n[discrete]\n[[service-tokens-command-parameters]]\n=== Parameters\n\n`create`::\nCreates a service account token for the specified service account.\n+\n.Properties of `create`\n[%collapsible%open]\n====\n`<service_account_principal>`:::\n(Required, string) Service account principal that takes the format of\n`<namespace>/<service>`, where the `namespace` is a top-level grouping of\nservice accounts, and `service` is the name of the service. For example, `elastic/fleet-server`.\n+\nThe service account principal must match a known service account.\n\n`<token_name>`:::\n(Required, string) An identifier for the token name.\n+\n--\nToken names must be at least 1 and no more than 256 characters. They can contain\nalphanumeric characters (`a-z`, `A-Z`, `0-9`), dashes (`-`), and underscores\n(`_`), but cannot begin with an underscore.\n\nNOTE: Token names must be unique in the context of the associated service\naccount.\n--\n====\n\n`list`::\nLists all service account tokens defined in the `service_tokens` file. If you\nspecify a service account principal, the command lists only the tokens that\nbelong to the specified service account.\n+\n.Properties of `list`\n[%collapsible%open]\n====\n`<service_account_principal>`:::\n(Optional, string) Service account principal that takes the format of\n`<namespace>/<service>`, where the `namespace` is a top-level grouping of\nservice accounts, and `service` is the name of the service. For example, `elastic/fleet-server`.\n+\nThe service account principal must match a known service account.\n====\n\n`delete`::\nDeletes a service account token for the specified service account.\n+\n.Properties of `delete`\n[%collapsible%open]\n====\n`<service_account_principal>`:::\n(Required, string) Service account principal that takes the format of\n`<namespace>/<service>`, where the `namespace` is a top-level grouping of\nservice accounts, and `service` is the name of the service. For example, `elastic/fleet-server`.\n+\nThe service account principal must match a known service account.\n====\n\n`<token_name>`:::\n(Required, string) Name of an existing token.\n\n[discrete]\n=== Examples\n\nThe following command creates a service account token named `my-token` for\nthe `elastic/fleet-server` service account.\n\n[source,shell]\n----\nbin/elasticsearch-service-tokens create elastic/fleet-server my-token\n----\n\nThe output is a bearer token, which is a Base64 encoded string.\n\n[source,shell]\n----\nSERVICE_TOKEN elastic/fleet-server/my-token = AAEAAWVsYXN0aWM...vZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZ\n----\n\nUse this bearer token to authenticate with your {es} cluster.\n\n[source,shell]\n----\ncurl -H \"Authorization: Bearer AAEAAWVsYXN0aWM...vZmxlZXQtc2VydmVyL3Rva2VuMTo3TFdaSDZ\" http://localhost:9200/_cluster/health\n----\n// NOTCONSOLE\n\nNOTE: If your node has `xpack.security.http.ssl.enabled` set to `true`, then\nyou must specify `https` in the request URL.\n\nThe following command lists all service account tokens that are defined in the\n`service_tokens` file.\n\n[source,shell]\n----\nbin/elasticsearch-service-tokens list\n----\n\nA list of all service account tokens displays in your terminal:\n\n[source,txt]\n----\nelastic/fleet-server/my-token\nelastic/fleet-server/another-token\n----\n\nThe following command deletes the `my-token` service account token for the\n`elastic/fleet-server` service account:\n\n[source,shell]\n----\nbin/elasticsearch-service-tokens delete elastic/fleet-server my-token\n----\n"
}