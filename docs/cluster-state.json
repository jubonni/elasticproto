{
    "meta": {
        "size": 5432,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-state.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "cluster-state",
        "version": "8.15"
    },
    "doc": "[[cluster-state]]\n=== Cluster state API\n++++\n<titleabbrev>Cluster state</titleabbrev>\n++++\n\nReturns an internal representation of the cluster state for debugging or\ndiagnostic purposes.\n\n[[cluster-state-api-request]]\n==== {api-request-title}\n\n`GET /_cluster/state/<metrics>/<target>`\n\n[[cluster-state-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `monitor` or\n`manage` <<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[cluster-state-api-desc]]\n==== {api-description-title}\n\nThe _cluster state_ is an internal data structure which keeps track of a\nvariety of information needed by every node, including:\n\n* The identity and attributes of the other nodes in the cluster\n\n* Cluster-wide settings\n\n* Index metadata, including the mapping and settings for each index\n\n* The location and status of every shard copy in the cluster\n\nThe elected master node ensures that every node in the cluster has a copy of\nthe same cluster state. The cluster state API lets you retrieve a\nrepresentation of this internal state for debugging or diagnostic purposes. You\nmay need to consult the {es} source code to determine the precise meaning of\nthe response.\n\nBy default the cluster state API will route requests to the elected master node\nsince this node is the authoritative source of cluster states. You can also\nretrieve the cluster state held on the node handling the API request by adding\nthe query parameter `?local=true`.\n\n{es} may need to expend significant effort to compute a response to this API in\nlarger clusters, and the response may comprise a very large quantity of data.\nIf you use this API repeatedly, your cluster may become unstable.\n\n[[cluster-state-api-unstable-warning]]\nWARNING: The response is a representation of an internal data structure. Its\nformat is not subject to the same compatibility guarantees as other more stable\nAPIs and may change from version to version. **Do not query this API using\nexternal monitoring tools.** Instead, obtain the information you require using\nother more stable <<cluster,cluster APIs>>.\n\n[[cluster-state-api-path-params]]\n==== {api-path-parms-title}\n\nThe cluster state can sometimes be very large, and {es} may consume significant\nresources while computing a response to this API. To reduce the size of the\nresponse, you can request only the part of the cluster state in which you are\ninterested:\n\n`<metrics>`::\n    (Optional, string) A comma-separated list of the following options:\n+\n--\n  `_all`::\n      Shows all metrics.\n    \n  `blocks`::\n      Shows the `blocks` part of the response.\n\n  `master_node`::\n      Shows the `master_node` part of the response.\n    \n  `metadata`::\n      Shows the `metadata` part of the response. If you supply a comma separated\n      list of indices, the returned output will only contain metadata for these\n      indices.\n\n  `nodes`::\n      Shows the `nodes` part of the response.\n\n  `routing_nodes`::\n      Shows the `routing_nodes` part of the response.\n\n  `routing_table`::\n      Shows the `routing_table` part of the response. If you supply a comma\n      separated list of indices, the returned output will only contain the \n      routing table for these indices.\n    \n  `version`::\n      Shows the cluster state version.\n--\n\n`<target>`::\n(Optional, string) Comma-separated list of data streams, indices, and aliases\nused to limit the request. Supports wildcards (`*`). To target all data streams\nand indices, omit this parameter or use `*` or `_all`.\n\n[[cluster-state-api-query-params]]\n==== {api-query-parms-title}\n\n`allow_no_indices`::\n    (Optional, Boolean) If `true`, the wildcard indices expression that resolves \n    into no concrete indices will be ignored. (This includes `_all` string or \n    when no indices have been specified).\n+\nDefaults to `true`.\n\n`expand_wildcards`::\n    (Optional, string) Whether to expand wildcard expression to concrete indices \n    that are open, closed or both. Available options: `open`, `closed`, `none`, \n    `all`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=flat-settings]\n    \n`ignore_unavailable`::\n    (Optional, Boolean) If `true`, unavailable indices (missing or closed) will \n    be ignored.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=local]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n`wait_for_metadata_version`::\n    (Optional, integer) Waits for the metadata version to be equal or greater \n    than the specified metadata version.\n    \n`wait_for_timeout`::\n    (Optional, <<time-units, time units>>) Specifies the maximum time to wait \n    for wait_for_metadata_version before timing out.\n\n\n[[cluster-state-api-example]]\n==== {api-examples-title}\n\nThe following example returns only `metadata` and `routing_table` data for the\n`foo` and `bar` data streams or indices:\n\n[source,console]\n--------------------------------------------------\nGET /_cluster/state/metadata,routing_table/foo,bar\n--------------------------------------------------\n\nThe next example returns all available metadata for `foo` and `bar`:\n\n[source,console]\n--------------------------------------------------\nGET /_cluster/state/_all/foo,bar\n--------------------------------------------------\n\nThis example returns only the `blocks` metadata:\n\n[source,console]\n--------------------------------------------------\nGET /_cluster/state/blocks\n--------------------------------------------------\n"
}