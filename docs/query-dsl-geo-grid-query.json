{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.588579",
        "size": 7877,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-geo-grid-query.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-geo-grid-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-geo-grid-query]]\n=== Geo-grid query\n++++\n<titleabbrev>Geo-grid</titleabbrev>\n++++\n\nMatches <<geo-point,`geo_point`>> and <<geo-shape,`geo_shape`>> values that\nintersect a grid cell from a GeoGrid aggregation.\n\nThe query is designed to match the documents that fall inside a bucket of a geogrid aggregation by\nproviding the key of the bucket. For geohash and geotile grids, the query can be used for geo_point\nand geo_shape fields. For geo_hex grid, it can only be used for geo_point fields.\n\n[discrete]\n[[geo-grid-query-ex]]\n==== Example\nAssume the following the following documents are indexed:\n\n[source,console]\n--------------------------------------------------\nPUT /my_locations\n{\n  \"mappings\": {\n    \"properties\": {\n      \"location\": {\n        \"type\": \"geo_point\"\n      }\n    }\n  }\n}\n\nPUT /my_locations/_doc/1?refresh\n{\n  \"location\" : \"POINT(4.912350 52.374081)\",\n  \"city\": \"Amsterdam\",\n  \"name\": \"NEMO Science Museum\"\n}\n\nPUT /my_locations/_doc/2?refresh\n{\n  \"location\" : \"POINT(4.405200 51.222900)\",\n  \"city\": \"Antwerp\",\n  \"name\": \"Letterenhuis\"\n}\n\nPUT /my_locations/_doc/3?refresh\n{\n  \"location\" : \"POINT(2.336389 48.861111)\",\n  \"city\": \"Paris\",\n  \"name\": \"Mus\u00e9e du Louvre\"\n}\n\n--------------------------------------------------\n// TESTSETUP\n\n[[query-dsl-geo-grid-query-geohash]]\n==== geohash grid\n\nUsing a geohash_grid aggregation, it is possible to group documents depending on their geohash value:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"size\" : 0,\n  \"aggs\" : {\n     \"grouped\" : {\n        \"geohash_grid\" : {\n           \"field\" : \"location\",\n           \"precision\" : 2\n        }\n     }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 10,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 3,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"grouped\" : {\n      \"buckets\" : [\n        {\n          \"key\" : \"u1\",\n          \"doc_count\" : 2\n        },\n        {\n          \"key\" : \"u0\",\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 10/\"took\" : $body.took/]\n\nWe can extract the documents on one of those buckets by executing a geo_grid query\nusing the bucket key with the following syntax:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"geo_grid\" :{\n      \"location\" : {\n        \"geohash\" : \"u0\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 1,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : 1.0,\n    \"hits\" : [\n      {\n        \"_index\" : \"my_locations\",\n        \"_id\" : \"3\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"location\" : \"POINT(2.336389 48.861111)\",\n          \"city\" : \"Paris\",\n          \"name\" : \"Mus\u00e9e du Louvre\"\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 1/\"took\" : $body.took/]\n\n\n[[query-dsl-geo-grid-query-geotile]]\n==== geotile grid\n\nUsing a geotile_grid aggregation, it is possible to group documents depending on their geotile value:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"size\" : 0,\n  \"aggs\" : {\n     \"grouped\" : {\n        \"geotile_grid\" : {\n           \"field\" : \"location\",\n           \"precision\" : 6\n        }\n     }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 3,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"grouped\" : {\n      \"buckets\" : [\n        {\n          \"key\" : \"6/32/21\",\n          \"doc_count\" : 2\n        },\n        {\n          \"key\" : \"6/32/22\",\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 1/\"took\" : $body.took/]\n\nWe can extract the documents on one of those buckets by executing a geo_grid query\nusing the bucket key with the following syntax:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"geo_grid\" :{\n      \"location\" : {\n        \"geotile\" : \"6/32/22\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 1,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 1,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : 1.0,\n    \"hits\" : [\n      {\n        \"_index\" : \"my_locations\",\n        \"_id\" : \"3\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"location\" : \"POINT(2.336389 48.861111)\",\n          \"city\" : \"Paris\",\n          \"name\" : \"Mus\u00e9e du Louvre\"\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 1/\"took\" : $body.took/]\n\n\n[[query-dsl-geo-grid-query-geohex]]\n==== geohex grid\n\nUsing a geohex_grid aggregation, it is possible to group documents depending on their geohex value:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"size\" : 0,\n  \"aggs\" : {\n     \"grouped\" : {\n        \"geohex_grid\" : {\n           \"field\" : \"location\",\n           \"precision\" : 1\n        }\n     }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 2,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 3,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : null,\n    \"hits\" : [ ]\n  },\n  \"aggregations\" : {\n    \"grouped\" : {\n      \"buckets\" : [\n        {\n          \"key\" : \"81197ffffffffff\",\n          \"doc_count\" : 2\n        },\n        {\n          \"key\" : \"811fbffffffffff\",\n          \"doc_count\" : 1\n        }\n      ]\n    }\n  }\n}\n\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 2/\"took\" : $body.took/]\n\nWe can extract the documents on one of those buckets by executing a geo_grid query\nusing the bucket key with the following syntax:\n\n[source,console]\n--------------------------------------------------\nGET /my_locations/_search\n{\n  \"query\": {\n    \"geo_grid\" :{\n      \"location\" : {\n        \"geohex\" : \"811fbffffffffff\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"took\" : 26,\n  \"timed_out\" : false,\n  \"_shards\" : {\n    \"total\" : 1,\n    \"successful\" : 1,\n    \"skipped\" : 0,\n    \"failed\" : 0\n  },\n  \"hits\" : {\n    \"total\" : {\n      \"value\" : 1,\n      \"relation\" : \"eq\"\n    },\n    \"max_score\" : 1.0,\n    \"hits\" : [\n      {\n        \"_index\" : \"my_locations\",\n        \"_id\" : \"3\",\n        \"_score\" : 1.0,\n        \"_source\" : {\n          \"location\" : \"POINT(2.336389 48.861111)\",\n          \"city\" : \"Paris\",\n          \"name\" : \"Mus\u00e9e du Louvre\"\n        }\n      }\n    ]\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\" : 26/\"took\" : $body.took/]\n"
}