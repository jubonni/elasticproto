{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.474578",
        "size": 2803,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/es-security-principles.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "es-security-principles",
        "version": "8.15"
    },
    "doc": "[[es-security-principles]]\n== {es} security principles\nProtecting your {es} cluster and the data it contains is of utmost importance.\nImplementing a defense in depth strategy provides multiple layers of security\nto help safeguard your system. The following principles provide a foundation\nfor running {es} in a secure manner that helps to mitigate attacks on your\nsystem at multiple levels.\n\n[discrete]\n[[security-run-with-security]]\n=== Run {es} with security enabled\nNever run an {es} cluster without security enabled. This principle cannot be\noverstated. Running {es} without security leaves your cluster exposed to anyone\nwho can send network traffic to {es}, permitting these individuals to download,\nmodify, or delete any data in your cluster.\n<<configuring-stack-security,Start the {stack} with security enabled>> or\n<<manually-configure-security,manually configure security>> to prevent\nunauthorized access to your clusters and ensure that internode communication\nis secure. \n\n[discrete]\n[[security-not-root-user]]\n=== Run {es} with a dedicated non-root user\nNever try to run {es} as the `root` user, which would invalidate any defense \nstrategy and permit a malicious user to do *anything* on your server. You must \ncreate a dedicated, unprivileged user to run {es}. By default, the `rpm`, `deb`, \n`docker`, and Windows packages of {es} contain an `elasticsearch` user with\nthis scope.\n\n[discrete]\n[[security-protect-cluster-traffic]]\n=== Protect {es} from public internet traffic\nEven with security enabled, never expose {es} to public internet traffic.\nUsing an application to sanitize requests to {es} still poses risks, such as\na malicious user writing <<search,`_search`>> requests that could overwhelm an\n{es} cluster and bring it down. Keep {es} as isolated as possible, preferably\nbehind a firewall and a VPN. Any internet-facing applications should run \npre-canned aggregations, or not run aggregations at all.\n\nWhile you absolutely shouldn't expose {es} directly to the internet, you also\nshouldn't expose {es} directly to users. Instead, use an intermediary\napplication to make requests on behalf of users. This implementation allows you \nto track user behaviors, such as can submit requests, and to which specific\nnodes in the cluster. For example, you can implement an application that accepts\na search term from a user and funnels it through a\n<<query-dsl-simple-query-string-query,`simple_query_string`>> query. \n\n[discrete]\n[[security-create-appropriate-users]]\n=== Implement role based access control\n<<defining-roles,Define roles>> for your users and\n<<security-privileges,assign appropriate privileges>> to ensure that users have\naccess only to the resources that they need. This process determines whether the \nuser behind an incoming request is allowed to run that request."
}