{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.307582",
        "size": 5179,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/remote-cluster-network-settings.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "remote-cluster-network-settings",
        "version": "8.15"
    },
    "doc": "[[remote-cluster-network-settings]]\n==== Advanced remote cluster (API key based model) settings\n\nUse the following advanced settings to configure the remote cluster interface (API key based model)\nindependently of the <<transport-settings,transport interface>>. You can also\nconfigure both interfaces together using the <<common-network-settings,network settings>>.\n\n`remote_cluster_server.enabled`::\n(<<static-cluster-setting,Static>>, boolean)\nDetermines whether the remote cluster server should be enabled. This setting must\nbe `true` for `remote_cluster.port` and all following remote cluster settings to\ntake effect. Enabling it allows the cluster to serve cross-cluster requests using\nthe API key based model. Defaults to `false`.\n\n`remote_cluster.host`::\n(<<static-cluster-setting,Static>>, string)\nSets the address of this node for remote cluster server traffic. The node will bind to this\naddress and will also use it as its remote cluster server publish address. Accepts an IP\naddress, a hostname, or a <<network-interface-values,special value>>.\nUse this setting only if you require different configurations for the\nremote cluster server and transport interfaces.\n+\nDefaults to the address given by `transport.bind_host`.\n\n`remote_cluster.bind_host`::\n(<<static-cluster-setting,Static>>, string)\nThe network address(es) to which the node should bind in order to listen for\nincoming remote cluster connections. Accepts a list of IP addresses, hostnames, and\n<<network-interface-values,special values>>. Defaults to the address given by\n`remote_cluster.host`. Use this setting only if you require\nto bind to multiple addresses or to use different addresses for publishing and\nbinding, and you also require different binding configurations for the\nremote cluster server and transport interfaces.\n\n`remote_cluster.publish_host`::\n(<<static-cluster-setting,Static>>, string)\nThe network address at which the node can be contacted by other nodes. Accepts\nan IP address, a hostname, or a <<network-interface-values,special value>>.\nDefaults to the address given by `remote_cluster.host`.\nUse this setting only if you require to bind to multiple addresses or to use\ndifferent addresses for publishing and binding, and you also require different\nbinding configurations for the remote cluster server and transport interfaces.\n\n`remote_cluster.publish_port`::\n(<<static-cluster-setting,Static>>, integer)\nThe port of the <<modules-network-binding-publishing,remote cluster server publish\naddress>>. Set this parameter only if you need the publish port to be\ndifferent from `remote_cluster.port`. Defaults to the port assigned via\n`remote_cluster.port`.\n\n`remote_cluster.tcp.keep_alive`::\n(<<static-cluster-setting,Static>>, boolean)\nConfigures the `SO_KEEPALIVE` option for remote cluster sockets, which determines\nwhether they send TCP keepalive probes. Defaults to `transport.tcp.keep_alive`.\n\n`remote_cluster.tcp.keep_idle`::\n(<<static-cluster-setting,Static>>, integer)\nConfigures the `TCP_KEEPIDLE` option for transport sockets, which determines\nthe time in seconds that a connection must be idle before starting to send TCP\nkeepalive probes. Defaults to `transport.tcp.keep_idle` if set, or the system\ndefault otherwise. This value cannot exceed `300` seconds. In cases where the\nsystem default is higher than `300`, the value is automatically lowered to\n`300`. Only applicable on Linux and macOS.\n\n`remote_cluster.tcp.keep_interval`::\n(<<static-cluster-setting,Static>>, integer)\nConfigures the `TCP_KEEPINTVL` option for transport sockets, which determines\nthe time in seconds between sending TCP keepalive probes. Defaults to\n`transport.tcp.keep_interval` if set, or the system default otherwise. This value\ncannot exceed `300` seconds. In cases where the system default is higher than\n`300`, the value is automatically lowered to `300`. Only applicable on Linux\nand macOS.\n\n`remote_cluster.tcp.keep_count`::\n(<<static-cluster-setting,Static>>, integer)\nConfigures the `TCP_KEEPCNT` option for transport sockets, which determines the\nnumber of unacknowledged TCP keepalive probes that may be sent on a connection\nbefore it is dropped. Defaults to `transport.tcp.keep_count` if set, or the\nsystem default otherwise. Only applicable on Linux and macOS.\n\n`remote_cluster.tcp.no_delay`::\n(<<static-cluster-setting,Static>>, boolean)\nConfigures the `TCP_NODELAY` option on transport sockets, which determines\nwhether {wikipedia}/Nagle%27s_algorithm[TCP no delay] is enabled. Defaults to\n`transport.tcp.no_delay`.\n\n`remote_cluster.tcp.reuse_address`::\n(<<static-cluster-setting,Static>>, boolean)\nConfigures the `SO_REUSEADDR` option for network sockets, which determines\nwhether the address can be reused or not. Defaults to\n`transport.tcp.reuse_address`.\n\n`remote_cluster.tcp.send_buffer_size`::\n(<<static-cluster-setting,Static>>, <<byte-units,byte value>>)\nThe size of the TCP send buffer for transport traffic. Defaults to\n`transport.tcp.send_buffer_size`.\n\n`remote_cluster.tcp.receive_buffer_size`::\n(<<static-cluster-setting,Static>>, <<byte-units,byte value>>)\nThe size of the TCP receive buffer for transport traffic. Defaults to\n`transport.tcp.receive_buffer_size`.\n"
}