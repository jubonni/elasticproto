{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.498274",
        "size": 5428,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-inference-bucket-aggregation.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "search-aggregations-pipeline-inference-bucket-aggregation",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[search-aggregations-pipeline-inference-bucket-aggregation]]\n=== {infer-cap} bucket aggregation\n++++\n<titleabbrev>{infer-cap} bucket</titleabbrev>\n++++\n\n\nA parent pipeline aggregation which loads a pre-trained model and performs \n{infer} on the collated result fields from the parent bucket aggregation.\n\nTo use the {infer} bucket aggregation, you need to have the same security\nprivileges that are required for using the \n<<get-trained-models,get trained models API>>.\n\n[[inference-bucket-agg-syntax]]\n==== Syntax\n\nA `inference` aggregation looks like this in isolation:\n\n[source,js]\n--------------------------------------------------\n{\n  \"inference\": {\n    \"model_id\": \"a_model_for_inference\", <1>\n    \"inference_config\": { <2>\n      \"regression_config\": {\n        \"num_top_feature_importance_values\": 2\n      }\n    },\n    \"buckets_path\": {\n      \"avg_cost\": \"avg_agg\", <3>\n      \"max_cost\": \"max_agg\"\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> The unique identifier or alias for the trained model.\n<2> The optional inference config which overrides the model's default settings\n<3> Map the value of `avg_agg` to the model's input field `avg_cost`\n\n\n[[inference-bucket-params]]\n.`inference` Parameters\n[options=\"header\"]\n|===\n|Parameter Name |Description |Required |Default Value\n| `model_id`         | The ID or alias for the trained model.      | Required  | -\n| `inference_config` | Contains the inference type and its options. There are two types: <<inference-agg-regression-opt,`regression`>> and <<inference-agg-classification-opt,`classification`>>  | Optional | -\n| `buckets_path`     | Defines the paths to the input aggregations and maps the aggregation names to the field names expected by the model.\nSee <<buckets-path-syntax>> for more details | Required       | -\n|===\n\n\n==== Configuration options for {infer} models\n\nThe `inference_config` setting is optional and usually isn't required as the\npre-trained models come equipped with sensible defaults. In the context of\naggregations some options can be overridden for each of the two types of model.\n\n[discrete]\n[[inference-agg-regression-opt]]\n===== Configuration options for {regression} models\n\n`num_top_feature_importance_values`::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-regression-num-top-feature-importance-values]\n\n[discrete]\n[[inference-agg-classification-opt]]\n===== Configuration options for {classification} models\n\n`num_top_classes`::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-classes]\n\n`num_top_feature_importance_values`::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-feature-importance-values]\n\n`prediction_field_type`::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-prediction-field-type]\n\n\n[[inference-bucket-agg-example]]\n==== Example\n\nThe following snippet aggregates a web log by `client_ip` and extracts a number\nof features via metric and bucket sub-aggregations as input to the {infer}\naggregation configured with a model trained to identify suspicious client IPs:\n\n[source,console]\n-------------------------------------------------\nGET kibana_sample_data_logs/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"client_ip\": { <1>\n      \"composite\": {\n        \"sources\": [\n          {\n            \"client_ip\": {\n              \"terms\": {\n                \"field\": \"clientip\"\n              }\n            }\n          }\n        ]\n      },\n      \"aggs\": { <2>\n        \"url_dc\": {\n          \"cardinality\": {\n            \"field\": \"url.keyword\"\n          }\n        },\n        \"bytes_sum\": {\n          \"sum\": {\n            \"field\": \"bytes\"\n          }\n        },\n        \"geo_src_dc\": {\n          \"cardinality\": {\n            \"field\": \"geo.src\"\n          }\n        },\n        \"geo_dest_dc\": {\n          \"cardinality\": {\n            \"field\": \"geo.dest\"\n          }\n        },\n        \"responses_total\": {\n          \"value_count\": {\n            \"field\": \"timestamp\"\n          }\n        },\n        \"success\": {\n          \"filter\": {\n            \"term\": {\n              \"response\": \"200\"\n            }\n          }\n        },\n        \"error404\": {\n          \"filter\": {\n            \"term\": {\n              \"response\": \"404\"\n            }\n          }\n        },\n        \"error503\": {\n          \"filter\": {\n            \"term\": {\n              \"response\": \"503\"\n            }\n          }\n        },\n        \"malicious_client_ip\": { <3>\n          \"inference\": {\n            \"model_id\": \"malicious_clients_model\",\n            \"buckets_path\": {\n              \"response_count\": \"responses_total\",\n              \"url_dc\": \"url_dc\",\n              \"bytes_sum\": \"bytes_sum\",\n              \"geo_src_dc\": \"geo_src_dc\",\n              \"geo_dest_dc\": \"geo_dest_dc\",\n              \"success\": \"success._count\",\n              \"error404\": \"error404._count\",\n              \"error503\": \"error503._count\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n-------------------------------------------------\n// TEST[skip:setup kibana sample data]\n\n<1> A composite bucket aggregation that aggregates the data by `client_ip`.\n<2> A series of metrics and bucket sub-aggregations.\n<3> {infer-cap} bucket aggregation that specifies the trained model and maps the\naggregation names to the model's input fields.\n"
}