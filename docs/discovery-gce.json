{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.946066",
        "size": 15779,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/discovery-gce.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "discovery-gce",
        "version": "8.15"
    },
    "doc": "[[discovery-gce]]\n=== GCE Discovery plugin\n\nThe Google Compute Engine Discovery plugin uses the GCE API to identify the\naddresses of seed hosts.\n\n:plugin_name: discovery-gce\ninclude::install_remove.asciidoc[]\n\n[[discovery-gce-usage]]\n==== GCE Virtual Machine discovery\n\nGoogle Compute Engine VM discovery allows to use the google APIs to perform\nautomatic discovery of seed hosts. Here is a simple sample configuration:\n\n[source,yaml]\n--------------------------------------------------\ncloud:\n  gce:\n    project_id: <your-google-project-id>\n    zone: <your-zone>\ndiscovery:\n  seed_providers: gce\n--------------------------------------------------\n\nThe following gce settings (prefixed with `cloud.gce`) are supported:\n\n `project_id`::\n\n     Your Google project id.\n     By default the project id will be derived from the instance metadata.\n\n     Note: Deriving the project id from system properties or environment variables\n     (`GOOGLE_CLOUD_PROJECT` or `GCLOUD_PROJECT`) is not supported.\n\n `zone`::\n\n     helps to retrieve instances running in a given zone.\n     It should be one of the https://developers.google.com/compute/docs/zones#available[GCE supported zones].\n     By default the zone will be derived from the instance metadata.\n     See also <<discovery-gce-usage-zones>>.\n\n `retry`::\n\n     If set to `true`, client will use\n     https://developers.google.com/api-client-library/java/google-http-java-client/backoff[ExponentialBackOff]\n     policy to retry the failed http request. Defaults to `true`.\n\n `max_wait`::\n\n     The maximum elapsed time after the client instantiating retry. If the time elapsed goes past the\n     `max_wait`, client stops to retry. A negative value means that it will wait indefinitely. Defaults to `0s` (retry\n     indefinitely).\n\n `refresh_interval`::\n\n     How long the list of hosts is cached to prevent further requests to the GCE API. `0s` disables caching.\n     A negative value will cause infinite caching. Defaults to `0s`.\n\n\n[IMPORTANT]\n.Binding the network host\n==============================================\n\nIt's important to define `network.host` as by default it's bound to `localhost`.\n\nYou can use {ref}/modules-network.html[core network host settings] or\n<<discovery-gce-network-host,gce specific host settings>>:\n\n==============================================\n\n[[discovery-gce-network-host]]\n==== GCE Network Host\n\nWhen the `discovery-gce` plugin is installed, the following are also allowed\nas valid network host settings:\n\n[cols=\"<,<\",options=\"header\",]\n|==================================================================\n|GCE Host Value |Description\n|`_gce:privateIp:X_` |The private IP address of the machine for a given network interface.\n|`_gce:hostname_` |The hostname of the machine.\n|`_gce_` |Same as `_gce:privateIp:0_` (recommended).\n|==================================================================\n\nExamples:\n\n[source,yaml]\n--------------------------------------------------\n# get the IP address from network interface 1\nnetwork.host: _gce:privateIp:1_\n# Using GCE internal hostname\nnetwork.host: _gce:hostname_\n# shortcut for _gce:privateIp:0_ (recommended)\nnetwork.host: _gce_\n--------------------------------------------------\n\n[[discovery-gce-usage-short]]\n===== How to start (short story)\n\n* Create Google Compute Engine instance (with compute rw permissions)\n* Install Elasticsearch\n* Install Google Compute Engine Cloud plugin\n* Modify `elasticsearch.yml` file\n* Start Elasticsearch\n\n[[discovery-gce-usage-long]]\n==== Setting up GCE Discovery\n\n\n[[discovery-gce-usage-long-prerequisites]]\n===== Prerequisites\n\nBefore starting, you need:\n\n* Your project ID, e.g. `es-cloud`. Get it from https://code.google.com/apis/console/[Google API Console].\n* To install https://developers.google.com/cloud/sdk/[Google Cloud SDK]\n\nIf you did not set it yet, you can define your default project you will work on:\n\n[source,sh]\n--------------------------------------------------\ngcloud config set project es-cloud\n--------------------------------------------------\n\n[[discovery-gce-usage-long-login]]\n===== Login to Google Cloud\n\nIf you haven't already, login to Google Cloud\n\n[source,sh]\n--------------------------------------------------\ngcloud auth login\n--------------------------------------------------\n\nThis will open your browser. You will be asked to sign-in to a Google account and\nauthorize access to the Google Cloud SDK.\n\n[[discovery-gce-usage-long-first-instance]]\n===== Creating your first instance\n\n\n[source,sh]\n--------------------------------------------------\ngcloud compute instances create myesnode1 \\\n       --zone <your-zone> \\\n       --scopes compute-rw\n--------------------------------------------------\n\nWhen done, a report like this one should appears:\n\n[source,text]\n--------------------------------------------------\nCreated [https://www.googleapis.com/compute/v1/projects/es-cloud-1070/zones/us-central1-f/instances/myesnode1].\nNAME      ZONE          MACHINE_TYPE  PREEMPTIBLE INTERNAL_IP   EXTERNAL_IP   STATUS\nmyesnode1 us-central1-f n1-standard-1             10.240.133.54 104.197.94.25 RUNNING\n--------------------------------------------------\n\nYou can now connect to your instance:\n\n[source,sh]\n--------------------------------------------------\n# Connect using google cloud SDK\ngcloud compute ssh myesnode1 --zone europe-west1-a\n\n# Or using SSH with external IP address\nssh -i ~/.ssh/google_compute_engine 192.158.29.199\n--------------------------------------------------\n\n[IMPORTANT]\n.Service Account Permissions\n==============================================\n\nIt's important when creating an instance that the correct permissions are set. At a minimum, you must ensure you have:\n\n[source,text]\n--------------------------------------------------\nscopes=compute-rw\n--------------------------------------------------\n\nFailing to set this will result in unauthorized messages when starting Elasticsearch.\nSee <<discovery-gce-usage-tips-permissions>>.\n==============================================\n\nOnce connected,  {ref}/install-elasticsearch.html[install {es}].\n\n[[discovery-gce-usage-long-install-plugin]]\n===== Install Elasticsearch discovery gce plugin\n\nInstall the plugin:\n\n[source,sh]\n--------------------------------------------------\n# Use Plugin Manager to install it\nsudo bin/elasticsearch-plugin install discovery-gce\n--------------------------------------------------\n\nOpen the `elasticsearch.yml` file:\n\n[source,sh]\n--------------------------------------------------\nsudo vi /etc/elasticsearch/elasticsearch.yml\n--------------------------------------------------\n\nAnd add the following lines:\n\n[source,yaml]\n--------------------------------------------------\ncloud:\n  gce:\n      project_id: es-cloud\n      zone: europe-west1-a\ndiscovery:\n      seed_providers: gce\n--------------------------------------------------\n\n\nStart Elasticsearch:\n\n[source,sh]\n--------------------------------------------------\nsudo systemctl start elasticsearch\n--------------------------------------------------\n\nIf anything goes wrong, you should check logs:\n\n[source,sh]\n--------------------------------------------------\ntail -f /var/log/elasticsearch/elasticsearch.log\n--------------------------------------------------\n\nIf needed, you can change log level to `trace` by opening `log4j2.properties`:\n\n[source,sh]\n--------------------------------------------------\nsudo vi /etc/elasticsearch/log4j2.properties\n--------------------------------------------------\n\nand adding the following line:\n\n[source,yaml]\n--------------------------------------------------\n# discovery\nlogger.discovery_gce.name = discovery.gce\nlogger.discovery_gce.level = trace\n--------------------------------------------------\n\n\n\n[[discovery-gce-usage-cloning]]\n==== Cloning your existing machine\n\nIn order to build a cluster on many nodes, you can clone your configured instance to new nodes.\nYou won't have to reinstall everything!\n\nFirst create an image of your running instance and upload it to Google Cloud Storage:\n\n[source,sh]\n--------------------------------------------------\n# Create an image of your current instance\nsudo /usr/bin/gcimagebundle -d /dev/sda -o /tmp/\n\n# An image has been created in `/tmp` directory:\nls /tmp\ne4686d7f5bf904a924ae0cfeb58d0827c6d5b966.image.tar.gz\n\n# Upload your image to Google Cloud Storage:\n# Create a bucket to hold your image, let's say `esimage`:\ngsutil mb gs://esimage\n\n# Copy your image to this bucket:\ngsutil cp /tmp/e4686d7f5bf904a924ae0cfeb58d0827c6d5b966.image.tar.gz gs://esimage\n\n# Then add your image to images collection:\ngcloud compute images create elasticsearch-2-0-0 --source-uri gs://esimage/e4686d7f5bf904a924ae0cfeb58d0827c6d5b966.image.tar.gz\n\n# If the previous command did not work for you, logout from your instance\n# and launch the same command from your local machine.\n--------------------------------------------------\n\n[[discovery-gce-usage-start-new-instances]]\n===== Start new instances\n\nAs you have now an image, you can create as many instances as you need:\n\n[source,sh]\n--------------------------------------------------\n# Just change node name (here myesnode2)\ngcloud compute instances create myesnode2 --image elasticsearch-2-0-0 --zone europe-west1-a\n\n# If you want to provide all details directly, you can use:\ngcloud compute instances create myesnode2 --image=elasticsearch-2-0-0 \\\n       --zone europe-west1-a --machine-type f1-micro --scopes=compute-rw\n--------------------------------------------------\n\n[[discovery-gce-usage-remove-instance]]\n===== Remove an instance (aka shut it down)\n\nYou can use https://cloud.google.com/console[Google Cloud Console] or CLI to manage your instances:\n\n[source,sh]\n--------------------------------------------------\n# Stopping and removing instances\ngcloud compute instances delete myesnode1 myesnode2 \\\n       --zone=europe-west1-a\n\n# Consider removing disk as well if you don't need them anymore\ngcloud compute disks delete boot-myesnode1 boot-myesnode2  \\\n       --zone=europe-west1-a\n--------------------------------------------------\n\n[[discovery-gce-usage-zones]]\n==== Using GCE zones\n\n`cloud.gce.zone` helps to retrieve instances running in a given zone. It should be one of the\nhttps://developers.google.com/compute/docs/zones#available[GCE supported zones].\n\nThe GCE discovery can support multi zones although you need to be aware of network latency between zones.\nTo enable discovery across more than one zone, just enter add your zone list to `cloud.gce.zone` setting:\n\n[source,yaml]\n--------------------------------------------------\ncloud:\n  gce:\n    project_id: <your-google-project-id>\n    zone: [\"<your-zone1>\", \"<your-zone2>\"]\ndiscovery:\n  seed_providers: gce\n--------------------------------------------------\n\n\n\n[[discovery-gce-usage-tags]]\n==== Filtering by tags\n\nThe GCE discovery can also filter machines to include in the cluster based on tags using `discovery.gce.tags` settings.\nFor example, setting `discovery.gce.tags` to `dev` will only filter instances having a tag set to `dev`. Several tags\nset will require all of those tags to be set for the instance to be included.\n\nOne practical use for tag filtering is when a GCE cluster contains many nodes\nthat are not master-eligible {es} nodes. In this case, tagging the GCE\ninstances that _are_ running the master-eligible {es} nodes, and then filtering\nby that tag, will help discovery to run more efficiently.\n\nAdd your tag when building the new instance:\n\n[source,sh]\n--------------------------------------------------\ngcloud compute instances create myesnode1 --project=es-cloud \\\n       --scopes=compute-rw \\\n       --tags=elasticsearch,dev\n--------------------------------------------------\n\nThen, define it in `elasticsearch.yml`:\n\n[source,yaml]\n--------------------------------------------------\ncloud:\n  gce:\n    project_id: es-cloud\n    zone: europe-west1-a\ndiscovery:\n  seed_providers: gce\n    gce:\n      tags: elasticsearch, dev\n--------------------------------------------------\n\n[[discovery-gce-usage-port]]\n==== Changing default transport port\n\nBy default, Elasticsearch GCE plugin assumes that you run Elasticsearch on 9300 default port.\nBut you can specify the port value Elasticsearch is meant to use using google compute engine metadata `es_port`:\n\n[[discovery-gce-usage-port-create]]\n===== When creating instance\n\nAdd `--metadata es_port=9301` option:\n\n[source,sh]\n--------------------------------------------------\n# when creating first instance\ngcloud compute instances create myesnode1 \\\n       --scopes=compute-rw,storage-full \\\n       --metadata es_port=9301\n\n# when creating an instance from an image\ngcloud compute instances create myesnode2 --image=elasticsearch-1-0-0-RC1 \\\n       --zone europe-west1-a --machine-type f1-micro --scopes=compute-rw \\\n       --metadata es_port=9301\n--------------------------------------------------\n\n[[discovery-gce-usage-port-run]]\n===== On a running instance\n\n[source,sh]\n--------------------------------------------------\ngcloud compute instances add-metadata myesnode1 \\\n       --zone europe-west1-a \\\n       --metadata es_port=9301\n--------------------------------------------------\n\n\n[[discovery-gce-usage-tips]]\n==== GCE Tips\n\n[[discovery-gce-usage-tips-projectid]]\n===== Store project id locally\n\nIf you don't want to repeat the project id each time, you can save it in the local gcloud config\n\n[source,sh]\n--------------------------------------------------\ngcloud config set project es-cloud\n--------------------------------------------------\n\n[[discovery-gce-usage-tips-permissions]]\n===== Machine Permissions\n\nIf you have created a machine without the correct permissions, you will see `403 unauthorized` error messages. To change machine permission on an existing instance, first stop the instance then Edit. Scroll down to `Access Scopes` to change permission. The other way to alter these permissions is to delete the instance (NOT THE DISK). Then create another with the correct permissions.\n\nCreating machines with gcloud::\n+\n--\nEnsure the following flags are set:\n\n[source,text]\n--------------------------------------------------\n--scopes=compute-rw\n--------------------------------------------------\n--\n\nCreating with console (web)::\n+\n--\nWhen creating an instance using the web console, scroll down to **Identity and API access**.\n\nSelect a service account with the correct permissions or choose **Compute Engine default service account** and select **Allow default access** for **Access scopes**.\n--\n\nCreating with knife google::\n+\n--\nSet the service account scopes when creating the machine:\n\n[source,sh]\n--------------------------------------------------\nknife google server create www1 \\\n    -m n1-standard-1 \\\n    -I debian-8 \\\n    -Z us-central1-a \\\n    -i ~/.ssh/id_rsa \\\n    -x jdoe \\\n    --gce-service-account-scopes https://www.googleapis.com/auth/compute\n--------------------------------------------------\n\nOr, you may use the alias:\n\n[source,sh]\n--------------------------------------------------\n    --gce-service-account-scopes compute-rw\n--------------------------------------------------\n--\n\n[[discovery-gce-usage-testing]]\n==== Testing GCE\n\nIntegrations tests in this plugin require working GCE configuration and\ntherefore disabled by default. To enable tests prepare a config file\nelasticsearch.yml with the following content:\n\n[source,yaml]\n--------------------------------------------------\ncloud:\n  gce:\n      project_id: es-cloud\n      zone: europe-west1-a\ndiscovery:\n      seed_providers: gce\n--------------------------------------------------\n\nReplace `project_id` and `zone` with your settings.\n\nTo run test:\n\n[source,sh]\n--------------------------------------------------\nmvn -Dtests.gce=true -Dtests.config=/path/to/config/file/elasticsearch.yml clean test\n--------------------------------------------------\n"
}