{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.045272",
        "size": 10125,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/remote-clusters-migrate.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "remote-clusters-migrate",
        "version": "8.15"
    },
    "doc": "[[remote-clusters-migrate]]\n=== Migrate remote clusters from certificate to API key authentication\n\n++++\n<titleabbrev>Migrate from certificate to API key authentication</titleabbrev>\n++++\n\nThe API key based security model for remote clusters offers administrators more\nfine-grained access controls compared to the TLS certificate based security\nmodel. For that reason, you may want to migrate from the certificate based\nsecurity model to the API key based model.\n\nWhile it is possible to migrate by defining a new remote cluster connection,\nusing a new alias, this has several downsides:\n\n- For {ccr}, it's not possible to change the leader cluster alias for existing\ntasks. As a result, with a new remote cluster, follower indices would need to be\nre-created from scratch.\n- For {ccs}, transform and anomaly detection jobs do allow updating the remote\ncluster alias. However, if the job was created with wildcards, for example\n`*:source_index`, and `superuser`, adding a new remote cluster will cause the\njob to do double the amount of work and potentially skew results with\nduplications.\n\nFor these reasons, you may prefer to migrate a remote cluster in-place, by\nfollowing these steps:\n\n. <<remote-clusters-migration-prerequisites,Review the prerequisites>>\n. <<remote-clusters-migration-remote-cluster>>\n. <<remote-clusters-migration-stop>>\n. <<remote-clusters-migration-reconnect>>\n. <<remote-clusters-migration-resume>>\n. <<remote-clusters-migration-disable-cert>>\n\nIf you run into any issues, refer to <<remote-clusters-troubleshooting>>.\n\n[[remote-clusters-migration-prerequisites]]\n==== Prerequisites\n\n* The nodes of the local and remote clusters must be on version 8.10 or later.\n* The local and remote clusters must have an appropriate license. For more\ninformation, refer to https://www.elastic.co/subscriptions.\n\n[[remote-clusters-migration-remote-cluster]]\n==== Reconfigure the remote cluster and generate a cross-cluster API key\n\nOn the remote cluster:\n\ninclude::remote-clusters-api-key.asciidoc[tag=remote-cluster-steps]\n\n[[remote-clusters-migration-stop]]\n==== Stop cross-cluster operations\n\nOn the local cluster, stop any persistent tasks that refer to the remote\ncluster:\n\n* Use the <<stop-transform>> API to stop any transforms.\n* Use the <<ml-close-job>> API to close any anomaly detection jobs.\n* Use the <<ccr-pause-auto-follow-pattern>> API to pause any auto-follow {ccr}.\n* Use the <<ccr-post-pause-follow>> API to pause any manual {ccr} or existing\nindices that were created from the auto-follow pattern.\n\n[[remote-clusters-migration-reconnect]]\n==== Reconnect to the remote cluster\n\nOn the local cluster:\n\n. Enhance any roles used by local cluster users with the required\n<<roles-remote-indices-priv,remote indices privileges>> for {ccr} and {ccs}.\nRefer to <<remote-clusters-privileges-api-key>>. Note:\n\n** You only need to assign additional `remote_indices` privileges to existing\nroles used for cross-cluster operations. You should be able to copy these\nprivileges from the original roles on the remote cluster, where they are defined\nunder the certification based security model.\n** The roles on the local cluster can't exceed the `access` privilege granted by\nthe cross-cluster API key. Any extra local privileges will be suppressed by the\ncross-cluster API key's privileges.\n** No update is needed if the {ccr} or {ccs} tasks have been configured with a\n`superuser` role. The `superuser` role is automatically updated to allow access\nto all remote indices.\n** Tasks that are run as regular users with named roles are immediately updated\nwith the new privileges. A task will load a new definition the next time it\nruns.\n** You need to restart tasks that are run using an API key (done in a later\nstep).\n\n. If you've dynamically configured the remote cluster (via the cluster settings\nAPI):\n\n.. Retrieve the current remote cluster configuration, and store it in a safe\nplace. You may need it later in case you need to\n<<remote-clusters-migration-rollback,roll back>>. Use the cluster settings API:\n+\n[source,console]\n----\nGET /_cluster/settings?filter_path=persistent.cluster.remote\n----\n\n.. Remove the existing remote cluster definition by setting the remote cluster\nsettings to `null`.\n\n. If you've statically configured the remote cluster (via `elasticsearch.yml`),\ncopy the `cluster.remote` settings from `elasticsearch.yml`, and store them\nin a safe place. You may need them later in case you need to\n<<remote-clusters-migration-rollback,roll back>>.\n\n\ninclude::remote-clusters-api-key.asciidoc[tag=local-cluster-steps]\n\n.. Add the cross-cluster API key, created on the remote cluster earlier, to the\nkeystore:\n+\n[source,sh]\n----\n./bin/elasticsearch-keystore add cluster.remote.ALIAS.credentials\n----\n+\nReplace `ALIAS` with the same alias that was used for cross-cluster operations\nbefore the migration. When prompted, enter the encoded cross-cluster API key\ncreated on the remote cluster earlier.\n\n. If you've dynamically configured the remote cluster (via the cluster settings\nAPI):\n\n.. Restart the local cluster to load changes to the keystore and settings.\n\n.. Re-add the remote cluster. Use the same remote cluster alias, and change the\ntransport port into the remote cluster port. For example:\n+\n[source,console]\n----\nPUT /_cluster/settings\n{\n  \"persistent\" : {\n    \"cluster\" : {\n      \"remote\" : {\n        \"my_remote\" : { <1>\n          \"mode\": \"proxy\",\n          \"proxy_address\": \"my.remote.cluster.com:9443\" <2>\n        }\n      }\n    }\n  }\n}\n----\n// TEST[skip:TODO]\n<1> The remote cluster alias. Use the same alias that was used before the\nmigration.\n<2> The remote cluster address with the remote cluster port, which defaults to\n`9443`.\n\n. If you've statically configured the remote cluster (via `elasticsearch.yml`):\n\n.. Update the `cluster.remote` settings in `elasticsearch.yml` on each node of\nthe local cluster. Change the port into the remote cluster port, which defaults\nto `9443`.\n\n.. Restart the local cluster to load changes to the keystore and settings.\n\n. Use the <<cluster-remote-info,remote cluster info API>> to verify that the\nlocal cluster has successfully connected to the remote cluster:\n+\n[source,console]\n----\nGET /_remote/info\n----\n// TEST[skip:TODO]\n+\nThe API response should indicate that the local cluster has connected to the\nremote cluster:\n+\n[source,console-result]\n----\n{\n  \"my_remote\": {\n    \"connected\": true, <1>\n    \"mode\": \"proxy\",\n    \"proxy_address\": \"my.remote.cluster.com:9443\",\n    \"server_name\": \"\",\n    \"num_proxy_sockets_connected\": 0,\n    \"max_proxy_socket_connections\": 18,\n    \"initial_connect_timeout\": \"30s\",\n    \"skip_unavailable\": false,\n    \"cluster_credentials\": \"::es_redacted::\" <2>\n  }\n}\n----\n// TEST[skip:TODO]\n<1> The remote cluster is connected.\n<2> If present, indicates the remote cluster has connected using API key\nauthentication.\n\n[[remote-clusters-migration-resume]]\n==== Resume cross-cluster operations\n\nResume any persistent tasks that you stopped earlier. Tasks should be restarted\nby the same user or API key that created the task before the migration. Ensure\nthe roles of this user or API key have been updated with the required\n`remote_indices` privileges. For users, tasks capture the caller's credentials\nwhen started and run in that user's security context. For API keys, restarting a\ntask will update the task with the updated API key.\n\n* Use the <<start-transform>> API to start any transforms.\n* Use the <<ml-open-job>> API to open any anomaly detection jobs.\n* Use the <<ccr-post-resume-follow>> API to resume any auto-follow {ccr}.\n* Use the <<ccr-resume-auto-follow-pattern>> API to resume any manual {ccr} or\nexisting indices that were created from the auto-follow pattern.\n\n[[remote-clusters-migration-disable-cert]]\n==== Disable certificate based authentication and authorization\n\nNOTE: Only proceed with this step if the migration has been proved successful on\nthe local cluster. If the migration is unsuccessful, either\n<<remote-clusters-troubleshooting,find out what the problem is and attempt to\nfix it>> or <<remote-clusters-migration-rollback,roll back>>.\n\nNext, disable the certification based connection. Optionally, you can also\nrevoke the authorization.\n\n. There is no particular setting to enable or disable a certificate based cross\ncluster connection, because it shares the same transport protocol with the\nintra-cluster node-to-node communication.\n+\nOne way a remote cluster administrator can stop an existing local cluster from\nconnecting, is by changing TLS trust. The exact steps vary, depending on how the\nclusters have been configured. A generic solution is to\n<<encrypt-internode-communication,recreate the CA and certificate/key used by\nthe remote transport interface>> so that any existing certificate/key, locally\nor distributed, is no longer trusted.\n+\nAnother solution is to apply IP filters to the transport interface, blocking\ntraffic from outside the cluster.\n\n. Optionally, delete any roles on the remote cluster that were only used for\ncross-cluster operations. These roles are no longer used under the API key based\nsecurity model.\n\n[[remote-clusters-migration-rollback]]\n==== Rollback\n\nIf you need to roll back, follow these steps on the local cluster:\n\n. Stop any persistent tasks that refer to the remote cluster.\n\n. Remove the remote cluster definition by setting the remote cluster settings to\n`null`.\n\n. Remove the `remote_indices` privileges from any roles that were updated during\nthe migration.\n\n. On each node, remove the `remote_cluster_client.ssl.*` settings from\n`elasticsearch.yml`.\n\n. Restart the local cluster to apply changes to the keystore and\n`elasticsearch.yml`.\n\n. On the local cluster, apply the original remote cluster settings. If the\nremote cluster connection has been configured statically (using the\n`elasticsearch.yml` file), restart the cluster.\n\n. Use the <<cluster-remote-info,remote cluster info API>> to verify that the\nlocal cluster has connected to the remote cluster. The response should have\n`\"connected\": true` and not have `\"cluster_credentials\": \"::es_redacted::\"`.\n\n. Restart any persistent tasks that you've stopped earlier.\n"
}