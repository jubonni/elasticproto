{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.972272",
        "size": 2687,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-put-lifecycle.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ilm-put-lifecycle",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-put-lifecycle]]\n=== Create or update lifecycle policy API\n++++\n<titleabbrev>Create or update lifecycle policy</titleabbrev>\n++++\n\nCreates or updates <<index-lifecycle-management,lifecycle>> policy. See <<ilm-index-lifecycle>> for\ndefinitions of policy components.\n\n[[ilm-put-lifecycle-request]]\n==== {api-request-title}\n\n`PUT _ilm/policy/<policy_id>`\n\n[[ilm-put-lifecycle-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage_ilm`\ncluster privilege to use this API. You must also have the `manage` index\nprivilege on all indices being managed by `policy`. {ilm-init} performs\noperations as the user who last updated the policy. {ilm-init} only has the\n<<defining-roles,roles>> assigned to the user at the time of the last policy\nupdate.\n\n[[ilm-put-lifecycle-desc]]\n==== {api-description-title}\n\nCreates a lifecycle policy. If the specified policy exists, the policy is\nreplaced and the policy version is incremented.\n\nNOTE: Only the latest version of the policy is stored, you cannot revert to\nprevious versions.\n\n[[ilm-put-lifecycle-path-params]]\n==== {api-path-parms-title}\n\n`<policy_id>`::\n  (Required, string) Identifier for the policy.\n+\n[IMPORTANT]\n====\nTo avoid naming collisions with built-in and Fleet-managed ILM policies, avoid using `@` as part of the id of your own ILM policies.\n====\n\n[[ilm-put-lifecycle-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[[ilm-put-lifecycle-example]]\n==== {api-examples-title}\n\nThe following example creates a new policy named `my_policy`. In addition, you can use the\n`_meta` parameter to add arbitrary metadata to the policy, the `_meta` parameter is optional\nand not automatically generated or used by Elasticsearch. To unset `_meta`, replace the policy\nwithout specifying one. To check the `_meta`, you can use the <<ilm-get-lifecycle,Get lifecycle policy>> API.\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"_meta\": {\n      \"description\": \"used for nginx log\",\n      \"project\": {\n        \"name\": \"myProject\",\n        \"department\": \"myDepartment\"\n      }\n    },\n    \"phases\": {\n      \"warm\": {\n        \"min_age\": \"10d\",\n        \"actions\": {\n          \"forcemerge\": {\n            \"max_num_segments\": 1\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"30d\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nIf the request succeeds, you receive the following result:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true\n}\n----\n"
}