{
    "meta": {
        "size": 110799,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-settings.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-settings",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-settings]]\n=== Security settings in {es}\n++++\n<titleabbrev>Security settings</titleabbrev>\n++++\n\nYou configure `xpack.security` settings to\n<<anonymous-access-settings,enable anonymous access>> and perform message\nauthentication,\n<<field-document-security-settings,set up document and field level security>>,\n<<realm-settings,configure realms>>,\n<<ssl-tls-settings,encrypt communications with SSL>>,and\n<<auditing-settings,audit security events>>.\n\nAll of these settings can be added to the `elasticsearch.yml` configuration file,\nwith the exception of the secure settings, which you add to the {es} keystore.\nFor more information about creating and updating the {es} keystore, see\n<<secure-settings>>.\n\n[discrete]\n[[general-security-settings]]\n==== General security settings\n`xpack.security.enabled`::\n(<<static-cluster-setting,Static>>)\nDefaults to `true`, which enables {es} {security-features} on the node. \nThis setting must be enabled to use Elasticsearch's authentication, \nauthorization and audit features. +\n+\n--\nIf set to `false`, {security-features} are disabled, which is not recommended.\nIt also affects all {kib} instances that connect to this {es} instance; you do\nnot need to disable {security-features} in those `kibana.yml` files. For more\ninformation about disabling {security-features} in specific {kib} instances, see\n{kibana-ref}/security-settings-kb.html[{kib} security settings].\n--\n\n`xpack.security.autoconfiguration.enabled`::\n(<<static-cluster-setting,Static>>)\nDefaults to `true`, which enables\n<<configuring-stack-security,security auto configuration>>.\n+\n--\nIf set to `false`, security auto configuration is disabled, which is not\nrecommended. When disabled, security is not configured automatically when\nstarting {es} for the first time, which means that you must\n<<manually-configure-security,manually configure security>>.\n--\n\n`xpack.security.enrollment.enabled`::\n(<<static-cluster-setting,Static>>)\nDefaults to `false`. Controls enrollment (of nodes and {kib}) to a local node\nthat's been <<configuring-stack-security, autoconfigured for security>>.\nWhen set to `true`, the local node can generate new enrollment tokens. Existing\ntokens can be used for enrollment if they are still valid.\n+\n--\nThe security autoconfiguration process will set this to `true` unless\nan administrator sets it to `false` before starting {es}.\n--\n\n`xpack.security.hide_settings`::\n(<<static-cluster-setting,Static>>)\nA comma-separated list of settings that are omitted from the results of the\n<<cluster-nodes-info,cluster nodes info API>>. You can use wildcards to include\nmultiple settings in the list. For example, the following value hides all the\nsettings for the ad1 active_directory realm:\n`xpack.security.authc.realms.active_directory.ad1.*`.\nThe API already omits all `ssl` settings, `bind_dn`, and `bind_password` due to\nthe sensitive nature of the information.\n\n`xpack.security.fips_mode.enabled`::\n(<<static-cluster-setting,Static>>)\nEnables fips mode of operation. Set this to `true` if you run this {es} instance in a FIPS 140-2 enabled JVM. For more information, see <<fips-140-compliance>>. Defaults to `false`.\n\n`xpack.security.fips_mode.required_providers`::\n(<<static-cluster-setting,Static>>)\nOptionally enforce specific Java JCE/JSSE security providers. For example, set this to `[\"BCFIPS\", \"BCJSSE\"]` (case-insensitive) to require\nthe Bouncy Castle FIPS JCE and JSSE security providers. Only applicable when `xpack.security.fips_mode.enabled` is set to `true`.\n\n[discrete]\n[[password-hashing-settings]]\n==== Password hashing settings\n\n`xpack.security.authc.password_hashing.algorithm`::\n(<<static-cluster-setting,Static>>)\nSpecifies the hashing algorithm that is used for secure user credential storage.\nSee <<password-hashing-algorithms>>.\nIf `xpack.security.fips_mode.enabled` is true (see <<fips-140-compliance>>), defaults to `pbkdf2_stretch`.\nIn all other cases, defaults to `bcrypt`.\n\n[discrete]\n[[anonymous-access-settings]]\n==== Anonymous access settings\n\nYou can configure the following anonymous access settings in\n`elasticsearch.yml`. For more information, see <<anonymous-access>>.\n\n`xpack.security.authc.anonymous.username`::\n(<<static-cluster-setting,Static>>)\nThe username (principal) of the anonymous user. Defaults to `_es_anonymous_user`.\n\n`xpack.security.authc.anonymous.roles`::\n(<<static-cluster-setting,Static>>)\nThe roles to associate with the anonymous user. Required.\n\n`xpack.security.authc.anonymous.authz_exception`::\n(<<static-cluster-setting,Static>>)\nWhen `true`, an HTTP 403 response is returned if the anonymous user\ndoes not have the appropriate permissions for the requested action. The\nuser is not prompted to provide credentials to access the requested\nresource. When set to `false`, an HTTP 401 response is returned and the user\ncan provide credentials with the appropriate permissions to gain\naccess. Defaults to `true`.\n\n[discrete]\n[[security-automata-settings]]\n==== Automata Settings\n\nIn places where the {security-features} accept wildcard patterns (e.g. index\npatterns in roles, group matches in the role mapping API), each pattern is\ncompiled into an Automaton. The follow settings are available to control this\nbehaviour.\n\n`xpack.security.automata.max_determinized_states`::\n(<<static-cluster-setting,Static>>)\nThe upper limit on how many automaton states may be created by a single pattern.\nThis protects against too-difficult (e.g. exponentially hard) patterns.\nDefaults to `100,000`.\n\n`xpack.security.automata.cache.enabled`::\n(<<static-cluster-setting,Static>>)\nWhether to cache the compiled automata. Compiling automata can be CPU intensive\nand may slowdown some operations. The cache reduces the frequency with which\nautomata need to be compiled.\nDefaults to `true`.\n\n`xpack.security.automata.cache.size`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of items to retain in the automata cache.\nDefaults to `10,000`.\n\n`xpack.security.automata.cache.ttl`::\n(<<static-cluster-setting,Static>>)\nThe length of time to retain in an item in the automata cache (based on most\nrecent usage).\nDefaults to `48h` (48 hours).\n\n[discrete]\n[[field-document-security-settings]]\n==== Document and field level security settings\n\nYou can set the following document and field level security\nsettings in `elasticsearch.yml`. For more information, see\n<<field-and-document-access-control>>.\n\n`xpack.security.dls_fls.enabled`::\n(<<static-cluster-setting,Static>>)\nSet to `false` to prevent document and field level security\nfrom being configured. Defaults to `true`.\n\n`xpack.security.dls.bitset.cache.ttl`::\n(<<static-cluster-setting,Static>>)\nThe time-to-live for cached `BitSet` entries for document level security.\nDocument level security queries may depend on Lucene BitSet objects, and these are\nautomatically cached to improve performance. Defaults to expire entries that are\nunused for `2h` (2 hours).\n\n`xpack.security.dls.bitset.cache.size`::\n(<<static-cluster-setting,Static>>)\nThe maximum memory usage of cached `BitSet` entries for document level security.\nDocument level security queries may depend on Lucene BitSet objects, and these are\nautomatically cached to improve performance. Can be configured as a raw number\nof bytes (such as `200mb` or `1g`) or a percentage of the node's JVM heap\nmemory (such as `5%`). When the default value is exceeded, the least recently\nused entries are evicted. Defaults to `10%` of the heap assigned to the node.\n\n[discrete]\n[[token-service-settings]]\n==== Token service settings\n\nYou can set the following token service settings in\n`elasticsearch.yml`.\n\n`xpack.security.authc.token.enabled`::\n(<<static-cluster-setting,Static>>)\nSet to `false` to disable the built-in token service. Defaults to `true` unless\n `xpack.security.http.ssl.enabled` is `false`. This prevents sniffing the token\n  from a connection over plain http.\n\n`xpack.security.authc.token.timeout`::\n(<<static-cluster-setting,Static>>)\nThe length of time that a token is valid for. By default this value is `20m` or\n20 minutes. The maximum value is 1 hour.\n\n[discrete]\n[[api-key-service-settings]]\n==== API key service settings\n\nYou can set the following API key service settings in\n`elasticsearch.yml`.\n\n`xpack.security.authc.api_key.enabled`::\n(<<static-cluster-setting,Static>>)\nSet to `false` to disable the built-in API key service. Defaults to `true`.\n\n`xpack.security.authc.api_key.cache.ttl`::\n(<<static-cluster-setting,Static>>)\nThe time-to-live for cached API key entries. A API key id and a hash of its\nAPI key are cached for this period of time. Specify the time period using\nthe standard {es} <<time-units,time units>>. Defaults to `1d`.\n\n`xpack.security.authc.api_key.cache.max_keys`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of API key entries that can live in the\ncache at any given time. Defaults to 10,000.\n\n`xpack.security.authc.api_key.cache.hash_algo`::\n(<<static-cluster-setting,Static>>, Expert)\nThe hashing algorithm that is used for the\nin-memory cached API key credentials. For possible values, see <<cache-hash-algo>>.\nDefaults to `ssha256`.\n\n[[api-key-service-settings-delete-retention-period]]\n`xpack.security.authc.api_key.delete.retention_period`::\n(<<dynamic-cluster-setting,Dynamic>>)\nInvalidated or expired API keys older than the retention period are eligible for deletion.\nDefaults to `7d`.\n\n--\nNOTE:  Large real-time clock inconsistency across cluster nodes can cause problems\nwith evaluating the API key retention period. That is, if the clock on the node \ninvalidating the API key is significantly different than the one performing the deletion,\nthe key may be retained for longer or shorter than the configured retention period.\n\n--\n\n`xpack.security.authc.api_key.delete.interval`::\n(<<dynamic-cluster-setting,Dynamic>>, Expert)\nCluster nodes schedule the automatic deletion of invalidated or expired API keys\nthat are older than the retention period.\nThis setting controls the minimum time interval between two such deletion jobs.\nDefaults to `24h`.\n+\nNOTE: This is a low-level setting that currently controls the interval between\ndeletion jobs triggered per-node, not across the cluster.\n\n`xpack.security.authc.api_key.delete.timeout`::\n(<<static-cluster-setting,Static>>, Expert)\nSets the timeout of the internal search and delete call.\n\n`xpack.security.authc.api_key.hashing.algorithm`::\n(<<static-cluster-setting,Static>>)\nSpecifies the hashing algorithm that is used for securing API key credentials.\nSee <<password-hashing-algorithms>>. Defaults to `pbkdf2`.\n\n[discrete]\n[[security-domain-settings]]\n==== Security domain settings\n// tag::security-domain-settings-description-tag[]\nYou configure security domain settings in the `xpack.security.authc.domains`\nnamespace in `elasticsearch.yml`.\n\nFor example:\n\n[source, yaml]\n------------------------------------------------------------\nxpack:\n  security:\n    authc:\n      domains:\n        my_domain: <1>\n          realms: [ 'default_native', 'saml1' ] <2>\n------------------------------------------------------------\n<1> Specifies the name of the security domain\n<2> Specifies the realms that belong to the domain\n// end::security-domain-settings-description-tag[]\n\n[discrete]\n[[realm-settings]]\n==== Realm settings\n// tag::realm-settings-description-tag[]\nYou configure realm settings in the `xpack.security.authc.realms`\nnamespace in `elasticsearch.yml`.\n\nFor example:\n\n[source,yaml]\n----------------------------------------\nxpack.security.authc.realms:\n\n    native.realm1: <1>\n        order: 0 <2>\n        ...\n\n    ldap.realm2:\n        order: 1\n        ...\n\n    active_directory.realm3:\n        order: 2\n        ...\n    ...\n----------------------------------------\n<1> Specifies the type of realm (for example, `native`, `ldap`,\n`active_directory`, `pki`, `file`, `kerberos`, `saml`) and the realm name. This\ninformation is required.\n<2> Specifies priority of a realm in the realm chain. This information\nis required.\n\nThe valid settings vary depending on the realm type. For more\ninformation, see <<setting-up-authentication>>.\n// end::realm-settings-description-tag[]\n\n[discrete]\n[[ref-realm-settings]]\n===== Settings valid for all realms\n// tag::realm-order-tag[]\n`order`::\n(<<static-cluster-setting,Static>>)\nThe priority of the realm within the realm chain. Realms with a lower order are\nconsulted first. The value must be unique for each realm. This setting is required.\n// end::realm-order-tag[]\n\n`enabled`::\n(<<static-cluster-setting,Static>>)\nIndicates whether a realm is enabled. You can use this setting to disable a\nrealm without removing its configuration information. Defaults to `true`.\n\n[[ref-native-settings]]\n[discrete]\n===== Native realm settings\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>,\nyou can specify the following optional settings:\n\n`cache.ttl`::\n(<<static-cluster-setting,Static>>)\nThe time-to-live for cached user entries. A user and a hash of its\ncredentials are cached for this period of time. Specify the time period using\nthe standard {es} <<time-units,time units>>. Defaults to `20m`.\n\n`cache.max_users`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of user entries that can live in the\ncache at any given time. Defaults to 100,000.\n\n`cache.hash_algo`::\n(<<static-cluster-setting,Static>>, Expert)\nThe hashing algorithm that is used for the\nin-memory cached user credentials. For possible values, see <<cache-hash-algo>>.\nDefaults to `ssha256`.\n\n`authentication.enabled`::\n(<<static-cluster-setting,Static>>)\nIf set to `false`, disables authentication support in\nthis realm, so that it only supports user lookups.\n(See the <<run-as-privilege,run as>> and\n<<authorization_realms,authorization realms>> features).\nDefaults to `true`.\n\n[[ref-users-settings]]\n\n[discrete]\n===== File realm settings\n\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>, you can specify\nthe following settings:\n\n`cache.ttl`::\n(<<static-cluster-setting,Static>>)\nThe time-to-live for cached user entries. A user and a hash of its credentials\nare cached for this configured period of time. Defaults to `20m`. Specify values\nusing the standard {es} <<time-units,time units>>.\nDefaults to `20m`.\n\n`cache.max_users`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of user entries that can live in the cache at a given time.\nDefaults to 100,000.\n\n`cache.hash_algo`::\n(<<static-cluster-setting,Static>>, Expert)\nThe hashing algorithm that is used for the in-memory cached\nuser credentials. See <<cache-hash-algo>>. Defaults to `ssha256`.\n\n`authentication.enabled`::\n(<<static-cluster-setting,Static>>)\nIf set to `false`, disables authentication support in\nthis realm, so that it only supports user lookups.\n(See the <<run-as-privilege,run as>> and\n<<authorization_realms,authorization realms>> features).\nDefaults to `true`.\n\n[[ref-ldap-settings]]\n[discrete]\n===== LDAP realm settings\n\nIn addition to the <<ref-realm-settings>>, you can specify the following settings:\n\n`url`::\n(<<static-cluster-setting,Static>>)\nOne or more LDAP URLs in the `ldap[s]://<server>:<port>` format. Required.\n+\nTo provide multiple URLs, use a YAML array (`[\"ldap://server1:636\", \"ldap://server2:636\"]`)\nor comma-separated string (`\"ldap://server1:636, ldap://server2:636\"`).\n+\nWhile both are supported, you can't mix the `ldap` and `ldaps` protocols.\n\n`load_balance.type`::\n(<<static-cluster-setting,Static>>)\nThe behavior to use when there are multiple LDAP URLs defined. For supported\nvalues see <<load-balancing,load balancing and failover types>>.\nDefaults to `failover`.\n\n`load_balance.cache_ttl`::\n(<<static-cluster-setting,Static>>)\nWhen using `dns_failover` or `dns_round_robin` as the load balancing type,\nthis setting controls the amount of time to cache DNS lookups. Defaults\nto `1h`.\n\n`bind_dn`::\n(<<static-cluster-setting,Static>>)\nThe DN of the user that is used to bind to the LDAP and perform searches.\nOnly applicable in user search mode.\nIf not specified, an anonymous bind is attempted.\nDefaults to Empty. Due to its potential security impact, `bind_dn` is not\nexposed via the <<cluster-nodes-info,nodes info API>>.\n\n`bind_password`::\n(<<static-cluster-setting,Static>>)\ndeprecated[6.3] Use `secure_bind_password` instead. The password for the user\nthat is used to bind to the LDAP directory.\nDefaults to Empty. Due to its potential security impact, `bind_password` is not\nexposed via the <<cluster-nodes-info,nodes info API>>.\n\n`secure_bind_password`::\n(<<secure-settings,Secure>>, <<reloadable-secure-settings,Reloadable>>)\nThe password for the user that is used to bind to the LDAP directory.\nDefaults to Empty.\n\n`user_dn_templates`::\n(<<static-cluster-setting,Static>>)\nThe DN template that replaces the user name with the string `{0}`.\nThis setting is multivalued; you can specify multiple user contexts.\nRequired to operate in user template mode. If `user_search.base_dn` is specified,\nthis setting is not valid. For more information on\nthe different modes, see <<ldap-realm>>.\n\n`authorization_realms`::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the LDAP realm does not perform role mapping and\ninstead loads the user from the listed realms. The referenced realms are\nconsulted in the order that they are defined in this list.\nSee <<authorization_realms>>.\n+\n--\nNOTE: If any settings starting with `user_search` are specified, the\n`user_dn_templates` settings are ignored.\n\n--\n\n`user_group_attribute`::\n(<<static-cluster-setting,Static>>)\nSpecifies the attribute to examine on the user for group membership.\nIf any `group_search` settings are specified, this setting is ignored. Defaults\nto `memberOf`.\n\n`user_full_name_attribute`::\n(<<static-cluster-setting,Static>>)\nSpecifies the attribute to examine on the user for the full name of the user.\nDefaults to `cn`.\n\n`user_email_attribute`::\n(<<static-cluster-setting,Static>>)\nSpecifies the attribute to examine on the user for the email address of the user.\nDefaults to `mail`.\n\n`user_search.base_dn`::\n(<<static-cluster-setting,Static>>)\nSpecifies a container DN to search for users. Required\nto operated in user search mode. If `user_dn_templates` is specified, this\nsetting is not valid. For more information on\nthe different modes, see <<ldap-realm>>.\n\n`user_search.scope`::\n(<<static-cluster-setting,Static>>)\nThe scope of the user search. Valid values are `sub_tree`, `one_level` or\n`base`. `one_level` only searches objects directly contained within the\n`base_dn`. `sub_tree` searches all objects contained under `base_dn`.\n`base` specifies that the `base_dn` is the user object, and that it is\nthe only user considered. Defaults to `sub_tree`.\n\n`user_search.filter`::\n(<<static-cluster-setting,Static>>)\nSpecifies the filter used to search the directory in attempts to match\nan entry with the username provided by the user. Defaults to `(uid={0})`.\n`{0}` is substituted with the username provided when searching.\n\n`user_search.attribute`::\n(<<static-cluster-setting,Static>>)\ndeprecated[5.6] Use `user_search.filter` instead.\nThe attribute to match with the username sent with the request. Defaults to `uid`.\n\n`user_search.pool.enabled`::\n(<<static-cluster-setting,Static>>)\nEnables or disables connection pooling for user search. If set to `false`, a new\nconnection is created for every search. The\ndefault is `true` when `bind_dn` is set.\n\n`user_search.pool.size`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of connections to the LDAP server to allow in the\nconnection pool. Defaults to `20`.\n\n`user_search.pool.initial_size`::\n(<<static-cluster-setting,Static>>)\nThe initial number of connections to create to the LDAP server on startup.\nDefaults to `0`. If the LDAP server is down, values greater than `0` could cause\nstartup failures.\n\n`user_search.pool.health_check.enabled`::\n(<<static-cluster-setting,Static>>)\nEnables or disables a health check on LDAP connections in the connection\npool. Connections are checked in the background at the specified interval.\nDefaults to `true`.\n\n`user_search.pool.health_check.dn`::\n(<<static-cluster-setting,Static>>)\nThe distinguished name that is retrieved as part of the health check.\nDefaults to the value of `bind_dn` if present; if\nnot, falls back to `user_search.base_dn`.\n\n`user_search.pool.health_check.interval`::\n(<<static-cluster-setting,Static>>)\nThe interval to perform background checks of connections in the pool.\nDefaults to `60s`.\n\n`group_search.base_dn`::\n(<<static-cluster-setting,Static>>)\nThe container DN to search for groups in which the user has membership. When\nthis element is absent, {es} searches for the attribute specified by\n`user_group_attribute` set on the user in order to determine group membership.\n\n`group_search.scope`::\n(<<static-cluster-setting,Static>>)\nSpecifies whether the group search should be `sub_tree`, `one_level` or\n`base`.  `one_level` only searches objects directly contained within the\n`base_dn`. `sub_tree` searches all objects contained under `base_dn`.\n`base` specifies that the `base_dn` is a group object, and that it is the\nonly group considered. Defaults to  `sub_tree`.\n\n`group_search.filter`::\n(<<static-cluster-setting,Static>>)\nSpecifies a filter to use to look up a group.\nWhen not set, the realm searches for `group`, `groupOfNames`, `groupOfUniqueNames`,\nor `posixGroup` with the attributes `member`, `memberOf`, or `memberUid`. Any\ninstance of `{0}` in the filter is replaced by the user attribute defined in\n`group_search.user_attribute`.\n\n`group_search.user_attribute`::\n(<<static-cluster-setting,Static>>)\nSpecifies the user attribute that is fetched and provided as a parameter to\nthe filter. If not set, the user DN is passed into the filter. Defaults to Empty.\n\n`unmapped_groups_as_roles`::\n(<<static-cluster-setting,Static>>)\nIf set to `true`, the names of any unmapped LDAP groups are used as role names\nand assigned to the user. A group is considered to be _unmapped_ if it is not\nreferenced in a <<mapping-roles-file,role-mapping file>>. API-based\nrole mappings are not considered. Defaults to `false`.\n\n`files.role_mapping`::\n(<<static-cluster-setting,Static>>)\nThe <<security-files,location>> for the\n<<mapping-roles,YAML role mapping configuration file>>. Defaults to\n`ES_PATH_CONF/role_mapping.yml`.\n\n`follow_referrals`::\n(<<static-cluster-setting,Static>>)\nSpecifies whether {es} should follow referrals returned\nby the LDAP server. Referrals are URLs returned by the server that are to be\nused to continue the LDAP operation (for example, search). Defaults to `true`.\n\n`metadata`::\n(<<static-cluster-setting,Static>>)\nA list of additional LDAP attributes that should be loaded from the\nLDAP server and stored in the authenticated user's metadata field.\n\n`timeout.tcp_connect`::\n(<<static-cluster-setting,Static>>)\nThe TCP connect timeout period for establishing an LDAP connection.\nAn `s` at the end indicates seconds, or `ms` indicates milliseconds.\nDefaults to `5s` (5 seconds ).\n\n`timeout.tcp_read`::\n(<<static-cluster-setting,Static>>)\ndeprecated[7.7] The TCP read timeout period after establishing an LDAP\nconnection. This is equivalent to and is deprecated in favor of\n`timeout.response` and they cannot be used simultaneously. An `s` at the end\nindicates seconds, or `ms` indicates milliseconds.\n\n`timeout.response`::\n(<<static-cluster-setting,Static>>)\nThe time interval to wait for the response from the LDAP server. An `s` at the\nend indicates seconds, or `ms` indicates milliseconds. Defaults to the value of\n`timeout.ldap_search`.\n\n`timeout.ldap_search`::\n(<<static-cluster-setting,Static>>)\nThe timeout period for an LDAP search. The value is specified in the request\nand is enforced by the receiving LDAP Server.\nAn `s` at the end indicates seconds, or `ms` indicates milliseconds.\nDefaults to `5s` (5 seconds ).\n\n`ssl.key`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-pem]\n+\nIf the LDAP server requires client authentication, it uses this file. You cannot\nuse this setting and `ssl.keystore.path` at the same time.\n\n`ssl.key_passphrase`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-passphrase]\n\n`ssl.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-secure-key-passphrase]\n\n`ssl.certificate`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate]\n+\nThis certificate is presented to clients when they connect.\n\n`ssl.certificate_authorities`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate-authorities]\n+\nYou cannot use this setting and `ssl.truststore.path` at the same time.\n\n`ssl.keystore.path`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-path]\n+\nYou cannot use this setting and `ssl.key` at the same time.\n\n`ssl.keystore.type`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-type-pkcs12]\n\n`ssl.keystore.password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-password]\n\n`ssl.keystore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-password]\n\n`ssl.keystore.key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-key-password]\n\n`ssl.keystore.secure_key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-key-password]\n\n`ssl.truststore.path`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-path]\n+\nYou cannot use this setting and `ssl.certificate_authorities` at the same time.\n\n`ssl.truststore.password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\n\n`ssl.truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n\n`ssl.truststore.type`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-type]\n\n`ssl.verification_mode`::\n(<<static-cluster-setting,Static>>)\nIndicates the type of verification when using `ldaps` to protect against man\nin the middle attacks and certificate forgery.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-verification-mode-values]\n\n`ssl.supported_protocols`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-supported-protocols]\n\n`ssl.cipher_suites`::\n(<<static-cluster-setting,Static>>)\nSpecifies the cipher suites that should be supported when\ncommunicating with the LDAP server.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-cipher-suites-values]\n//TBD: Can this be updated to using the Java 11 URL instead or does it have to stay java8?\n\n`cache.ttl`::\n(<<static-cluster-setting,Static>>)\nSpecifies the time-to-live for cached user entries. A user and a hash of its\ncredentials are cached for this period of time. Use the standard {es}\n<<time-units,time units>>. Defaults to  `20m`.\n\n`cache.max_users`::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of user entries that the cache can contain.\nDefaults to `100000`.\n\n`cache.hash_algo`::\n(<<static-cluster-setting,Static>>, Expert)\nSpecifies the hashing algorithm that is used for the\nin-memory cached user credentials. See <<cache-hash-algo>>. Defaults to `ssha256`.\n\n`authentication.enabled`::\n(<<static-cluster-setting,Static>>)\nIf set to `false`, disables authentication support in\nthis realm, so that it only supports user lookups.\n(See the <<run-as-privilege,run as>> and\n<<authorization_realms,authorization realms>> features).\nDefaults to `true`.\n\n[[ref-ad-settings]]\n[discrete]\n===== Active Directory realm settings\n\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>,\nyou can specify the following settings:\n\n`url`::\n(<<static-cluster-setting,Static>>)\nOne or more LDAP URLs in the `ldap[s]://<server>:<port>` format. Defaults to\n`ldap://<domain_name>:389`. This setting is required when connecting using\nSSL/TLS or when using a custom port.\n+\nTo provide multiple URLs, use a YAML array (`[\"ldap://server1:636\", \"ldap://server2:636\"]`)\nor comma-separated string (`\"ldap://server1:636, ldap://server2:636\"`).\n+\nWhile both are supported, you can't mix the `ldap` and `ldaps` protocols.\n+\nIf no URL is provided, {es} uses a default of `ldap://<domain_name>:389`. This\ndefault uses the `domain_name` setting value and assumes an unencrypted\nconnection to port 389.\n\n`load_balance.type`::\n(<<static-cluster-setting,Static>>)\nThe behavior to use when there are multiple LDAP URLs defined. For supported\nvalues see <<load-balancing,load balancing and failover types>>.\nDefaults to `failover`.\n\n`load_balance.cache_ttl`::\n(<<static-cluster-setting,Static>>)\nWhen using `dns_failover` or `dns_round_robin` as the load balancing type,\nthis setting controls the amount of time to cache DNS lookups. Defaults\nto `1h`.\n\n`domain_name`::\n(<<static-cluster-setting,Static>>)\nThe domain name of Active Directory. If the `url` and the `user_search.base_dn`\nsettings are not specified, the cluster can derive those values from this\nsetting. Required.\n\n`bind_dn`::\n(<<static-cluster-setting,Static>>)\nThe DN of the user that is used to bind to Active Directory and perform searches.\nDefaults to Empty. Due to its potential security impact, `bind_dn` is not\nexposed via the <<cluster-nodes-info,nodes info API>>.\n\n`bind_password`::\n(<<static-cluster-setting,Static>>)\ndeprecated[6.3] Use `secure_bind_password` instead. The password for the user\nthat is used to bind to Active Directory. Defaults to Empty. Due to its\npotential security impact, `bind_password` is not exposed via the\n<<cluster-nodes-info,nodes info API>>.\n\n`secure_bind_password`::\n(<<secure-settings,Secure>>, <<reloadable-secure-settings,Reloadable>>)\nThe password for the user that is used to bind to Active Directory.\nDefaults to Empty.\n\n`unmapped_groups_as_roles`::\n(<<static-cluster-setting,Static>>)\nIf set to `true`, the names of any unmapped Active Directory groups are used as\nrole names and assigned to the user. A group is considered _unmapped_ when it\nis not referenced in any role-mapping files. API-based role mappings are not\nconsidered. Defaults to `false`.\n\n`files.role_mapping`::\n(<<static-cluster-setting,Static>>)\nThe <<security-files,location>> for the YAML\nrole mapping configuration file. Defaults to `ES_PATH_CONF/role_mapping.yml`.\n\n`user_search.base_dn`::\n(<<static-cluster-setting,Static>>)\nThe context to search for a user. Defaults to the root\nof the Active Directory domain.\n\n`user_search.scope`::\n(<<static-cluster-setting,Static>>)\nSpecifies whether the user search should be `sub_tree`, `one_level` or `base`.\n`one_level` only searches users directly contained within the `base_dn`.\n`sub_tree` searches all objects contained under `base_dn`. `base`\nspecifies that the `base_dn` is a user object, and that it is the\nonly user considered. Defaults to `sub_tree`.\n\n`user_search.filter`::\n(<<static-cluster-setting,Static>>)\nSpecifies a filter to use to lookup a user given a username. The default\nfilter looks up `user` objects with either `sAMAccountName` or\n`userPrincipalName`. If specified, this must be a valid LDAP user search filter.\nFor example `(&(objectClass=user)(sAMAccountName={0}))`. For more information,\nsee\nhttps://msdn.microsoft.com/en-us/library/aa746475(v=vs.85).aspx[Search Filter Syntax].\n\n`user_search.upn_filter`::\n(<<static-cluster-setting,Static>>)\nSpecifies a filter to use to lookup a user given a user principal name.\nThe default filter looks up `user` objects with\na matching `userPrincipalName`. If specified, this\nmust be a valid LDAP user search filter. For example,\n`(&(objectClass=user)(userPrincipalName={1}))`. `{1}` is the full user principal name\nprovided by the user. For more information, see\nhttps://msdn.microsoft.com/en-us/library/aa746475(v=vs.85).aspx[Search Filter Syntax].\n\n`user_search.down_level_filter`::\n(<<static-cluster-setting,Static>>)\nSpecifies a filter to use to lookup a user given a down level logon name\n(DOMAIN\\user). The default filter looks up `user` objects with a matching\n`sAMAccountName` in the domain provided. If specified, this\nmust be a valid LDAP user search filter. For example,\n`(&(objectClass=user)(sAMAccountName={0}))`. For more information, see\nhttps://msdn.microsoft.com/en-us/library/aa746475(v=vs.85).aspx[Search Filter Syntax].\n\n`user_search.pool.enabled`::\n(<<static-cluster-setting,Static>>)\nEnables or disables connection pooling for user search. When\ndisabled a new connection is created for every search. The\ndefault is `true` when `bind_dn` is provided.\n\n`user_search.pool.size`::\n(<<static-cluster-setting,Static>>)\nThe maximum number of connections to the Active Directory server to allow in the\nconnection pool. Defaults to `20`.\n\n`user_search.pool.initial_size`::\n(<<static-cluster-setting,Static>>)\nThe initial number of connections to create to the Active Directory server on startup.\nDefaults to `0`. If the LDAP server is down, values greater than 0\ncould cause startup failures.\n\n`user_search.pool.health_check.enabled`::\n(<<static-cluster-setting,Static>>)\nEnables or disables a health check on Active Directory connections in the connection\npool. Connections are checked in the background at the specified interval.\nDefaults to `true`.\n\n`user_search.pool.health_check.dn`::\n(<<static-cluster-setting,Static>>)\nThe distinguished name to be retrieved as part of the health check.\nDefaults to the value of `bind_dn` if that setting is present. Otherwise, it\ndefaults to the value of the `user_search.base_dn` setting.\n\n`user_search.pool.health_check.interval`::\n(<<static-cluster-setting,Static>>)\nThe interval to perform background checks of connections in the pool.\nDefaults to `60s`.\n\n`group_search.base_dn`::\n(<<static-cluster-setting,Static>>)\nThe context to search for groups in which the user has membership. Defaults\nto the root of the Active Directory domain.\n\n`group_search.scope`::\n(<<static-cluster-setting,Static>>)\nSpecifies whether the group search should be `sub_tree`, `one_level` or\n`base`.  `one_level` searches for groups directly contained within the\n`base_dn`. `sub_tree` searches all objects contained under `base_dn`.\n`base` specifies that the `base_dn` is a group object, and that it is\nthe only group considered. Defaults to `sub_tree`.\n\n`metadata`::\n(<<static-cluster-setting,Static>>)\nA list of additional LDAP attributes that should be loaded from the\nLDAP server and stored in the authenticated user's metadata field.\n\n`timeout.tcp_connect`::\n(<<static-cluster-setting,Static>>)\nThe TCP connect timeout period for establishing an LDAP connection.\nAn `s` at the end indicates seconds, or `ms` indicates milliseconds.\nDefaults to `5s` (5 seconds ).\n\n`timeout.tcp_read`::\n(<<static-cluster-setting,Static>>)\ndeprecated[7.7] The TCP read timeout period after establishing an LDAP\nconnection. This is equivalent to and is deprecated in favor of\n`timeout.response` and they cannot be used simultaneously. An `s` at the end\nindicates seconds, or `ms` indicates milliseconds. Defaults to the value of\n`timeout.ldap_search`.\n\n`timeout.response`::\n(<<static-cluster-setting,Static>>)\nThe time interval to wait for the response from the AD server. An `s` at the\nend indicates seconds, or `ms` indicates milliseconds. Defaults to the value of\n`timeout.ldap_search`.\n\n`timeout.ldap_search`::\n(<<static-cluster-setting,Static>>)\nThe timeout period for an LDAP search. The value is specified in the request\nand is enforced by the receiving LDAP Server.\nAn `s` at the end indicates seconds, or `ms` indicates milliseconds.\nDefaults to `5s` (5 seconds ).\n\n`ssl.certificate`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate]\n+\nThis certificate is presented to clients when they connect.\n\n`ssl.certificate_authorities`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate-authorities]\n+\nYou cannot use this setting and `ssl.truststore.path` at the same time.\n\n`ssl.key`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-pem]\n+\nIf the Active Directory server requires client authentication, it uses this file.\nYou cannot use this setting and `ssl.keystore.path` at the same time.\n\n`ssl.key_passphrase`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-passphrase]\n\n`ssl.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-secure-key-passphrase]\n\n`ssl.keystore.key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-key-password]\n\n`ssl.keystore.secure_key_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-key-password]\n\n`ssl.keystore.password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-password]\n\n`ssl.secure_keystore.password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-password]\n//TBD: Why/how is this different than `ssl.keystore.secure_password`?\n\n`ssl.keystore.path`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-path]\n+\nYou cannot use this setting and `ssl.key` at the same time.\n\n`ssl.keystore.type`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-type-pkcs12]\n\n`ssl.truststore.password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\n\n`ssl.truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n\n`ssl.truststore.path`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-path]\n+\nYou cannot use this setting and `ssl.certificate_authorities` at the same time.\n\n`ssl.truststore.type`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-type]\n\n`ssl.verification_mode`::\n(<<static-cluster-setting,Static>>)\nIndicates the type of verification when using `ldaps` to protect against man\nin the middle attacks and certificate forgery.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-verification-mode-values]\n\n`ssl.supported_protocols`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-supported-protocols]\n\n`ssl.cipher_suites`::\n(<<static-cluster-setting,Static>>)\nSpecifies the cipher suites that should be supported when\ncommunicating with the Active Directory server.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-cipher-suites-values]\n//TBD: Can this be updated to using the Java 11 URL instead or does it have to stay java8?\n\n`cache.ttl`::\n(<<static-cluster-setting,Static>>)\nSpecifies the time-to-live for cached user entries. A user and a hash of its\ncredentials are cached for this configured period of time. Use the\nstandard Elasticsearch <<time-units,time units>>).\nDefaults to `20m`.\n\n`cache.max_users`::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of user entries that the cache can contain.\nDefaults to `100000`.\n\n`cache.hash_algo`::\n(<<static-cluster-setting,Static>>, Expert)\nSpecifies the hashing algorithm that is used for\nthe in-memory cached user credentials. See <<cache-hash-algo>>. Defaults to `ssha256`.\n\n`authentication.enabled`::\n(<<static-cluster-setting,Static>>)\nIf set to `false`, disables authentication support in\nthis realm, so that it only supports user lookups.\n(See the <<run-as-privilege,run as>> and\n<<authorization_realms,authorization realms>> features).\nDefaults to `true`.\n\n`follow_referrals`::\n(<<static-cluster-setting,Static>>)\nIf set to `true`, {es} follows referrals returned by the LDAP server.\nReferrals are URLs returned by the server that are to be used to continue the\nLDAP operation (such as `search`). Defaults to `true`.\n\n[[ref-pki-settings]]\n[discrete]\n===== PKI realm settings\n\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>, you can specify\nthe following settings:\n\n`username_pattern`::\n(<<static-cluster-setting,Static>>)\nThe regular expression pattern used to extract the username from the\ncertificate DN. The username is used for auditing and logging. The username can also be used\nwith the <<role-mapping-resources, role mapping API>> and <<configuring-authorization-delegation, authorization delegation>>.\nThe first match group is the used as the username.\nDefaults to `CN=(.*?)(?:,|$)`.\n\n`certificate_authorities`::\n(<<static-cluster-setting,Static>>)\nList of paths to the PEM certificate files that should be used to authenticate a\nuser's certificate as trusted. Defaults to the trusted certificates configured\nfor SSL. This setting cannot be used with `truststore.path`.\n\n`truststore.algorithm`::\n(<<static-cluster-setting,Static>>)\nAlgorithm for the truststore. Defaults to `SunX509`.\n\n`truststore.password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\nIf `truststore.path` is set, this setting is required.\n\n`truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n\n`truststore.path`::\n(<<static-cluster-setting,Static>>)\nThe path of a truststore to use. Defaults to the trusted certificates configured\nfor SSL. This setting cannot be used with `certificate_authorities`.\n\n`files.role_mapping`::\n(<<static-cluster-setting,Static>>)\nSpecifies the <<security-files,location>> of the\n<<mapping-roles,YAML role mapping configuration file>>.\nDefaults to `ES_PATH_CONF/role_mapping.yml`.\n\n`authorization_realms`::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the PKI realm does not perform role mapping and\ninstead loads the user from the listed realms.\nSee <<authorization_realms>>.\n\n`cache.ttl`::\n(<<static-cluster-setting,Static>>)\nSpecifies the time-to-live for cached user entries. A user and a hash of its\ncredentials are cached for this period of time. Use the\nstandard {es} <<time-units,time units>>).\nDefaults to `20m`.\n\n`cache.max_users`::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of user entries that the cache can contain.\nDefaults to `100000`.\n\n`delegation.enabled`::\n(<<static-cluster-setting,Static>>)\nGenerally, in order for the clients to be authenticated by the PKI realm they\nmust connect directly to {es}. That is, they must not pass through proxies\nwhich terminate the TLS connection. In order to allow for a *trusted* and\n*smart* proxy, such as Kibana, to sit before {es} and terminate TLS\nconnections, but still allow clients to be authenticated on {es} by this realm,\nyou need to toggle this to `true`. Defaults to `false`. If delegation is\nenabled, then either `truststore.path` or `certificate_authorities` setting\nmust be defined. For more details, see <<pki-realm-for-proxied-clients,\nConfiguring authentication delegation for PKI realms>>.\n\n[[ref-saml-settings]]\n[discrete]\n===== SAML realm settings\n// tag::saml-description-tag[]\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>, you can specify\nthe following settings.\n// end::saml-description-tag[]\n\n// tag::saml-idp-entity-id-tag[]\n`idp.entity_id` {ess-icon}::\n (<<static-cluster-setting,Static>>)\nThe Entity ID of the SAML Identity Provider. An Entity ID is a URI with a\nmaximum length of 1024 characters. It can be a URL (https://idp.example.com/) or\na URN (`urn:example.com:idp`) and can be found in the configuration or the SAML\nmetadata of the Identity Provider.\n// end::saml-idp-entity-id-tag[]\n\n// tag::saml-idp-metadata-path-tag[]\n`idp.metadata.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe path _(recommended)_ or URL to a SAML 2.0 metadata file describing the\ncapabilities and configuration of the Identity Provider.\nIf a path is provided, then it is resolved relative to the {es} config\ndirectory.\nIf a URL is provided, then it must be either a `file` URL or a `https` URL.\n+\n{es} automatically polls this metadata resource and reloads\nthe IdP configuration when changes are detected.\nFile based resources are polled at a frequency determined by the global {es}\n`resource.reload.interval.high` setting, which defaults to 5 seconds.\nHTTPS resources are polled at a frequency determined by the realm's\n`idp.metadata.http.refresh` and `idp.metadata.http.minimum_refresh` settings.\n+\nIf the metadata resource is loaded from a file then the file must exist at node\nstartup, if it does not exist then the node will fail to start.\nIf the resource is loaded over HTTPS then (by default) the node will be tolerant\nof a failure to load the resource - the node will start and will continue to\npoll the URL for updates. The affected SAML realm will fail to authenticate\nusers until the problem is resolved. To force the node to fail if the metadata is\nunavailable set `idp.metadata.http.fail_on_error` to `true`.\n// end::saml-idp-metadata-path-tag[]\n\n// tag::saml-idp-metadata-http-refresh-tag[]\n`idp.metadata.http.fail_on_error`::\n(<<static-cluster-setting,Static>>)\nIf set to `true`, the realm will fail on startup (and prevent the node from starting)\nif it attempts to load metadata over HTTPS and that metadata is not available.\nIf set to `false` (the default), the node will start but the affected SAML realm will\nnot support user authentication until the metadata can be successfully loaded.\nThis setting is ignored if metadata is loaded from a file.\n// end::saml-idp-metadata-http-refresh-tag[]\n\n// tag::saml-idp-metadata-http-refresh-tag[]\n`idp.metadata.http.refresh` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the frequency with which `https` metadata is checked for changes.\nDefaults to `1h` (1 hour).\n+\nUnder some circumstances {es} may determine that the metadata needs to be checked\nmore frequently. This may occur if previous attempts to load the metadata\nencountered an error, or if the metadata indicates that it is due to expire in\nless than the configured refresh interval. In these cases {es} will poll more\noften, but never more frequently than `idp.metadata.http.minimum_refresh`.\nIf there is an attempt to authenticate against a realm that has not yet loaded\nmetadata successfully, that realm may attempt to load metadata outside of the\nconfigured polling frequency.\n// end::saml-idp-metadata-http-refresh-tag[]\n\n// tag::saml-idp-metadata-http-minimum-refresh-tag[]\n`idp.metadata.http.minimum_refresh`::\n(<<static-cluster-setting,Static>>)\nControls the minimum frequency with which `https` metadata is checked for\nchanges. In regular operation {es} will use the value of\n`idp.metadata.http.refresh` as the polling interval. However, under some\ncircumstances {es} may determine that it needs to poll more frequently.\nIn these cases, the `minimum_refresh` will set the minimum frequency at which\nthe metdata will be checked.\nDefaults to `5m` (5 minutes) and must not be set to a value greater than\n`idp.metadata.http.refresh`\n// end::saml-idp-metadata-http-minimum-refresh-tag[]\n\n// tag::saml-idp-use-single-logout-tag[]\n`idp.use_single_logout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nIndicates whether to utilise the Identity Provider's Single Logout service\n(if one exists in the IdP metadata file).\nDefaults to `true`.\n// end::saml-idp-use-single-logout-tag[]\n\n// tag::saml-sp-entity-id-tag[]\n`sp.entity_id` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Entity ID to use for this SAML Service Provider. This should be entered as a\nURI. We recommend that you use the base URL of your Kibana instance. For example,\n`https://kibana.example.com/`.\n// end::saml-sp-entity-id-tag[]\n\n// tag::saml-sp-acs-tag[]\n`sp.acs` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL of the Assertion Consumer Service within {kib}. Typically this is the\n\"api/security/saml/callback\" endpoint of your Kibana server. For example,\n`https://kibana.example.com/api/security/saml/callback`.\n// end::saml-sp-acs-tag[]\n\n// tag::saml-sp-logout-tag[]\n`sp.logout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL of the Single Logout service within {kib}. Typically this is the\n\"logout\" endpoint of your Kibana server. For example,\n`https://kibana.example.com/logout`.\n// end::saml-sp-logout-tag[]\n\n// tag::saml-attributes-principal-tag[]\n`attributes.principal` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Name of the SAML attribute that contains the user's principal (username).\n// end::saml-attributes-principal-tag[]\n\n// tag::saml-attributes-groups-tag[]\n`attributes.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Name of the SAML attribute that contains the user's groups.\n// end::saml-attributes-groups-tag[]\n\n// tag::saml-attributes-name-tag[]\n`attributes.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Name of the SAML attribute that contains the user's full name.\n// end::saml-attributes-name-tag[]\n\n// tag::saml-attributes-mail-tag[]\n`attributes.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Name of the SAML attribute that contains the user's email address.\n// end::saml-attributes-mail-tag[]\n\n// tag::saml-attributes-dn-tag[]\n`attributes.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Name of the SAML attribute that contains the user's X.50\n_Distinguished Name_.\n// end::saml-attributes-dn-tag[]\n\n// tag::saml-attributes-patterns-principal-tag[]\n`attribute_patterns.principal` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA Java regular expression that is matched against the SAML attribute specified\nby `attributes.principal` before it is applied to the user's _principal_ property.\nThe attribute value must match the pattern and the value of the first\n_capturing group_ is used as the principal. For example, `^([^@]+)@example\\\\.com$`\nmatches email addresses from the \"example.com\" domain and uses the local-part as\nthe principal.\n// end::saml-attributes-patterns-principal-tag[]\n\n// tag::saml-attributes-patterns-groups-tag[]\n`attribute_patterns.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `attribute_patterns.principal`, but for the _group_ property.\n// end::saml-attributes-patterns-groups-tag[]\n\n// tag::saml-attributes-patterns-name-tag[]\n`attribute_patterns.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `attribute_patterns.principal`, but for the _name_ property.\n// end::saml-attributes-patterns-name-tag[]\n\n// tag::saml-attributes-patterns-mail-tag[]\n`attribute_patterns.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `attribute_patterns.principal`, but for the _mail_ property.\n// end::saml-attributes-patterns-mail-tag[]\n\n// tag::saml-attributes-patterns-dn-tag[]\n`attribute_patterns.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `attribute_patterns.principal`, but for the _dn_ property.\n// end::saml-attributes-patterns-dn-tag[]\n\n// tag::saml-attributes-delimiters-groups-tag[]\n`attribute_delimiters.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA plain string that is used as a delimiter to split a single-valued SAML\nattribute specified by `attributes.groups` before it is applied to the user's\n_groups_ property. For example, splitting the SAML attribute value\n`engineering,elasticsearch-admins,employees` on a delimiter value of `,` will\nresult in `engineering`, `elasticsearch-admins`, and `employees` as the list of\ngroups for the user. The delimiter will always be split on, regardless of\nescaping in the input string. This setting does not support multi-valued SAML\nattributes. It cannot be used together with the `attribute_patterns` setting.\nYou can only configure this setting for the groups attribute.\n// end::saml-attributes-delimiters-groups-tag[]\n\n// tag::saml-nameid-format-tag[]\n`nameid_format` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe NameID format that should be requested when asking the IdP to authenticate\nthe current user. The default is to not include the `nameid_format` attribute.\n// end::saml-nameid-format-tag[]\n\n// tag::saml-nameid-allow-create-tag[]\n`nameid.allow_create` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe value of the `AllowCreate` attribute of the\n`NameIdPolicy` element in an authentication request. The default value is false.\n// end::saml-nameid-allow-create-tag[]\n\n// tag::saml-nameid-sp-qualifier-tag[]\n`nameid.sp_qualifier` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe value of the `SPNameQualifier` attribute of the\n`NameIdPolicy` element in an authentication request. The default is to not\ninclude the `SPNameQualifier` attribute.\n// end::saml-nameid-sp-qualifier-tag[]\n\n// tag::saml-force-authn-tag[]\n`force_authn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies whether to set the `ForceAuthn` attribute when requesting that the IdP\nauthenticate the current user. If set to `true`, the IdP is required to verify\nthe user\u2019s identity, irrespective of any existing sessions they might have.\nDefaults to `false`.\n// end::saml-force-authn-tag[]\n\n// tag::saml-populate-user-metadata-tag[]\n`populate_user_metadata` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies whether to populate the {es} user's metadata with the values that are\nprovided by the SAML attributes. Defaults to `true`.\n// end::saml-populate-user-metadata-tag[]\n\n`authorization_realms`::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the SAML realm does not perform role mapping and\ninstead loads the user from the listed realms.\nSee <<authorization_realms>>.\n\n// tag::saml-allowed-clock-skew-tag[]\n`allowed_clock_skew` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe maximum amount of skew that can be tolerated between the IdP's clock and the\n{es} node's clock.\nDefaults to `3m` (3 minutes).\n// end::saml-allowed-clock-skew-tag[]\n\n// tag::saml-req-authn-context-tag[]\n`req_authn_context_class_ref` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA comma separated list of Authentication Context Class Reference values to be\nincluded in the Requested Authentication Context when requesting the IdP to\nauthenticate the current user. The Authentication Context of the corresponding\nauthentication response should contain at least one of the requested values.\n+\nFor more information, see\n<<req-authn-context>>.\n// end::saml-req-authn-context-tag[]\n\n[discrete]\n[[ref-saml-signing-settings]]\n===== SAML realm signing settings\n// tag::saml-signing-description-tag[]\nIf a signing key is configured (that is, either `signing.key` or\n`signing.keystore.path` is set), then {es} signs outgoing SAML messages.\nSigning can be configured using the following settings:\n// end::saml-signing-description-tag[]\n\n// tag::saml-signing-messages-tag[]\n`signing.saml_messages` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA list of SAML message types that should be signed or `*` to sign all messages.\nEach element in the list should be the local name of a SAML XML Element.\nSupported element types are `AuthnRequest`, `LogoutRequest` and `LogoutResponse`.\nOnly valid if `signing.key` or `signing.keystore.path` is also specified.\nDefaults to `*`.\n// end::saml-signing-messages-tag[]\n\n// tag::saml-signing-key-tag[]\n`signing.key` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the path to the PEM encoded private key to use for SAML message signing.\n`signing.key` and `signing.keystore.path` cannot be used at the same time.\n// end::saml-signing-key-tag[]\n\n`signing.secure_key_passphrase` {ess-icon}::\n(<<secure-settings,Secure>>)\nSpecifies the passphrase to decrypt the PEM encoded private key (`signing.key`)\nif it is encrypted.\n\n// tag::saml-signing-certificate-tag[]\n`signing.certificate` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the path to the PEM encoded certificate (or certificate chain) that\ncorresponds to the `signing.key`. This certificate must also be included in the\nService Provider metadata or manually configured within the IdP to allow for\nsignature validation. This setting can only be used if `signing.key` is set.\n// end::saml-signing-certificate-tag[]\n\n// tag::saml-signing-keystore-path-tag[]\n`signing.keystore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe path to the keystore that contains a private key and certificate. It must be\neither a Java keystore (jks) or a PKCS#12 file. You cannot use this setting and\n`signing.key` at the same time.\n// end::saml-signing-keystore-path-tag[]\n\n// tag::saml-signing-keystore-type-tag[]\n`signing.keystore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe type of the keystore in `signing.keystore.path`.\nMust be either `jks` or `PKCS12`. If the keystore path ends in \".p12\", \".pfx\",\nor \"pkcs12\", this setting defaults to `PKCS12`. Otherwise, it defaults to `jks`.\n// end::saml-signing-keystore-type-tag[]\n\n// tag::saml-signing-keystore-alias-tag[]\n`signing.keystore.alias` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the alias of the key within the keystore that should be\nused for SAML message signing. If the keystore contains more than one private\nkey, this setting must be specified.\n// end::saml-signing-keystore-alias-tag[]\n\n`signing.keystore.secure_password` {ess-icon}::\n(<<secure-settings,Secure>>)\nThe password to the keystore in `signing.keystore.path`.\n\n`signing.keystore.secure_key_password` {ess-icon}::\n(<<secure-settings,Secure>>)\nThe password for the key in the keystore (`signing.keystore.path`).\nDefaults to the keystore password.\n\n[discrete]\n[[ref-saml-encryption-settings]]\n===== SAML realm encryption settings\n// tag::saml-encryption-description-tag[]\nIf an encryption key is configured (that is, either `encryption.key` or\n`encryption.keystore.path` is set), then {es} publishes an encryption\ncertificate when generating metadata and attempts to decrypt incoming SAML\ncontent. Encryption can be configured using the following settings:\n// end::saml-encryption-description-tag[]\n\n// tag::saml-encryption-key-tag[]\n`encryption.key` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the path to the PEM encoded private key to use for SAML message\ndecryption.\n`encryption.key` and `encryption.keystore.path` cannot be used at the same time.\n// end::saml-encryption-key-tag[]\n\n`encryption.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\nSpecifies the passphrase to decrypt the PEM encoded private key\n(`encryption.key`) if it is encrypted.\n\n// tag::saml-encryption-certificate-tag[]\n`encryption.certificate` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the path to the PEM encoded certificate (or certificate chain) that is\nassociated with the `encryption.key`. This certificate must also be included in\nthe Service Provider metadata or manually configured within the IdP to enable\nmessage encryption. This setting can be used only if `encryption.key` is set.\n// end::saml-encryption-certificate-tag[]\n\n// tag::saml-encryption-keystore-path-tag[]\n`encryption.keystore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe path to the keystore that contains a private key and certificate. It must be\neither a Java keystore (jks) or a PKCS#12 file. You cannot use this setting and\n`encryption.key` at the same time.\n// end::saml-encryption-keystore-path-tag[]\n\n// tag::saml-encryption-keystore-type-tag[]\n`encryption.keystore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe type of the keystore (`encryption.keystore.path`).\nMust be either `jks` or `PKCS12`. If the keystore path ends in \".p12\", \".pfx\",\nor \"pkcs12\", this setting defaults to `PKCS12`. Otherwise, it defaults to `jks`.\n// end::saml-encryption-keystore-type-tag[]\n\n// tag::saml-encryption-keystore-alias-tag[]\n`encryption.keystore.alias` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the alias of the key within the keystore (`encryption.keystore.path`)\nthat should be used for SAML message decryption. If not specified, all compatible\nkey pairs from the keystore are considered as candidate keys for decryption.\n// end::saml-encryption-keystore-alias-tag[]\n\n`encryption.keystore.secure_password`::\n(<<secure-settings,Secure>>)\nThe password to the keystore (`encryption.keystore.path`).\n\n`encryption.keystore.secure_key_password`::\n(<<secure-settings,Secure>>)\nThe password for the key in the keystore (`encryption.keystore.path`). Only a\nsingle password is supported. If you are using multiple decryption keys,\nthey cannot have individual passwords.\n\n[discrete]\n[[ref-saml-ssl-settings]]\n===== SAML realm SSL settings\n// tag::saml-ssl-description-tag[]\nIf you are loading the IdP metadata over SSL/TLS (that is, `idp.metadata.path`\nis a URL using the `https` protocol), the following settings can be used to\nconfigure SSL.\n\nNOTE: These settings are not used for any purpose other than loading metadata\nover https.\n\n// end::saml-ssl-description-tag[]\n\n// tag::saml-ssl-key-tag[]\n`ssl.key` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-pem]\n// end::saml-ssl-key-tag[]\n\n// tag::saml-ssl-key-passphrase-tag[]\n`ssl.key_passphrase` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-passphrase]\n// end::saml-ssl-key-passphrase-tag[]\n\n`ssl.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-secure-key-passphrase]\n+\nYou cannot use this setting and `ssl.key_passphrase` at the same time.\n\n// tag::saml-ssl-certificate-tag[]\n`ssl.certificate` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate]\n// end::saml-ssl-certificate-tag[]\n\n// tag::saml-ssl-certificate-authorities-tag[]\n`ssl.certificate_authorities` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate-authorities]\n// end::saml-ssl-certificate-authorities-tag[]\n\n// tag::saml-ssl-keystore-path-tag[]\n`ssl.keystore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-path]\n// end::saml-ssl-keystore-path-tag[]\n\n// tag::saml-ssl-keystore-type[]\n`ssl.keystore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-type-pkcs12]\n// end::saml-ssl-keystore-type[]\n\n// tag::saml-ssl-keystore-password-tag[]\n`ssl.keystore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-password]\n// end::saml-ssl-keystore-password-tag[]\n\n`ssl.keystore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-password]\n+\nYou cannot use this setting and `ssl.keystore.password` at the same time.\n//TBD: Why is this different name than `ssl.secure_keystore.password` elsewhere in this file?\n\n`ssl.keystore.key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-key-password]\n+\nYou cannot use this setting and `ssl.keystore.secure_key_password` at the same\ntime.\n\n`ssl.keystore.secure_key_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-key-password]\nYou cannot use this setting and `ssl.keystore.key_password` at the same time.\n\n// tag::saml-ssl-truststore-path-tag[]\n`ssl.truststore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-path]\n// end::saml-ssl-truststore-path-tag[]\n\n// tag::saml-ssl-truststore-type-tag[]\n`ssl.truststore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-type]\n// end::saml-ssl-truststore-type-tag[]\n\n// tag::saml-ssl-truststore-password-tag[]\n`ssl.truststore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\n// end::saml-ssl-truststore-password-tag[]\n\n`ssl.truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n+\nThis setting cannot be used with `ssl.truststore.password`.\n\n// tag::saml-ssl-verification-mode-tag[]\n`ssl.verification_mode` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the verification of certificates.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-verification-mode-values]\n// end::saml-ssl-verification-mode-tag[]\n\n// tag::saml-ssl-supported-prototols-tag[]\n`ssl.supported_protocols` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-supported-protocols]\n// end::saml-ssl-supported-prototols-tag[]\n\n// tag::saml-ssl-cipher-suites-tag[]\n`ssl.cipher_suites` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-cipher-suites-values]\n// end::saml-ssl-cipher-suites-tag[]\n\n[discrete]\n[[ref-kerberos-settings]]\n===== Kerberos realm settings\n// tag::kerberos-description-tag[]\nIn addition to the\n<<ref-realm-settings,settings that are valid for all realms>>, you can specify\nthe following settings:\n// end::kerberos-description-tag[]\n\n// tag::kerberos-keytab-path-tag[]\n`keytab.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the path to the Kerberos keytab file that contains the\nservice principal used by this {es} node. This must be a location within the\n{es} configuration directory and the file must have read permissions. Required.\n// end::kerberos-keytab-path-tag[]\n\n// tag::kerberos-remove-realm-name-tag[]\n`remove_realm_name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSet to `true` to remove the realm part of principal names.\nPrincipal names in Kerberos have the form `user/instance@REALM`. If this option\nis `true`, the realm part (`@REALM`) will not be included in the username.\nDefaults to `false`.\n// end::kerberos-remove-realm-name-tag[]\n\n`krb.debug`::\n(<<static-cluster-setting,Static>>)\nSet to `true` to enable debug logs for the Java login module that\nprovides support for Kerberos authentication. Defaults to `false`.\n\n// tag::kerberos-cache-ttl-tag[]\n`cache.ttl` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe time-to-live for cached user entries. A user is cached for\nthis period of time. Specify the time period using the standard {es}\n<<time-units,time units>>. Defaults to `20m`.\n// end::kerberos-cache-ttl-tag[]\n\n// tag::kerberos-cache-max-users-tag[]\n`cache.max_users` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe maximum number of user entries that can live in the\ncache at any given time. Defaults to 100,000.\n// end::kerberos-cache-max-users-tag[]\n\n// tag::kerberos-authorization-realms-tag[]\n`authorization_realms` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the Kerberos realm does not perform role mapping and\ninstead loads the user from the listed realms.\nSee <<authorization_realms>>.\n// end::kerberos-authorization-realms-tag[]\n\n[[ref-oidc-settings]]\n[discrete]\n===== OpenID Connect realm settings\n// tag::oidc-description-tag[]\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>, you\ncan specify the following settings.\n// end::oidc-description-tag[]\n\n// tag::oidc-op-issuer-tag[]\n`op.issuer` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA verifiable Identifier for your OpenID Connect Provider. An Issuer\nIdentifier is usually a case sensitive URL using the https scheme that contains\nscheme, host, and optionally, port number and path components and no query or\nfragment components. The value for this setting should be provided by your OpenID\nConnect Provider.\n// end::oidc-op-issuer-tag[]\n\n// tag::oidc-op-auth-endpoint-tag[]\n`op.authorization_endpoint` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL for the Authorization Endpoint at the\nOpenID Connect Provider. The value for this setting should be provided by your OpenID\nConnect Provider.\n// end::oidc-op-auth-endpoint-tag[]\n\n// tag::oidc-token-endpoint-tag[]\n`op.token_endpoint` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL for the Token Endpoint at the OpenID Connect Provider.\nThe value for this setting should be provided by your OpenID Connect Provider.\n// end::oidc-token-endpoint-tag[]\n\n// tag::oidc-userinfo-endpoint-tag[]\n`op.userinfo_endpoint` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL for the User Info Endpoint at the OpenID Connect Provider.\nThe value for this setting should be provided by your OpenID Connect Provider.\n// end::oidc-userinfo-endpoint-tag[]\n\n// tag::oidc-endsession-endpoint-tag[]\n`op.endsession_endpoint` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe URL for the End Session Endpoint at the OpenID Connect\nProvider. The value for this setting should be provided by your OpenID Connect Provider.\n// end::oidc-endsession-endpoint-tag[]\n\n// tag::oidc-op-jwkset-path-tag[]\n`op.jwkset_path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\n\nThe file name or URL to a JSON Web Key Set (JWKS) with the public key material used to verify\ntokens and claims responses signed by the OpenID Connect Provider. A value is considered a file name\nif it does not begin with `https` or `http`. The file name\nis resolved relative to the {es} configuration directory.  Changes to the file are polled\nat a frequency determined by the global {es} `resource.reload.interval.high`\nsetting, which defaults to 5 seconds.\n+\nIf a URL is provided, then it must begin with `https://` or `http://`.\n{es} automatically caches the retrieved JWK and will attempt to refresh the JWK upon signature verification\nfailure, as this might indicate that the OpenID Connect Provider has\nrotated the signing keys.\n// end::oidc-op-jwkset-path-tag[]\n\n`authorization_realms`::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the OpenID Connect realm does not perform role\nmapping and instead loads the user from the listed realms.\nSee <<authorization_realms>>.\n\n// tag::rp-client-id-tag[]\n`rp.client_id` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe OAuth 2.0 Client Identifier that was assigned to {es} during registration\nat the OpenID Connect Provider.\n// end::rp-client-id-tag[]\n\n`rp.client_secret`::\n(<<secure-settings,Secure>>)\nThe OAuth 2.0 Client Secret that was assigned to {es} during registration\nat the OpenID Connect Provider.\n\n// tag::rp-client-auth-method-tag[]\n`rp.client_auth_method` {ess-icon}::\n(<<static-cluster-setting, Static>>)\nThe client authentication method used by {es} to authenticate\nto the OpenID Connect Provider. Can be `client_secret_basic`, `client_secret_post`,\nor `client_secret_jwt`. Defaults to `client_secret_basic`.\n// end::rp-client-auth-method-tag[]\n\n// tag::rp-client-auth-jwt-signature-algorithm[]\n`rp.client_auth_jwt_signature_algorithm` {ess-icon}::\n(<<static-cluster-setting, Static>>)\nThe signature algorithm that {es} uses to sign the JWT with which it authenticates\nas a client to the OpenID Connect Provider when `client_secret_jwt` is selected for\n`rp.client_auth_method`. Can be either `HS256`, `HS384`, or `HS512`. Defaults to\n`HS384`.\n// end::rp-client-auth-jwt-signature-algorithm[]\n\n// tag::rp-redirect-uri-tag[]\n`rp.redirect_uri` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Redirect URI within {kib}. If you want to use the authorization code flow, this is the\n`api/security/oidc/callback` endpoint of your {kib} server. If you want to use the implicit flow,  it is the `api/security/oidc/implicit` endpoint.\nFor example, `https://kibana.example.com/api/security/oidc/callback`.\n// end::rp-redirect-uri-tag[]\n\n// tag::rp-response-type-tag[]\n`rp.response_type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nOAuth 2.0 Response Type value that determines the authorization\nprocessing flow to be used. Can be `code` for authorization code grant flow,\nor one of `id_token`, `id_token token` for the implicit flow.\n// end::rp-response-type-tag[]\n\n// tag::rp-signature-algorithm-tag[]\n`rp.signature_algorithm` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe signature algorithm that will be used by {es} in order to verify the\nsignature of the id tokens it will receive from the OpenID Connect Provider.\nAllowed values are `HS256`, `HS384`, `HS512`, `ES256`, `ES384`, `ES512`,\n`RS256`, `RS384`, `RS512`, `PS256`, `PS384`, `PS512`.\nDefaults to `RS256`.\n\n// end::rp-signature-algorithm-tag[]\n\n// tag::rp-requested-scopes-tag[]\n`rp.requested_scopes` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe scope values that will be requested by the OpenID Connect Provider as\npart of the Authentication Request. Optional, defaults to `openid`\n// end::rp-requested-scopes-tag[]\n\n// tag::rp-post-logout-redirect-url-tag[]\n`rp.post_logout_redirect_uri` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe Redirect URI (usually within {kib}) that the OpenID Connect Provider\nshould redirect the browser to after a successful Single Logout.\n// end::rp-post-logout-redirect-url-tag[]\n\n// tag::oidc-claims-principal-tag[]\n`claims.principal`::\n(<<static-cluster-setting,Static>>)\nThe name of the OpenID Connect claim that contains the user's principal (username).\n// end::oidc-claims-principal-tag[]\n\n// tag::oidc-claims-groups-tag[]\n`claims.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the OpenID Connect claim that contains the user's groups.\n// end::oidc-claims-groups-tag[]\n\n// tag::oidc-claims-mail-tag[]\n`claims.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the OpenID Connect claim that contains the user's full name.\n// end::oidc-claims-mail-tag[]\n\n// tag::oidc-claims-mail-tag[]\n`claims.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the OpenID Connect claim that contains the user's email address.\n// end::oidc-claims-mail-tag[]\n\n// tag::oidc-claims-dn-tag[]\n`claims.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the OpenID Connect claim that contains the user's X.509\n_Distinguished Name_.\n// end::oidc-claims-dn-tag[]\n\n// tag::oidc-claim-pattern-principal-tag[]\n`claim_patterns.principal` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA Java regular expression that is matched against the OpenID Connect claim specified\nby `claims.principal` before it is applied to the user's _principal_ property.\nThe attribute value must match the pattern and the value of the first\n_capturing group_ is used as the principal. For example, `^([^@]+)@example\\\\.com$`\nmatches email addresses from the \"example.com\" domain and uses the local-part as\nthe principal.\n// end::oidc-claim-pattern-principal-tag[]\n\n// tag::oidc-claim-pattern-groups-tag[]\n`claim_patterns.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `claim_patterns.principal`, but for the _group_ property.\n// end::oidc-claim-pattern-groups-tag[]\n\n// tag::oidc-claim-pattern-name-tag[]\n`claim_patterns.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `claim_patterns.principal`, but for the _name_ property.\n// end::oidc-claim-pattern-name-tag[]\n\n// tag::oidc-claim-pattern-mail-tag[]\n`claim_patterns.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `claim_patterns.principal`, but for the _mail_ property.\n// end::oidc-claim-pattern-mail-tag[]\n\n// tag::oidc-claim-pattern-dn-tag[]\n`claim_patterns.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAs per `claim_patterns.principal`, but for the _dn_ property.\n// end::oidc-claim-pattern-dn-tag[]\n\n// tag::oidc-allowed-clock-skew-tag[]\n`allowed_clock_skew` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe maximum allowed clock skew to be taken into consideration when validating\nid tokens with regards to their creation and expiration times.\nDefaults to `60s`.\n// end::oidc-allowed-clock-skew-tag[]\n\n// tag::oidc-populate-user-metadata-tag[]\n`populate_user_metadata` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies whether to populate the {es} user's metadata with the values that are\nprovided by the OpenID Connect claims. Defaults to `true`.\n// end::oidc-populate-user-metadata-tag[]\n\n`http.proxy.host`::\n(<<static-cluster-setting,Static>>)\nSpecifies the address of the proxy server that will be used by the internal\nhttp client for all back-channel communication to the OpenID Connect Provider\nendpoints. This includes requests to the Token Endpoint, the Userinfo Endpoint\nand requests to fetch the JSON Web Key Set from the OP if `op.jwkset_path` is\nset as a URL.\n\n`http.proxy.scheme`::\n(<<static-cluster-setting,Static>>)\nSpecifies the protocol to use to connect to the proxy server that will be\nused by the http client for all back-channel communication to the OpenID\nConnect Provider endpoints. Defaults to `http`. Allowed values are\n`http` or `https`.\n\n`http.proxy.port`::\n(<<static-cluster-setting,Static>>)\nSpecifies the port of the proxy server that will be used by the http\nclient for all backchannel communication to the OpenID Connect Provider\nendpoints. Defaults to `80`.\n\n// tag::oidc-http-connect-timeout-tag[]\n`http.connect_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the timeout until a connection\n is established. A value of zero means the timeout is not used. Defaults to `5s`.\n// end::oidc-http-connect-timeout-tag[]\n\n// tag::oidc-http-read-timeout-tag[]\n`http.connection_read_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the timeout used when\nrequesting a connection from the connection manager. Defaults to `5s`\n// end::oidc-http-read-timeout-tag[]\n\n// tag::oidc-http-socket-timeout[]\n`http.socket_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the socket timeout (SO_TIMEOUT)\nin milliseconds, which is the timeout for waiting for data or, put differently,\na maximum period inactivity between two consecutive data packets). Defaults to\n`5s`.\n// end::oidc-http-socket-timeout[]\n\n// tag::oidc-http-max-connections-tag[]\n`http.max_connections` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the maximum number of\nconnections allowed across all endpoints.\nDefaults to `200`.\n// end::oidc-http-max-connections-tag[]\n\n// tag::oidc-http-max-endpoint-connections-tag[]\n`http.max_endpoint_connections` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the maximum number of\nconnections allowed per endpoint.\nDefaults to `200`.\n// end::oidc-http-max-endpoint-connections-tag[]\n\n// tag::oidc-http-tcp-keepalive-tag[]\n`http.tcp.keep_alive` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nWhether to enable TCP keepalives on HTTP connections used for back-channel communication\nto the OpenID Connect Provider endpoints. Defaults to `true`.\n// end::oidc-http-tcp-keepalive-tag[]\n\n// tag::oidc-http-connection-pool-ttl-tag[]\n`http.connection_pool_ttl` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the behavior of the http client used for back-channel communication to\nthe OpenID Connect Provider endpoints. Specifies the time-to-live of connections\nin the connection pool (default to 3 minutes). A connection is closed if it is\nidle for more than the specified timeout.\n\nThe server can also set the `Keep-Alive` HTTP response header. The effective\ntime-to-live value is the smaller value between this setting and the `Keep-Alive`\nresponse header. Configure this setting to `-1` to let the server dictate the value.\nIf the header is not set by the server and the setting has value of `-1`,\nthe time-to-live is infinite and connections never expire.\n// end::oidc-http-connection-pool-ttl-tag[]\n\n[discrete]\n[[ref-oidc-ssl-settings]]\n===== OpenID Connect realm SSL settings\n// tag::oidc-ssl-description-tag[]\nThe following settings can be used to configure SSL for all outgoing http connections\nto the OpenID Connect Provider endpoints.\n\nNOTE: These settings are _only_ used for the back-channel communication between\n{es} and the OpenID Connect Provider\n\n// end::oidc-ssl-description-tag[]\n\n// tag::oidc-ssl-key-tag[]\n`ssl.key` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-pem]\n// end::oidc-ssl-key-tag[]\n\n// tag::oidc-ssl-key-passphrase-tag[]\n`ssl.key_passphrase` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-passphrase]\n// end::oidc-ssl-key-passphrase-tag[]\n\n`ssl.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-secure-key-passphrase]\n+\nYou cannot use this setting and `ssl.key_passphrase` at the same time.\n\n// tag::oidc-ssl-certificate-tag[]\n`ssl.certificate` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate]\n// end::oidc-ssl-certificate-tag[]\n\n// tag::oidc-ssl-certificate-authorities-tag[]\n`ssl.certificate_authorities` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate-authorities]\n// end::oidc-ssl-certificate-authorities-tag[]\n\n// tag::oidc-ssl-keystore-path-tag[]\n`ssl.keystore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-path]\n// end::oidc-ssl-keystore-path-tag[]\n\n// tag::oidc-ssl-keystore-type-tag[]\n`ssl.keystore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-type-pkcs12]\n// end::oidc-ssl-keystore-type-tag[]\n\n// tag::oidc-ssl-keystore-password-tag[]\n`ssl.keystore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-password]\n// end::oidc-ssl-keystore-password-tag[]\n\n`ssl.keystore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-password]\n+\nYou cannot use this setting and `ssl.keystore.password` at the same time.\n\n`ssl.keystore.key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-key-password]\n+\nYou cannot use this setting and `ssl.keystore.secure_key_password` at the same\ntime.\n\n`ssl.keystore.secure_key_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-key-password]\n+\nYou cannot use this setting and `ssl.keystore.key_password` at the same time.\n\n// tag::oidc-ssl-truststore-path-tag[]\n`ssl.truststore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-path]\n// end::oidc-ssl-truststore-path-tag[]\n\n// tag::oidc-ssl-truststore-type-tag[]\n`ssl.truststore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-type]\n// end::oidc-ssl-truststore-type-tag[]\n\n// tag::oidc-ssl-truststore-password-tag[]\n`ssl.truststore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\n// end::oidc-ssl-truststore-password-tag[]\n\n`ssl.truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n+\nYou cannot use this setting and `ssl.truststore.password` at the same time.\n\n// tag::oidc-ssl-verification-mode-tag[]\n`ssl.verification_mode` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the verification of certificates.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-verification-mode-values]\n// end::oidc-ssl-verification-mode-tag[]\n\n// tag::oidc-ssl-supported-protocols-tag[]\n`ssl.supported_protocols` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-supported-protocols]\n// end::oidc-ssl-supported-protocols-tag[]\n\n// tag::oidc-ssl-cipher-suites-tag[]\n`ssl.cipher_suites` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-cipher-suites-values]\n// end::oidc-ssl-cipher-suites-tag[]\n\n[[ref-jwt-settings]]\n[discrete]\n===== JWT realm settings\n// tag::jwt-description-tag[]\nIn addition to the <<ref-realm-settings,settings that are valid for all realms>>, you\ncan specify the following settings.\n// end::jwt-description-tag[]\n\n// tag::jwt-token-type-tag[]\n`token_type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe token type, `id_token` or `access_token`, that the JWT realm uses to verify\nincoming JWTs. Defaults to `id_token`.\n// end::jwt-token-type-tag[]\n\n// tag::jwt-allowed-audiences-tag[]\n`allowed_audiences` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA list of allowed JWT audiences that {es} should verify. {es} will only consume\nJWTs that were intended for any of these audiences, as denoted by the `aud`\nclaim in the JWT).\nThe audiences are compared with exact string matches and do not support wildcards or regex.\nExamples of `aud` claim are `https://example.com/client1`\nand `other_service,elasticsearch`. When `token_type` is `access_token`, the audiences can\nbe optionally denoted by a different claim in the JWT if `aud` does not exist.\nSee also <<security-settings-jwt-fallback-claims-aud,`fallback_claims.aud`>>.\n// end::jwt-allowed-audiences-tag[]\n\n// tag::jwt-allowed-clock-skew-tag[]\n`allowed_clock_skew` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe maximum allowed clock skew to be taken into consideration when validating\nJWTs with regards to their creation, not before, and expiration times.\n// end::jwt-allowed-clock-skew-tag[]\n\n// tag::jwt-allowed-issuer-tag[]\n`allowed_issuer` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA verifiable Identifier for your JWT Issuer. An Issuer\nIdentifier is usually a case sensitive URL using the https scheme that contains\nscheme, host, and optionally, port number and path components and no query or\nfragment components. However, it can be any string. The value for this setting\nshould be provided by your JWT Issuer.\nThe issuer is compared with exact string matches and do not support wildcards or regex.\nExamples of `iss` claim are `https://example.com:8443/jwt` and `issuer123`.\n// end::jwt-allowed-issuer-tag[]\n\n// tag::jwt-allowed-subjects-tag[]\n`allowed_subjects` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA list of allowed JWT subjects that {es} should verify. {es} will only consume\nJWTs that were issued for any of these subjects, as denoted by the `sub`\nclaim in the JWT.\nThe subjects are compared with exact string matches and do not support wildcards or regex.\nExamples of `sub` claim are `https://example.com/user1`\nand `user_1,user2`.\nWhen `token_type` is `access_token`, this setting is mandatory and the subject can be\noptionally denoted by a different claim in the JWT if `sub` does not exist.\nSee also <<security-settings-jwt-fallback-claims-sub,`fallback_claims.sub`>>.\n// end::jwt-allowed-subjects-tag[]\n\n// tag::jwt-fallback-claims-sub-tag[]\n[[security-settings-jwt-fallback-claims-sub]]\n`fallback_claims.sub` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe alternative claim to look for the subject information if the `sub` claim\ndoes not exist. It is configurable only when the `token_type` is `access_token`.\nThe fallback is applied everywhere the `sub` claim is used.\n// end::jwt-fallback-claims-sub-tag[]\n\n// tag::jwt-fallback-claims-aud-tag[]\n[[security-settings-jwt-fallback-claims-aud]]\n`fallback_claims.aud` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe alternative claim to look for the audiences information if the `aud` claim\ndoes not exist. It is configurable only when the `token_type` is `access_token`.\nThe fallback is applied everywhere the `aud` claim is used.\n// end::jwt-fallback-claims-aud-tag[]\n\n// tag::jwt-required-claims-tag[]\n`required_claims` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAdditional claims and associated values that {es} should verify.\nThis is a group setting that takes key/value pairs, where the key is a string\nand the value must be either a string or an array of strings.\nThe values are compared with exact string matches and do not support wildcards or regex.\n\nFor example:\n\n[source, yaml]\n------------------------------------------------------------\nxpack.security.authc.realms.jwt.jwt1:\n  required_claims:\n    token_use: \"id\"\n    versions: [\"1.0\", \"2.0\"]\n------------------------------------------------------------\n// end::jwt-required-claims-tag[]\n\n// tag::jwt-allowed-signature-algorithms-tag[]\n`allowed_signature_algorithms` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nA list of signature algorithms that will be used by {es} in order to verify the\nsignature of the JWT it will receive from the JWT Issuer.\nDefaults to `RS256`. Examples are `HS512,RS512,ES512` and `ES384`.\nAllowed values are `HS256`, `HS384`, `HS512`, `ES256`, `ES384`, `ES512`,\n`RS256`, `RS384`, `RS512`, `PS256`, `PS384`, `PS512`.\n// end::jwt-allowed-signature-algorithms-tag[]\n\n`authorization_realms`::\n(<<static-cluster-setting,Static>>)\nThe names of the realms that should be consulted for delegated authorization.\nIf this setting is used, then the JWT realm does not perform role\nmapping and instead loads the user from the listed realms.\nSee <<authorization_realms>>.\n\n// tag::jwt-claims-dn-tag[]\n`claims.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the JWT claim that contains the user's Distinguished Name (DN),\nwhich uniquely identifies a user or group.\n// end::jwt-claims-dn-tag[]\n\n// tag::jwt-claims-pattern-dn-tag[]\n`claim_patterns.dn` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAccepts the same Java regular expression as\n<<jwt-claim-pattern-principal,`claim_patterns.principal`>>, but for the `dn`\nproperty.\n// end::jwt-claims-pattern-dn-tag[]\n\n// tag::jwt-claims-groups-tag[]\n`claims.groups` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the JWT claim that contains the user's groups, such as `groups` and\n`roles`.\n// end::jwt-claims-groups-tag[]\n\n// tag::jwt-claim-pattern-groups-tag[]\n`claim_patterns.group` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAccepts the same Java regular expression as\n<<jwt-claim-pattern-principal,`claim_patterns.principal`>>, but for the `group`\nproperty.\n// end::jwt-claim-pattern-groups-tag[]\n\n// tag::jwt-claims-mail-tag[]\n`claims.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the JWT claim that contains the user's e-mail address.\n// end::jwt-claims-mail-tag[]\n\n// tag::jwt-claims-pattern-mail-tag[]\n`claim_patterns.mail` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAccepts the same Java regular expression as\n<<jwt-claim-pattern-principal,`claim_patterns.principal`>>, but for the `mail`\nproperty.\n// end::jwt-claims-pattern-mail-tag[]\n\n// tag::jwt-claims-name-tag[]\n`claims.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe name of the JWT claim that contains the user's username.\n// end::jwt-claims-name-tag[]\n\n// tag::jwt-claims-pattern-name-tag[]\n`claim_patterns.name` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAccepts the same Java regular expression as\n<<jwt-claim-pattern-principal,`claim_patterns.principal`>>, but for the `name`\nproperty.\n// end::jwt-claims-pattern-name-tag[]\n\n// tag::jwt-claims-principal-tag[]\n`claims.principal`::\n(<<static-cluster-setting,Static>>)\nThe name of the JWT claim that contains the user's principal (username), such as\n`sub`, `name`, `email`, and `dn`.\n// end::jwt-claims-principal-tag[]\n\n[[jwt-claim-pattern-principal]]\n// tag::jwt-claim-pattern-principal-tag[]\n`claim_patterns.principal` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nAn optional Java regular expression that is matched against the JWT claim specified\nby `claims.principal` before it is applied to the user's `principal` property.\nThe value must match the pattern and the value of the first\n_capturing group_ is used as the principal. For example, `^([^@]+)@example\\\\.com$`\nmatches email addresses from the `example.com` domain and uses the local-part as\nthe principal. Another example is `sub` which may not need a pattern setting.\n// end::jwt-claim-pattern-principal-tag[]\n\n// tag::jwt-client-authentication-type-tag[]\n`client_authentication.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies whether to use `shared_secret` or `none` to authenticate\nincoming client requests. If this value is `shared_secret`, the client is\nauthenticated using an HTTP request header that must match a pre-configured\nsecret value. The client must provide this shared secret with every request in\nthe `ES-Client-Authentication` header. If this value is `none`, then the\nrequest header `ES-Client-Authentication` is ignored. Defaults to\n`shared_secret`.\n+\nEnabling client authentication is recommended. If JWT bearer\ntokens are shared with other clients or services, client authentication\nrestricts which ones are allowed to submit those JWTs to {es}.\n// end::jwt-client-authentication-type-tag[]\n\n// tag::jwt-client-authentication-shared-secret-tag[]\n`client_authentication.shared_secret` {ess-icon}::\n(<<secure-settings,Secure>>, <<reloadable-secure-settings,reloadable>>)\nSecret value string for client authentication.\nRequired if `client_authentication.type` is `shared_secret`.\n// end::jwt-client-authentication-shared-secret-tag[]\n\n// tag::jwt-client-authentication-rotation-grace-period-tag[]\n`client_authentication.rotation_grace_period`::\n(<<static-cluster-setting,Static>>)\nSets the grace period for how long after rotating the `client_authentication.shared_secret`\nis valid. `client_authentication.shared_secret` can be rotated by updating the\nkeystore then calling the <<cluster-nodes-reload-secure-settings, reload API>>.\nDefaults to `1m`.\n// end::jwt-client-authentication-rotation-grace-period-tag[]\n\n// tag::jwt-http-connect-timeout-tag[]\n`http.connect_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSets the timeout for the HTTP client that is used for fetching the JSON Web Key\nSet from a remote URL. A value of zero means the timeout is not used. Defaults\nto `5s`.\n// end::jwt-http-connect-timeout-tag[]\n\n// tag::jwt-http-read-timeout-tag[]\n`http.connection_read_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the HTTP timeout used when requesting a connection from the connection\nmanager. Defaults to `5s`.\n// end::jwt-http-read-timeout-tag[]\n\n// tag::jwt-http-socket-timeout[]\n`http.socket_timeout` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum socket timeout (SO_TIMEOUT) for the HTTP client to wait\nfor inactivity between two consecutive data packets. Defaults to `5s`.\n// end::jwt-http-socket-timeout[]\n\n// tag::jwt-http-max-connections-tag[]\n`http.max_connections` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of connections allowed across all endpoints.\n// end::jwt-http-max-connections-tag[]\n\n// tag::jwt-http-max-endpoint-connections-tag[]\n`http.max_endpoint_connections` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of connections allowed per endpoint.\n// end::jwt-http-max-endpoint-connections-tag[]\n\n`jwt.cache.size`::\n(<<static-cluster-setting,Static>>)\nSpecifies the maximum number of JWT cache entries. If clients use a different\nJWT for every request, set to `0` to disable the JWT cache. Defaults to `100000`.\n\n`jwt.cache.ttl`::\n(<<static-cluster-setting,Static>>)\nSpecifies the time-to-live for the period of time to cache JWT entries.\nJWTs can only be cached if client authentication is successful (or disabled).\nUses the standard {es} <<time-units,time units>>. If clients use a different JWT\nfor every request, set to `0` to disable the JWT cache. Defaults to `20m`.\n\n// tag::jwt-pkc-jwkset-path-tag[]\n`pkc_jwkset_path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nThe file name or URL to a JSON Web Key Set (JWKS) with the public key material that\nthe JWT Realm uses for verifying token signatures. A value is considered a file name\nif it does not begin with `https`. The file name\nis resolved relative to the {es} configuration directory. If a URL is provided, then\nit must begin with `https://` (`http://` is not supported).\n{es} automatically caches the JWK set and will attempt to refresh the\nJWK set upon signature verification failure, as this might indicate that the JWT Provider has\nrotated the signing keys.\n// end::jwt-pkc-jwkset-path-tag[]\n\n// tag::jwt-hmac-jwkset-tag[]\n`hmac_jwkset` {ess-icon}::\n(<<secure-settings,Secure>>)\nContents of a JSON Web Key Set (JWKS), including the secret key that the JWT\nrealm uses to verify token signatures. This format supports multiple keys and\noptional attributes, and is preferred over the `hmac_key` setting. Cannot be\nused in conjunction with the `hmac_key` setting. Refer to\n<<jwt-auth-realm,Configure {es} to use a JWT realm>>.\n// end::jwt-hmac-jwkset-tag[]\n\n// tag::jwt-hmac-key-tag[]\n`hmac_key` {ess-icon}::\n(<<secure-settings,Secure>>)\nContents of a single JSON Web Key (JWK), including the secret key that the JWT\nrealm uses to verify token signatures. This format only supports a single key\nwithout attributes, and cannot be used with the `hmac_jwkset` setting. This\nformat is compatible with OIDC. The HMAC key must be a UNICODE string, where\nthe key bytes are the UTF-8 encoding of the UNICODE string.\nThe `hmac_jwkset` setting is preferred. Refer to\n<<jwt-auth-realm,Configure {es} to use a JWT realm>>.\n\n// end::jwt-hmac-key-tag[]\n\n// tag::jwt-populate-user-metadata-tag[]\n`populate_user_metadata` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nSpecifies whether to populate the {es} user's metadata with the values that are\nprovided by the JWT claims. Defaults to `true`.\n// end::jwt-populate-user-metadata-tag[]\n\n[discrete]\n[[ref-jwt-ssl-settings]]\n===== JWT realm SSL settings\n// tag::jwt-ssl-description-tag[]\nThe following settings can be used to configure SSL for fetching the JSON Web\nKey Set from a remote URL.\n\nNOTE: These settings are _only_ used for the back-channel communication between\n{es} and the JWT Issuer.\n\n// end::jwt-ssl-description-tag[]\n\n// tag::jwt-ssl-key-tag[]\n`ssl.key` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-pem]\n// end::jwt-ssl-key-tag[]\n\n// tag::jwt-ssl-key-passphrase-tag[]\n`ssl.key_passphrase` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-key-passphrase]\n// end::jwt-ssl-key-passphrase-tag[]\n\n`ssl.secure_key_passphrase`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-secure-key-passphrase]\n+\nYou cannot use this setting and `ssl.key_passphrase` at the same time.\n\n// tag::jwt-ssl-certificate-tag[]\n`ssl.certificate` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate]\n// end::jwt-ssl-certificate-tag[]\n\n// tag::jwt-ssl-certificate-authorities-tag[]\n`ssl.certificate_authorities` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-certificate-authorities]\n// end::jwt-ssl-certificate-authorities-tag[]\n\n// tag::jwt-ssl-keystore-path-tag[]\n`ssl.keystore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-path]\n// end::jwt-ssl-keystore-path-tag[]\n\n// tag::jwt-ssl-keystore-type-tag[]\n`ssl.keystore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-type-pkcs12]\n// end::jwt-ssl-keystore-type-tag[]\n\n// tag::jwt-ssl-keystore-password-tag[]\n`ssl.keystore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-password]\n// end::jwt-ssl-keystore-password-tag[]\n\n`ssl.keystore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-password]\n+\nYou cannot use this setting and `ssl.keystore.password` at the same time.\n\n`ssl.keystore.key_password`::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-key-password]\n+\nYou cannot use this setting and `ssl.keystore.secure_key_password` at the same\ntime.\n\n`ssl.keystore.secure_key_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-keystore-secure-key-password]\n+\nYou cannot use this setting and `ssl.keystore.key_password` at the same time.\n\n// tag::jwt-ssl-truststore-path-tag[]\n`ssl.truststore.path` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-path]\n// end::jwt-ssl-truststore-path-tag[]\n\n// tag::jwt-ssl-truststore-type-tag[]\n`ssl.truststore.type` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-type]\n// end::jwt-ssl-truststore-type-tag[]\n\n// tag::jwt-ssl-truststore-password-tag[]\n`ssl.truststore.password` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-password]\n// end::jwt-ssl-truststore-password-tag[]\n\n`ssl.truststore.secure_password`::\n(<<secure-settings,Secure>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-truststore-secure-password]\n+\nYou cannot use this setting and `ssl.truststore.password` at the same time.\n\n// tag::jwt-ssl-verification-mode-tag[]\n`ssl.verification_mode` {ess-icon}::\n(<<static-cluster-setting,Static>>)\nControls the verification of certificates.\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-verification-mode-values]\n// end::jwt-ssl-verification-mode-tag[]\n\n// tag::jwt-ssl-supported-protocols-tag[]\n`ssl.supported_protocols` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-supported-protocols]\n// end::jwt-ssl-supported-protocols-tag[]\n\n// tag::jwt-ssl-cipher-suites-tag[]\n`ssl.cipher_suites` {ess-icon}::\n(<<static-cluster-setting,Static>>)\ninclude::{es-ref-dir}/settings/common-defs.asciidoc[tag=ssl-cipher-suites-values]\n// end::jwt-ssl-cipher-suites-tag[]\n\n[discrete]\n[[load-balancing]]\n===== Load balancing and failover\n\nThe <<static-cluster-setting,static>> `load_balance.type` setting can have the\nfollowing values:\n\n* `failover`: The URLs specified are used in the order that they are specified.\nThe first server that can be connected to will be used for all subsequent\nconnections. If a connection to that server fails then the next server that a\nconnection can be established to will be used for subsequent connections.\n* `dns_failover`: In this mode of operation, only a single URL may be specified.\nThis URL must contain a DNS name. The system will be queried for all IP\naddresses that correspond to this DNS name. Connections to the Active Directory\nor LDAP server will always be tried in the order in which they were retrieved.\nThis differs from `failover` in that there is no reordering of the list and if a\nserver has failed at the beginning of the list, it will still be tried for each\nsubsequent connection.\n* `round_robin`: Connections will continuously iterate through the list of\nprovided URLs. If a server is unavailable, iterating through the list of URLs\nwill continue until a successful connection is made.\n* `dns_round_robin`: In this mode of operation, only a single URL may be\nspecified. This URL must contain a DNS name. The system will be queried for all\nIP addresses that correspond to this DNS name. Connections will continuously\niterate through the list of addresses. If a server is unavailable, iterating\nthrough the list of URLs will continue until a successful connection is made.\n\n[discrete]\n[[ssl-tls-settings]]\n==== General TLS settings\n`xpack.security.ssl.diagnose.trust`::\n(<<static-cluster-setting,Static>>)\nControls whether to output diagnostic messages for SSL/TLS trust failures.\nIf this is `true` (the default), a message will be printed to the Elasticsearch\nlog whenever an SSL connection (incoming or outgoing) is rejected due to a failure\nto establish trust.\nThis diagnostic message contains information that can be used to determine the\ncause of the failure and assist with resolving the problem.\nSet to `false` to disable these messages.\n\n[discrete]\n[[tls-ssl-key-settings]]\n===== TLS/SSL key and trusted certificate settings\n\nThe following settings are used to specify a private key, certificate, and the\ntrusted certificates that should be used when communicating over an SSL/TLS\nconnection. If no trusted certificates are configured, the default certificates\nthat are trusted by the JVM will be trusted along with the certificate(s)\nassociated with a key in the same context. The key and certificate must be in\nplace for connections that require client authentication or when acting as a\nSSL enabled server.\n\n[[pkcs12-truststore-note]]\n[NOTE]\nStoring trusted certificates in a PKCS#12 file, although supported, is\nuncommon in practice. The <<certutil,`elasticsearch-certutil` tool>>,\nas well as Java's `keytool`, are designed to generate PKCS#12 files that\ncan be used both as a keystore and as a truststore, but this may not be the\ncase for container files that are created using other tools. Usually,\nPKCS#12 files only contain secret and private entries. To confirm that\na PKCS#12 container includes trusted certificate (\"anchor\") entries look for\n`2.16.840.1.113894.746875.1.1: <Unsupported tag 6>` in the\n`openssl pkcs12 -info` output, or `trustedCertEntry` in the\n`keytool -list` output.\n\n[[http-tls-ssl-settings]]\n:ssl-prefix:             xpack.security.http\n:component:              HTTP\n:client-auth-default:    none\n:verifies!:\n:server:\n:ssl-context:            security-http\n:ssl-layer:              HTTP networking layer, which {es} uses to communicate with other clients\n\ninclude::ssl-settings.asciidoc[]\n\n[[transport-tls-ssl-settings]]\n:ssl-prefix:             xpack.security.transport\n:component:              Transport\n:client-auth-default!:\n:verifies:\n:server:\n:ssl-context:            security-transport\n:ssl-layer:              transport networking layer, which nodes use to communicate with each other\n\ninclude::ssl-settings.asciidoc[]\n\n[[remote-cluster-server-tls-ssl-settings]]\n\n:ssl-prefix:             xpack.security.remote_cluster_server\n:component:              Remote cluster server (API key based model)\n:enabled-by-default:\n:client-auth-default:    none\n:verifies!:\n:server:\n:secure-pass:\n:ssl-context:            security-remote-cluster-server\n:ssl-layer:              remote cluster server networking layer, which {es} uses to communicate with remote cluster clients\n\ninclude::ssl-settings.asciidoc[]\n\n[[remote-cluster-client-tls-ssl-settings]]\n\n:ssl-prefix:             xpack.security.remote_cluster_client\n:component:              Remote cluster client (API key based model)\n:enabled-by-default:\n:client-auth-default:    none\n:verifies:\n:server!:\n:secure-pass:\n:ssl-context:            security-remote-cluster-client\n:ssl-layer:              remote cluster client networking layer, which {es} uses to communicate with remote cluster servers\n\ninclude::ssl-settings.asciidoc[]\n\n[[ssl-tls-profile-settings]]\n[discrete]\n===== Transport profile TLS/SSL settings\nThe same settings that are available for the <<transport-tls-ssl-settings, default transport>>\nare also available for each transport profile. By default, the settings for a\ntransport profile will be the same as the default transport unless they\nare specified.\n\nAs an example, lets look at the key setting. For the default transport\nthis is `xpack.security.transport.ssl.key`. In order to use this setting in a\ntransport profile, use the prefix `transport.profiles.$PROFILE.xpack.security.` and\nappend the portion of the setting after `xpack.security.transport.`. For the key\nsetting, this would be `transport.profiles.$PROFILE.xpack.security.ssl.key`.\n\n[discrete]\n[[ip-filtering-settings]]\n=== IP filtering settings\nYou can configure the following settings for <<ip-filtering,IP filtering>>.\n\n`xpack.security.transport.filter.allow`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to allow.\n\n`xpack.security.transport.filter.deny`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to deny.\n\n`xpack.security.http.filter.allow`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to allow just for HTTP.\n\n`xpack.security.http.filter.deny`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to deny just for HTTP.\n\n`transport.profiles.$PROFILE.xpack.security.filter.allow`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to allow for this profile.\n\n`transport.profiles.$PROFILE.xpack.security.filter.deny`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to deny for this profile.\n\n`xpack.security.remote_cluster.filter.allow`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to allow just for the\n<<remote-clusters-api-key,remote cluster server configured with the API key based model>>.\n\n`xpack.security.remote_cluster.filter.deny`::\n(<<dynamic-cluster-setting,Dynamic>>)\nList of IP addresses to deny just for the remote cluster server configured with\nthe <<remote-clusters-api-key,API key based model>>.\n\ninclude::security-hash-settings.asciidoc[]\n"
}