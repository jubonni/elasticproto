{
    "meta": {
        "size": 12890,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-rollover-index.html",
        "type": "documentation",
        "role": [
            "child_attributes",
            "child_attributes"
        ],
        "has_code": false,
        "title": "indices-rollover-index",
        "version": "8.15"
    },
    "doc": "[[indices-rollover-index]]\n=== Rollover API\n++++\n<titleabbrev>Rollover</titleabbrev>\n++++\n\nCreates a new index for a <<data-streams,data stream>> or <<aliases,index alias>>.\n\n[source,console]\n----\nPOST my-data-stream/_rollover\n----\n// TEST[setup:my_data_stream]\n// TEST[teardown:data_stream_cleanup]\n\n[[rollover-index-api-request]]\n==== {api-request-title}\n\n`POST /<rollover-target>/_rollover/`\n\n`POST /<rollover-target>/_rollover/<target-index>`\n\n[[rollover-index-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage`\n<<privileges-list-indices,index privilege>> for the rollover target.\n\n[[rollover-index-api-desc]]\n==== {api-description-title}\n\nTIP: We recommend using {ilm-init}'s <<ilm-rollover,`rollover`>> action to\nautomate rollovers. See <<ilm-index-lifecycle>>.\n\nThe rollover API creates a new index for a data stream or index alias.\nThe API's behavior depends on the rollover target.\n\n**Roll over a data stream**\n\nIf you roll over a data stream, the API creates a new write index for the\nstream. The stream's previous write index becomes a regular backing index. A\nrollover also increments the data stream's generation. See\n<<data-streams-rollover>>.\n\n**Roll over an index alias with a write index**\n\n[TIP]\n====\ninclude::{es-ref-dir}/data-streams/set-up-a-data-stream.asciidoc[tag=time-series-alias-tip]\nSee <<convert-index-alias-to-data-stream>>.\n====\n\nIf an index alias points to multiple indices, one of the indices must be a\n<<write-index,write index>>. The rollover API creates a new write index\nfor the alias with `is_write_index` set to `true`. The API also sets\n`is_write_index` to `false` for the previous write index.\n\n**Roll over an index alias with one index**\n\nIf you roll over an index alias that points to only one index, the API creates a\nnew index for the alias and removes the original index from the alias.\n\n[[increment-index-names-for-alias]]\n===== Increment index names for an alias\n\nWhen you roll over an index alias, you can specify a name for the new index. If\nyou don't specify a name and the current index ends with `-` and a number, such\nas `my-index-000001` or `my-index-3`, the new index name increments that number.\nFor example, if you roll over an alias with a current index of\n`my-index-000001`, the rollover creates a new index named `my-index-000002`.\nThis number is always 6 characters and zero-padded, regardless of the previous\nindex's name.\n\n[[_using_date_math_with_the_rollover_api]]\n.Use date math with index alias rollovers\n****\nIf you use an index alias for time series data, you can use\n<<api-date-math-index-names,date math>> in the index name to track the rollover\ndate. For example, you can create an alias that points to an index named\n`<my-index-{now/d}-000001>`. If you create the index on May 6, 2099, the index's\nname is `my-index-2099.05.06-000001`. If you roll over the alias on May 7, 2099,\nthe new index's name is `my-index-2099.05.07-000002`. For an example, see\n<<roll-over-index-alias-with-write-index>>.\n****\n\n[[rollover-wait-active-shards]]\n===== Wait for active shards\n\nA rollover creates a new index and is subject to the\n<<create-index-wait-for-active-shards,`wait_for_active_shards`>> setting.\n\n[[rollover-index-api-path-params]]\n==== {api-path-parms-title}\n\n`<rollover-target>`::\n(Required, string)\nName of the data stream or index alias to roll over.\n\n`<target-index>`::\n(Optional, string)\nName of the index to create. Supports <<api-date-math-index-names,date math>>. Data\nstreams do not support this parameter.\n+\nIf the name of the alias's current write index does not end with `-` and a\nnumber, such as `my-index-000001` or `my-index-3`, this parameter is required.\n+\ninclude::{es-ref-dir}/indices/create-index.asciidoc[tag=index-name-reqs]\n\n[[rollover-index-api-query-params]]\n==== {api-query-parms-title}\n\n`dry_run`::\n(Optional, Boolean)\nIf `true`, checks whether the current index satisfies the specified\n`conditions` but does not perform a rollover. Defaults to `false`.\n\n`lazy`::\n(Optional, Boolean)\nIf `true`, signals that the data stream will be rolled over when the next\nindexing operation occurs. Applies only to data streams. Defaults to `false`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=wait_for_active_shards]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[role=\"child_attributes\"]\n[[rollover-index-api-request-body]]\n==== {api-request-body-title}\n\n`aliases`::\n(Optional, object of objects) Aliases for the target index. Data streams do not\nsupport this parameter.\n+\ninclude::{es-ref-dir}/indices/create-index.asciidoc[tag=aliases-props]\n\n[[rollover-conditions]]\n`conditions`::\n(Optional, object)\nConditions for the rollover. If specified, {es} only performs the rollover if\nthe current index satisfies these conditions. If this parameter is\nnot specified, {es} performs the rollover unconditionally.\n+\nIf conditions are specified, at least one of them must be a max_* condition.\nThe index will rollover if any max_* condition is satisfied and all\nmin_* conditions are satisfied.\n+\nIMPORTANT: To trigger a rollover, the current index must satisfy these conditions\nat the time of the request. {es} does not monitor the index after the API\nresponse. To automate rollover, use {ilm-init}'s <<ilm-rollover,`rollover`>>\ninstead.\n+\n.Properties of `conditions`\n[%collapsible%open]\n====\ninclude::{es-ref-dir}/ilm/actions/ilm-rollover.asciidoc[tag=rollover-conditions]\n====\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=mappings]\n+\nData streams do not support this parameter.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=settings]\n+\nData streams do not support this parameter.\n\n[role=\"child_attributes\"]\n[[rollover-index-api-response-body]]\n==== {api-response-body-title}\n\n`acknowledged`::\n(Boolean)\nIf `true`, the request received a response from the master node within the\n`timeout` period.\n\n`shards_acknowledged`::\n(Boolean)\nIf `true`, the request received a response from\n<<index-wait-for-active-shards,active shards>> within the `master_timeout`\nperiod.\n\n`old_index`::\n(string)\nPrevious index for the data stream or index alias. For data streams and index\naliases with a write index, this is the previous write index.\n\n`new_index`::\n(string)\nIndex created by the rollover. For data streams and index aliases with a write\nindex, this is the current write index.\n\n`rolled_over`::\n(Boolean)\nIf `true`, the data stream or index alias rolled over.\n\n`dry_run`::\n(Boolean)\nIf `true`, {es} did not perform the rollover.\n\n`condition`::\n(object)\nResult of each condition specified in the request's `conditions`. If no\nconditions were specified, this is an empty object.\n+\n.Properties of `condition`\n[%collapsible%open]\n====\n`<condition>`::\n(Boolean) The key is each condition. The value is its result. If `true`, the\nindex met the condition.\n====\n\n`lazy`::\n(Boolean)\nIf `true`, {es} did not perform the rollover, but successfully marked the data stream to be rolled\nover at the next indexing event.\n\n[[rollover-index-api-example]]\n==== {api-examples-title}\n\n[[roll-over-data-stream]]\n===== Roll over a data stream\n\nThe following request rolls over a data stream unconditionally.\n\n[source,console]\n----\nPOST my-data-stream/_rollover\n----\n// TEST[setup:my_data_stream]\n\nThe following request rolls over a data stream lazily, meaning that the data stream\nwill roll over at the next indexing event. This ensures that mapping and setting changes\nwill be applied to the coming data, but it will avoid creating extra backing indices for\ndata streams with slow ingestion.\n\n[source,console]\n----\nPOST my-data-stream/_rollover?lazy\n----\n// TEST[continued]\n\n:target: data stream\n:index: write index\n\n// tag::rollover-conditions-ex[]\nThe following request only rolls over the {target} if the current {index}\nmeets one or more of the following conditions:\n\n* The index was created 7 or more days ago.\n* The index contains 1,000 or more documents.\n* The index's largest primary shard is 50GB or larger.\n// end::rollover-conditions-ex[]\n\n[source,console]\n----\nPOST my-data-stream/_rollover\n{\n  \"conditions\": {\n    \"max_age\": \"7d\",\n    \"max_docs\": 1000,\n    \"max_primary_shard_size\": \"50gb\",\n    \"max_primary_shard_docs\": \"2000\"\n  }\n}\n----\n// TEST[continued]\n// TEST[setup:my_index_huge]\n// TEST[s/^/POST _reindex?refresh\\n{ \"source\": { \"index\": \"my-index-000001\" }, \"dest\": { \"index\": \"my-data-stream\", \"op_type\": \"create\" } }\\n/]\n\nThe API returns:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true,\n  \"shards_acknowledged\": true,\n  \"old_index\": \".ds-my-data-stream-2099.05.06-000001\",\n  \"new_index\": \".ds-my-data-stream-2099.05.07-000002\",\n  \"rolled_over\": true,\n  \"dry_run\": false,\n  \"lazy\": false,\n  \"conditions\": {\n    \"[max_age: 7d]\": false,\n    \"[max_docs: 1000]\": true,\n    \"[max_primary_shard_size: 50gb]\": false,\n    \"[max_primary_shard_docs: 2000]\": false\n  }\n}\n----\n// TESTRESPONSE[s/.ds-my-data-stream-2099.05.06-000001/$body.old_index/]\n// TESTRESPONSE[s/.ds-my-data-stream-2099.05.07-000002/$body.new_index/]\n\n////\n[source,console]\n----\nDELETE _data_stream/*\nDELETE _index_template/*\n----\n// TEST[continued]\n////\n\n[[roll-over-index-alias-with-write-index]]\n===== Roll over an index alias with a write index\n\nThe following request creates `<my-index-{now/d}-000001>` and sets it as the\nwrite index for `my-alias`.\n\n[source,console]\n----\n# PUT <my-index-{now/d}-000001>\nPUT %3Cmy-index-%7Bnow%2Fd%7D-000001%3E\n{\n  \"aliases\": {\n    \"my-alias\": {\n      \"is_write_index\": true\n    }\n  }\n}\n----\n// TEST[s/%3Cmy-index-%7Bnow%2Fd%7D-000001%3E/my-index-2099.05.06-000001/]\n\n:target: alias\n\ninclude::rollover-index.asciidoc[tag=rollover-conditions-ex]\n\n[source,console]\n----\nPOST my-alias/_rollover\n{\n  \"conditions\": {\n    \"max_age\": \"7d\",\n    \"max_docs\": 1000,\n    \"max_primary_shard_size\": \"50gb\",\n    \"max_primary_shard_docs\": \"2000\"\n  }\n}\n----\n// TEST[continued]\n// TEST[setup:my_index_huge]\n// TEST[s/^/POST _reindex?refresh\\n{ \"source\": { \"index\": \"my-index-000001\" }, \"dest\": { \"index\": \"my-alias\" } }\\n/]\n\nThe API returns:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true,\n  \"shards_acknowledged\": true,\n  \"old_index\": \"my-index-2099.05.06-000001\",\n  \"new_index\": \"my-index-2099.05.07-000002\",\n  \"rolled_over\": true,\n  \"dry_run\": false,\n  \"lazy\": false,\n  \"conditions\": {\n    \"[max_age: 7d]\": false,\n    \"[max_docs: 1000]\": true,\n    \"[max_primary_shard_size: 50gb]\": false,\n    \"[max_primary_shard_docs: 2000]\": false\n  }\n}\n----\n// TESTRESPONSE[s/my-index-2099.05.07-000002/my-index-2099.05.06-000002/]\n\nIf the alias's index names use date math and you roll over indices at a regular\ninterval, you can use date math to narrow your searches. For example, the\nfollowing search targets indices created in the last three days.\n\n[source,console]\n----\n# GET /<my-index-{now/d}-*>,<my-index-{now/d-1d}-*>,<my-index-{now/d-2d}-*>/_search\nGET /%3Cmy-index-%7Bnow%2Fd%7D-*%3E%2C%3Cmy-index-%7Bnow%2Fd-1d%7D-*%3E%2C%3Cmy-index-%7Bnow%2Fd-2d%7D-*%3E/_search\n----\n\n[[roll-over-index-alias-with-one-index]]\n===== Roll over an index alias with one index\n\nThe following request creates `<my-index-{now/d}-000001>` and its alias, `my-write-alias`.\n\n[source,console]\n----\n# PUT <my-index-{now/d}-000001>\nPUT %3Cmy-index-%7Bnow%2Fd%7D-000001%3E\n{\n  \"aliases\": {\n    \"my-write-alias\": { }\n  }\n}\n----\n// TEST[s/%3Cmy-index-%7Bnow%2Fd%7D-000001%3E/my-index-2099.05.06-000001/]\n\n:index: index\n\ninclude::rollover-index.asciidoc[tag=rollover-conditions-ex]\n\n:target!:\n:index!:\n\n[source,console]\n----\nPOST my-write-alias/_rollover\n{\n  \"conditions\": {\n    \"max_age\": \"7d\",\n    \"max_docs\": 1000,\n    \"max_primary_shard_size\": \"50gb\",\n    \"max_primary_shard_docs\": \"2000\"\n  }\n}\n----\n// TEST[continued]\n// TEST[setup:my_index_huge]\n// TEST[s/^/POST _reindex?refresh\\n{ \"source\": { \"index\": \"my-index-000001\" }, \"dest\": { \"index\": \"my-write-alias\" } }\\n/]\n\nThe API returns:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true,\n  \"shards_acknowledged\": true,\n  \"old_index\": \"my-index-2099.05.06-000001\",\n  \"new_index\": \"my-index-2099.05.07-000002\",\n  \"rolled_over\": true,\n  \"dry_run\": false,\n  \"lazy\": false,\n  \"conditions\": {\n    \"[max_age: 7d]\": false,\n    \"[max_docs: 1000]\": true,\n    \"[max_primary_shard_size: 50gb]\": false,\n    \"[max_primary_shard_docs: 2000]\": false\n  }\n}\n----\n// TESTRESPONSE[s/my-index-2099.05.07-000002/my-index-2099.05.06-000002/]\n\n[[specify-settings-during-rollover]]\n===== Specify settings during a rollover\n\nTypically, you use an <<index-templates,index template>> to automatically\nconfigure indices created during a rollover. If you roll over an index alias,\nyou use the rollover API to add additional index settings or overwrite settings\nin the template. Data streams do not support the `settings` parameter.\n\n[source,console]\n----\nPOST my-alias/_rollover\n{\n  \"settings\": {\n    \"index.number_of_shards\": 2\n  }\n}\n----\n// TEST[continued]\n// TEST[s/my-alias/my-write-alias/]\n"
}