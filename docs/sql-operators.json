{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.815273",
        "size": 4620,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-operators.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "sql-operators",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[sql-operators]]\n=== Comparison Operators\n\nBoolean operator for comparing against one or multiple expressions.\n\n[[sql-operators-equality]]\n==== `Equality (=)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldEquality]\n--------------------------------------------------\n\n[[sql-operators-null-safe-equality]]\n==== `Null safe Equality (<=>)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/docs/docs.csv-spec[nullEqualsCompareWithNull]\n--------------------------------------------------\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/docs/docs.csv-spec[nullEqualsCompareTwoNulls]\n--------------------------------------------------\n\n[[sql-operators-inequality]]\n==== `Inequality (<> or !=)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldNonEquality]\n--------------------------------------------------\n\n[[sql-operators-comparison]]\n==== `Comparison (<, <=, >, >=)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldLessThan]\n--------------------------------------------------\n\n[[sql-operators-between]]\n==== `BETWEEN`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereBetween]\n--------------------------------------------------\n\n[[sql-operators-is-null]]\n==== `IS NULL/IS NOT NULL`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereIsNotNullAndIsNull]\n--------------------------------------------------\n\n[[sql-operators-in]]\n==== `IN (<value1>, <value2>, ...)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereWithInAndMultipleValues]\n--------------------------------------------------\n\n[[sql-operators-logical]]\n=== Logical Operators\n\nBoolean operator for evaluating one or two expressions.\n\n[[sql-operators-and]]\n==== `AND`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldAndComparison]\n--------------------------------------------------\n\n[[sql-operators-or]]\n==== `OR`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldOrComparison]\n--------------------------------------------------\n\n[[sql-operators-not]]\n==== `NOT`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/filter.sql-spec[whereFieldEqualityNot]\n--------------------------------------------------\n\n[[sql-operators-math]]\n=== Math Operators\n\nPerform mathematical operations affecting one or two values.\nThe result is a value of numeric type.\n\n[[sql-operators-plus]]\n==== `Add (+)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[plus]\n--------------------------------------------------\n\n[[sql-operators-subtract]]\n==== `Subtract (infix -)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[minus]\n--------------------------------------------------\n\n[[sql-operators-negate]]\n==== `Negate (unary -)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[unaryMinus]\n--------------------------------------------------\n\n[[sql-operators-multiply]]\n==== `Multiply (*)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[multiply]\n--------------------------------------------------\n\n[[sql-operators-divide]]\n==== `Divide (/)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[divide]\n--------------------------------------------------\n\n[[sql-operators-remainder]]\n==== `Modulo or Remainder(%)`\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/arithmetic.sql-spec[mod]\n--------------------------------------------------\n\n[[sql-operators-cast]]\n=== Cast Operators\n\n[[sql-operators-cast-cast]]\n==== `Cast (::)`\n\n`::` provides an alternative syntax to the <<sql-functions-type-conversion-cast>> function.\n\n[source, sql]\n--------------------------------------------------\ninclude-tagged::{sql-specs}/docs/docs.csv-spec[conversionStringToLongCastOperator]\n--------------------------------------------------\n"
}