{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.581272",
        "size": 2708,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/autoscaling-machine-learning-decider.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "autoscaling-machine-learning-decider",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[autoscaling-machine-learning-decider]]\n=== Machine learning decider\n\nThe {cloud}/ec-autoscaling.html[autoscaling] {ml} decider (`ml`) calculates the memory and CPU requirements to run {ml} \njobs and trained models.\n\nThe {ml} decider is enabled for policies governing `ml` nodes.\n\nNOTE: For {ml} jobs to open when the cluster is not appropriately scaled, set \n`xpack.ml.max_lazy_ml_nodes` to the largest number of possible {ml} nodes (refer \nto <<advanced-ml-settings>> for more information). In {ess}, this is \nautomatically set.\n\n[[autoscaling-machine-learning-decider-settings]]\n==== Configuration settings\n\nBoth `num_anomaly_jobs_in_queue` and `num_analytics_jobs_in_queue` are designed \nto delay a scale-up event. If the cluster is too small, these settings indicate \nhow many jobs of each type can be unassigned from a node. Both settings are only \nconsidered for jobs that can be opened given the current scale. If a job is too \nlarge for any node size or if a job can't be assigned without user intervention \n(for example, a user calling `_stop` against a real-time {anomaly-job}), the \nnumbers are ignored for that particular job.\n\n`num_anomaly_jobs_in_queue`::\n(Optional, integer)\nSpecifies the number of queued {anomaly-jobs} to allow. Defaults to `0`.\n\n`num_analytics_jobs_in_queue`::\n(Optional, integer)\nSpecifies the number of queued {dfanalytics-jobs} to allow. Defaults to `0`.\n\n`down_scale_delay`::\n(Optional, <<time-units,time value>>)\nSpecifies the time to delay before scaling down. Defaults to 1 hour. If a scale \ndown is possible for the entire time window, then a scale down is requested. If \nthe cluster requires a scale up during the window, the window is reset.\n\n\n[[autoscaling-machine-learning-decider-examples]]\n==== {api-examples-title}\n\nThis example creates an autoscaling policy named `my_autoscaling_policy` that \noverrides the default configuration of the {ml} decider.\n\n[source,console]\n--------------------------------------------------\nPUT /_autoscaling/policy/my_autoscaling_policy\n{\n  \"roles\" : [ \"ml\" ],\n  \"deciders\": {\n    \"ml\": {\n      \"num_anomaly_jobs_in_queue\": 5,\n      \"num_analytics_jobs_in_queue\": 3,\n      \"down_scale_delay\": \"30m\"\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\n\nThe API returns the following result:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"acknowledged\": true\n}\n--------------------------------------------------\n\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nDELETE /_autoscaling/policy/my_autoscaling_policy\n--------------------------------------------------\n// TEST[continued]\n\n//////////////////////////\n"
}