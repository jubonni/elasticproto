{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.632067",
        "size": 6410,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/targz.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "targz",
        "version": "8.15"
    },
    "doc": "[[targz]]\n=== Install {es} from archive on Linux or MacOS\n\n:include-xpack: true\n\n{es} is available as a `.tar.gz` archive for Linux and MacOS.\n\ninclude::license.asciidoc[]\n\nThe latest stable version of {es} can be found on the\nlink:/downloads/elasticsearch[Download {es}] page.\nOther versions can be found on the\nlink:/downloads/past-releases[Past Releases page].\n\nNOTE: {es} includes a bundled version of https://openjdk.java.net[OpenJDK]\nfrom the JDK maintainers (GPLv2+CE). To use your own version of Java,\nsee the <<jvm-version, JVM version requirements>>\n\n[[install-linux]]\n==== Download and install archive for Linux\n\nifeval::[\"{release-state}\"==\"unreleased\"]\n\nWARNING: Version {version} of {es} has not yet been released. The archive might not be available.\n\nendif::[]\n\nThe Linux archive for {es} v{version} can be downloaded and installed as follows:\n\n[\"source\",\"sh\",subs=\"attributes\"]\n--------------------------------------------\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-linux-x86_64.tar.gz\nwget https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-linux-x86_64.tar.gz.sha512\nshasum -a 512 -c elasticsearch-{version}-linux-x86_64.tar.gz.sha512 <1>\ntar -xzf elasticsearch-{version}-linux-x86_64.tar.gz\ncd elasticsearch-{version}/ <2>\n--------------------------------------------\n<1> Compares the SHA of the downloaded `.tar.gz` archive and the published checksum, which should output\n    `elasticsearch-{version}-linux-x86_64.tar.gz: OK`.\n<2> This directory is known as `$ES_HOME`.\n\n[[install-macos]]\n==== Download and install archive for MacOS\n\nifeval::[\"{release-state}\"==\"unreleased\"]\n\nWARNING: Version {version} of {es} has not yet been released. The archive might not be available.\n\nendif::[]\n\n[IMPORTANT]\n.macOS Gatekeeper warnings\n====\nApple's rollout of stricter notarization requirements affected the notarization of the {version} {es} artifacts. If macOS displays a dialog when you first run {es} that interrupts it, then you need to take an action to allow it to run.\n\nTo prevent Gatekeeper checks on the {es} files, run the following command on the downloaded .tar.gz archive or the directory to which was extracted:\n\n[source,sh]\n----\nxattr -d -r com.apple.quarantine <archive-or-directory>\n----\n\nAlternatively, you can add a security override by following the instructions in the _If you want to open an app that hasn't been notarized or is from an unidentified developer_ section of https://support.apple.com/en-us/HT202491[Safely open apps on your Mac].\n====\n\nThe MacOS archive for {es} v{version} can be downloaded and installed as follows:\n\n[\"source\",\"sh\",subs=\"attributes\"]\n--------------------------------------------\ncurl -O https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-darwin-x86_64.tar.gz\ncurl https://artifacts.elastic.co/downloads/elasticsearch/elasticsearch-{version}-darwin-x86_64.tar.gz.sha512 | shasum -a 512 -c - <1>\ntar -xzf elasticsearch-{version}-darwin-x86_64.tar.gz\ncd elasticsearch-{version}/ <2>\n--------------------------------------------\n// NOTCONSOLE\n\n<1> Compares the SHA of the downloaded `.tar.gz` archive and the published checksum, which should output\n    `elasticsearch-{version}-darwin-x86_64.tar.gz: OK`.\n<2> This directory is known as `$ES_HOME`.\n\nifdef::include-xpack[]\n[role=\"xpack\"]\n[[targz-enable-indices]]\n==== Enable automatic creation of system indices\n\ninclude::xpack-indices.asciidoc[]\n\nendif::include-xpack[]\n\n[[targz-running]]\ninclude::targz-start.asciidoc[]\n\n:es-conf:      $ES_HOME/config\n:slash:        /\n\ninclude::check-running.asciidoc[]\n\nLog printing to `stdout` can be disabled using the `-q` or `--quiet`\noption on the command line.\n\n[[setup-installation-daemon]]\ninclude::targz-daemon.asciidoc[]\n\n[[targz-configuring]]\n==== Configure {es} on the command line\n\n{es} loads its configuration from the `$ES_HOME/config/elasticsearch.yml`\nfile by default. The format of this config file is explained in\n<<settings>>.\n\nAny settings that can be specified in the config file can also be specified on\nthe command line, using the `-E` syntax as follows:\n\n[source,sh]\n--------------------------------------------\n./bin/elasticsearch -d -Ecluster.name=my_cluster -Enode.name=node_1\n--------------------------------------------\n\nTIP: Typically, any cluster-wide settings (like `cluster.name`) should be\nadded to the `elasticsearch.yml` config file, while any node-specific settings\nsuch as `node.name` could be specified on the command line.\n\ninclude::connect-clients.asciidoc[]\n\n[[targz-layout]]\n==== Directory layout of archives\n\nThe archive distributions are entirely self-contained. All files and\ndirectories are, by default, contained within `$ES_HOME` -- the directory\ncreated when unpacking the archive.\n\nThis is very convenient because you don't have to create any directories to\nstart using {es}, and uninstalling {es} is as easy as\nremoving the `$ES_HOME` directory. However, it is advisable to change the\ndefault locations of the config directory, the data directory, and the logs\ndirectory so that you do not delete important data later on.\n\n\n[cols=\"<h,<,<m,<m\",options=\"header\",]\n|=======================================================================\n| Type | Description | Default Location | Setting\n| home\n  | {es} home directory or `$ES_HOME`\n d| Directory created by unpacking the archive\n  |\n\n| bin\n  | Binary scripts including `elasticsearch` to start a node\n    and `elasticsearch-plugin` to install plugins\n  | $ES_HOME/bin\n d|\n\n| conf\n  | Configuration files including `elasticsearch.yml`\n  | $ES_HOME/config\n  | <<config-files-location,ES_PATH_CONF>>\n\n| conf\n  | Generated TLS keys and certificates for the transport and HTTP layer.\n  | $ES_HOME/config/certs\n d|\n\n| data\n  | The location of the data files of each index / shard allocated\n    on the node.\n  | $ES_HOME/data\n  | path.data\n\n| logs\n  | Log files location.\n  | $ES_HOME/logs\n  | path.logs\n\n| plugins\n  | Plugin files location. Each plugin will be contained in a subdirectory.\n  | $ES_HOME/plugins\n  |\n\n| repo\n  | Shared file system repository locations. Can hold multiple locations. A file system repository can be placed in to any subdirectory of any directory specified here.\n d| Not configured\n  | path.repo\n\n|=======================================================================\n\ninclude::security-files-reference.asciidoc[]\ninclude::next-steps.asciidoc[]\n"
}