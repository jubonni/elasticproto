{
    "meta": {
        "size": 16331,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cluster-allocation-explain.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "cluster-allocation-explain",
        "version": "8.15"
    },
    "doc": "[[cluster-allocation-explain]]\n=== Cluster allocation explain API\n++++\n<titleabbrev>Cluster allocation explain</titleabbrev>\n++++\n\nProvides an explanation for a shard's current <<index-modules-allocation,allocation>>.\n\n[source,console]\n----\nGET _cluster/allocation/explain\n{\n  \"index\": \"my-index-000001\",\n  \"shard\": 0,\n  \"primary\": false,\n  \"current_node\": \"my-node\"\n}\n----\n// TEST[setup:my_index]\n// TEST[s/\"primary\": false,/\"primary\": false/]\n// TEST[s/\"current_node\": \"my-node\"//]\n\n[[cluster-allocation-explain-api-request]]\n==== {api-request-title}\n\n`GET _cluster/allocation/explain`\n\n`POST _cluster/allocation/explain`\n\n[[cluster-allocation-explain-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `monitor` or\n`manage` <<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[cluster-allocation-explain-api-desc]]\n==== {api-description-title}\n\nThe purpose of the cluster allocation explain API is to provide\nexplanations for shard allocations in the cluster. For unassigned shards,\nthe explain API provides an explanation for why the shard is unassigned.\nFor assigned shards, the explain API provides an explanation for why the\nshard is remaining on its current node and has not moved or rebalanced to\nanother node. This API can be very useful when attempting to diagnose why a\nshard is unassigned or why a shard continues to remain on its current node when\nyou might expect otherwise.\n\n[[cluster-allocation-explain-api-query-params]]\n==== {api-query-parms-title}\n\n`include_disk_info`::\n    (Optional, Boolean) If `true`, returns information about disk usage and\n    shard sizes. Defaults to `false`.\n\n`include_yes_decisions`::\n    (Optional, Boolean) If `true`, returns 'YES' decisions in explanation.\n    Defaults to `false`.\n\n[[cluster-allocation-explain-api-request-body]]\n==== {api-request-body-title}\n\n`current_node`::\n    (Optional, string) Specifies the node ID or the name of the node currently\n    holding the shard to explain. To explain an unassigned shard, omit this\n    parameter.\n\n`index`::\n    (Optional, string) Specifies the name of the index that you would like an\n    explanation for.\n\n`primary`::\n    (Optional, Boolean) If `true`, returns explanation for the primary shard\n    for the given shard ID.\n\n`shard`::\n    (Optional, integer) Specifies the ID of the shard that you would like an\n    explanation for.\n\n[[cluster-allocation-explain-api-examples]]\n==== {api-examples-title}\n\n===== Unassigned primary shard\n\n====== Conflicting settings\nThe following request gets an allocation explanation for an unassigned primary\nshard.\n\n////\n[source,console]\n----\nPUT my-index-000001?master_timeout=1s&timeout=1s\n{\n  \"settings\": {\n    \"index.routing.allocation.include._name\": \"nonexistent_node\",\n    \"index.routing.allocation.include._tier_preference\": null\n  }\n}\n----\n////\n\n[source,console]\n----\nGET _cluster/allocation/explain\n{\n  \"index\": \"my-index-000001\",\n  \"shard\": 0,\n  \"primary\": true\n}\n----\n// TEST[continued]\n\nThe API response indicates the shard can only be allocated to a nonexistent\nnode.\n\n[source,console-result]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : true,\n  \"current_state\" : \"unassigned\",                 <1>\n  \"unassigned_info\" : {\n    \"reason\" : \"INDEX_CREATED\",                   <2>\n    \"at\" : \"2017-01-04T18:08:16.600Z\",\n    \"last_allocation_status\" : \"no\"\n  },\n  \"can_allocate\" : \"no\",                          <3>\n  \"allocate_explanation\" : \"Elasticsearch isn't allowed to allocate this shard to any of the nodes in the cluster. Choose a node to which you expect this shard to be allocated, find this node in the node-by-node explanation, and address the reasons which prevent Elasticsearch from allocating this shard there.\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"8qt2rY-pT6KNZB3-hGfLnw\",\n      \"node_name\" : \"node-0\",\n      \"transport_address\" : \"127.0.0.1:9401\",\n      \"roles\" : [\"data\", \"data_cold\", \"data_content\", \"data_frozen\", \"data_hot\", \"data_warm\", \"ingest\", \"master\", \"ml\", \"remote_cluster_client\", \"transform\"],\n      \"node_attributes\" : {},\n      \"node_decision\" : \"no\",                     <4>\n      \"weight_ranking\" : 1,\n      \"deciders\" : [\n        {\n          \"decider\" : \"filter\",                   <5>\n          \"decision\" : \"NO\",\n          \"explanation\" : \"node does not match index setting [index.routing.allocation.include] filters [_name:\\\"nonexistent_node\\\"]\"  <6>\n        }\n      ]\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"at\" : \"[^\"]*\"/\"at\" : $body.$_path/]\n// TESTRESPONSE[s/\"node_id\" : \"[^\"]*\"/\"node_id\" : $body.$_path/]\n// TESTRESPONSE[s/\"transport_address\" : \"[^\"]*\"/\"transport_address\" : $body.$_path/]\n// TESTRESPONSE[s/\"roles\" : \\[(\"[a-z_]*\",)*(\"[a-z_]*\")\\]/\"roles\" : $body.$_path/]\n// TESTRESPONSE[s/\"node_attributes\" : \\{\\}/\"node_attributes\" : $body.$_path/]\n\n<1> The current state of the shard.\n<2> The reason for the shard originally becoming unassigned.\n<3> Whether to allocate the shard.\n<4> Whether to allocate the shard to the particular node.\n<5> The decider which led to the `no` decision for the node.\n<6> An explanation as to why the decider returned a `no` decision, with a helpful hint pointing to the setting that led to the decision. In this example, a newly created index has <<indices-get-settings,an index setting>> that requires that it only be allocated to a node named `nonexistent_node`, which does not exist, so the index is unable to allocate.\n\n[[maximum-number-of-retries-exceeded]]\n====== Maximum number of retries exceeded\n\nThe following response contains an allocation explanation for an unassigned\nprimary shard that has reached the maximum number of allocation retry attempts.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : true,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"at\" : \"2017-01-04T18:03:28.464Z\",\n    \"failed shard on node [mEKjwwzLT1yJVb8UxT6anw]: failed recovery, failure RecoveryFailedException\",\n    \"reason\": \"ALLOCATION_FAILED\",\n    \"failed_allocation_attempts\": 5,\n    \"last_allocation_status\": \"no\",\n  },\n  \"can_allocate\": \"no\",\n  \"allocate_explanation\": \"cannot allocate because allocation is not permitted to any of the nodes\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"3sULLVJrRneSg0EfBB-2Ew\",\n      \"node_name\" : \"node_t0\",\n      \"transport_address\" : \"127.0.0.1:9400\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"no\",\n      \"store\" : {\n        \"matching_size\" : \"4.2kb\",\n        \"matching_size_in_bytes\" : 4325\n      },\n      \"deciders\" : [\n        {\n          \"decider\": \"max_retry\",\n          \"decision\" : \"NO\",\n          \"explanation\": \"shard has exceeded the maximum number of retries [5] on failed allocation attempts - manually call [POST /_cluster/reroute?retry_failed] to retry, [unassigned_info[[reason=ALLOCATION_FAILED], at[2024-07-30T21:04:12.166Z], failed_attempts[5], failed_nodes[[mEKjwwzLT1yJVb8UxT6anw]], delayed=false, details[failed shard on node [mEKjwwzLT1yJVb8UxT6anw]: failed recovery, failure RecoveryFailedException], allocation_status[deciders_no]]]\"\n        }\n      ]\n    }\n  ]\n}\n----\n// NOTCONSOLE\nWhen Elasticsearch is unable to allocate a shard, it will attempt to retry allocation up to\nthe maximum number of retries allowed. After this, Elasticsearch will stop attempting to\nallocate the shard in order to prevent infinite retries which may impact cluster\nperformance. Run the <<cluster-reroute,cluster reroute>> API to retry allocation, which\nwill allocate the shard if the issue preventing allocation has been resolved.\n\n[[no-valid-shard-copy]]\n====== No valid shard copy\n\nThe following response contains an allocation explanation for an unassigned\nprimary shard that was previously allocated.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : true,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"reason\" : \"NODE_LEFT\",\n    \"at\" : \"2017-01-04T18:03:28.464Z\",\n    \"details\" : \"node_left[OIWe8UhhThCK0V5XfmdrmQ]\",\n    \"last_allocation_status\" : \"no_valid_shard_copy\"\n  },\n  \"can_allocate\" : \"no_valid_shard_copy\",\n  \"allocate_explanation\" : \"Elasticsearch can't allocate this shard because there are no copies of its data in the cluster. Elasticsearch will allocate this shard when a node holding a good copy of its data joins the cluster. If no such node is available, restore this index from a recent snapshot.\"\n}\n----\n// NOTCONSOLE\n\nTIP: If a shard is unassigned with an allocation status of `no_valid_shard_copy`, then you should <<fix-cluster-status-recover-nodes,make sure that all nodes are in the cluster>>. If all the nodes containing in-sync copies of a shard are lost, then you can <<fix-cluster-status-restore,recover the data for the shard>>.\n\n===== Unassigned replica shard\n\n====== Allocation delayed\n\nThe following response contains an allocation explanation for a replica that's\nunassigned due to <<delayed-allocation,delayed allocation>>.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : false,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"reason\" : \"NODE_LEFT\",\n    \"at\" : \"2017-01-04T18:53:59.498Z\",\n    \"details\" : \"node_left[G92ZwuuaRY-9n8_tc-IzEg]\",\n    \"last_allocation_status\" : \"no_attempt\"\n  },\n  \"can_allocate\" : \"allocation_delayed\",\n  \"allocate_explanation\" : \"The node containing this shard copy recently left the cluster. Elasticsearch is waiting for it to return. If the node does not return within [%s] then Elasticsearch will allocate this shard to another node. Please wait.\",\n  \"configured_delay\" : \"1m\",                      <1>\n  \"configured_delay_in_millis\" : 60000,\n  \"remaining_delay\" : \"59.8s\",                    <2>\n  \"remaining_delay_in_millis\" : 59824,\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"pmnHu_ooQWCPEFobZGbpWw\",\n      \"node_name\" : \"node_t2\",\n      \"transport_address\" : \"127.0.0.1:9402\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"yes\"\n    },\n    {\n      \"node_id\" : \"3sULLVJrRneSg0EfBB-2Ew\",\n      \"node_name\" : \"node_t0\",\n      \"transport_address\" : \"127.0.0.1:9400\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"no\",\n      \"store\" : {                                 <3>\n        \"matching_size\" : \"4.2kb\",\n        \"matching_size_in_bytes\" : 4325\n      },\n      \"deciders\" : [\n        {\n          \"decider\" : \"same_shard\",\n          \"decision\" : \"NO\",\n          \"explanation\" : \"a copy of this shard is already allocated to this node [[my-index-000001][0], node[3sULLVJrRneSg0EfBB-2Ew], [P], s[STARTED], a[id=eV9P8BN1QPqRc3B4PLx6cg]]\"\n        }\n      ]\n    }\n  ]\n}\n----\n// NOTCONSOLE\n\n<1> The configured delay before allocating a replica shard that does not exist due to the node holding it leaving the cluster.\n<2> The remaining delay before allocating the replica shard.\n<3> Information about the shard data found on a node.\n\n====== Allocation throttled\n\nThe following response contains an allocation explanation for a replica that's\nqueued to allocate but currently waiting on other queued shards.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : false,\n  \"current_state\" : \"unassigned\",\n  \"unassigned_info\" : {\n    \"reason\" : \"NODE_LEFT\",\n    \"at\" : \"2017-01-04T18:53:59.498Z\",\n    \"details\" : \"node_left[G92ZwuuaRY-9n8_tc-IzEg]\",\n    \"last_allocation_status\" : \"no_attempt\"\n  },\n  \"can_allocate\": \"throttled\",\n  \"allocate_explanation\": \"Elasticsearch is currently busy with other activities. It expects to be able to allocate this shard when those activities finish. Please wait.\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"3sULLVJrRneSg0EfBB-2Ew\",\n      \"node_name\" : \"node_t0\",\n      \"transport_address\" : \"127.0.0.1:9400\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"no\",\n      \"deciders\" : [\n        {\n          \"decider\": \"throttling\",\n          \"decision\": \"THROTTLE\",\n          \"explanation\": \"reached the limit of incoming shard recoveries [2], cluster setting [cluster.routing.allocation.node_concurrent_incoming_recoveries=2] (can also be set via [cluster.routing.allocation.node_concurrent_recoveries])\"\n        }\n      ]\n    }\n  ]\n}\n----\n// NOTCONSOLE\n\nThis is a transient message that might appear when a large amount of shards are allocating.\n\n===== Assigned shard\n\n====== Cannot remain on current node\n\nThe following response contains an allocation explanation for an assigned shard.\nThe response indicates the shard is not allowed to remain on its current node\nand must be reallocated.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : true,\n  \"current_state\" : \"started\",\n  \"current_node\" : {\n    \"id\" : \"8lWJeJ7tSoui0bxrwuNhTA\",\n    \"name\" : \"node_t1\",\n    \"transport_address\" : \"127.0.0.1:9401\",\n    \"roles\" : [\"data_content\", \"data_hot\"]\n  },\n  \"can_remain_on_current_node\" : \"no\",            <1>\n  \"can_remain_decisions\" : [                      <2>\n    {\n      \"decider\" : \"filter\",\n      \"decision\" : \"NO\",\n      \"explanation\" : \"node does not match index setting [index.routing.allocation.include] filters [_name:\\\"nonexistent_node\\\"]\"\n    }\n  ],\n  \"can_move_to_other_node\" : \"no\",                <3>\n  \"move_explanation\" : \"This shard may not remain on its current node, but Elasticsearch isn't allowed to move it to another node. Choose a node to which you expect this shard to be allocated, find this node in the node-by-node explanation, and address the reasons which prevent Elasticsearch from allocating this shard there.\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"_P8olZS8Twax9u6ioN-GGA\",\n      \"node_name\" : \"node_t0\",\n      \"transport_address\" : \"127.0.0.1:9400\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"no\",\n      \"weight_ranking\" : 1,\n      \"deciders\" : [\n        {\n          \"decider\" : \"filter\",\n          \"decision\" : \"NO\",\n          \"explanation\" : \"node does not match index setting [index.routing.allocation.include] filters [_name:\\\"nonexistent_node\\\"]\"\n        }\n      ]\n    }\n  ]\n}\n----\n// NOTCONSOLE\n\n<1> Whether the shard is allowed to remain on its current node.\n<2> The deciders that factored into the decision of why the shard is not allowed to remain on its current node.\n<3> Whether the shard is allowed to be allocated to another node.\n\n====== Must remain on current node\n\nThe following response contains an allocation explanation for a shard that must\nremain on its current node. Moving the shard to another node would not improve\ncluster balance.\n\n[source,js]\n----\n{\n  \"index\" : \"my-index-000001\",\n  \"shard\" : 0,\n  \"primary\" : true,\n  \"current_state\" : \"started\",\n  \"current_node\" : {\n    \"id\" : \"wLzJm4N4RymDkBYxwWoJsg\",\n    \"name\" : \"node_t0\",\n    \"transport_address\" : \"127.0.0.1:9400\",\n    \"roles\" : [\"data_content\", \"data_hot\"],\n    \"weight_ranking\" : 1\n  },\n  \"can_remain_on_current_node\" : \"yes\",\n  \"can_rebalance_cluster\" : \"yes\",                <1>\n  \"can_rebalance_to_other_node\" : \"no\",           <2>\n  \"rebalance_explanation\" : \"Elasticsearch cannot rebalance this shard to another node since there is no node to which allocation is permitted which would improve the cluster balance. If you expect this shard to be rebalanced to another node, find this node in the node-by-node explanation and address the reasons which prevent Elasticsearch from rebalancing this shard there.\",\n  \"node_allocation_decisions\" : [\n    {\n      \"node_id\" : \"oE3EGFc8QN-Tdi5FFEprIA\",\n      \"node_name\" : \"node_t1\",\n      \"transport_address\" : \"127.0.0.1:9401\",\n      \"roles\" : [\"data_content\", \"data_hot\"],\n      \"node_decision\" : \"worse_balance\",          <3>\n      \"weight_ranking\" : 1\n    }\n  ]\n}\n----\n// NOTCONSOLE\n\n<1> Whether rebalancing is allowed on the cluster.\n<2> Whether the shard can be rebalanced to another node.\n<3> The reason the shard cannot be rebalanced to the node, in this case indicating that it offers no better balance than the current node.\n\n===== No arguments\n\nIf you call the API with no arguments, {es} retrieves an allocation explanation\nfor an arbitrary unassigned primary or replica shard, returning any unassigned primary shards first.\n\n[source,console]\n----\nGET _cluster/allocation/explain\n----\n// TEST[catch:bad_request]\n\nIf the cluster contains no unassigned shards, the API returns a `400` error.\n"
}