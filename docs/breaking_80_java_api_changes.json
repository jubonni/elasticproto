{
    "meta": {
        "size": 1622,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/breaking_80_java_api_changes.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "breaking_80_java_api_changes",
        "version": "8.15"
    },
    "doc": "[discrete]\n[[breaking_80_java_api_changes]]\n==== Java API changes\n\n[[ilm-hlrc-rename]]\n.The `indexlifecycle` package has been renamed `ilm` in the Java High Level REST Client.\n[%collapsible]\n====\n*Details* +\nIn the high level REST client, the `indexlifecycle` package has been\nrenamed to `ilm` to match the package rename inside the {es} code.\n\n*Impact* +\nUpdate your workflow and applications to use the `ilm` package in place of\n`indexlifecycle`.\n====\n\n.Changes to `Fuzziness`.\n[%collapsible]\n====\n*Details* +\nTo create `Fuzziness` instances, use the `fromString` and `fromEdits` method\ninstead of the `build` method that used to accept both Strings and numeric\nvalues. Several fuzziness setters on query builders (e.g.\nMatchQueryBuilder#fuzziness) now accept only a `Fuzziness` instance instead of\nan Object.\n\nFuzziness used to be lenient when it comes to parsing arbitrary numeric values\nwhile silently truncating them to one of the three allowed edit distances 0, 1\nor 2. This leniency is now removed and the class will throw errors when trying\nto construct an instance with another value (e.g. floats like 1.3 used to get\naccepted but truncated to 1).\n\n*Impact* +\nUse the available constants (e.g. `Fuzziness.ONE`, `Fuzziness.AUTO`) or build\nyour own instance using the above mentioned factory methods. Use only allowed\n`Fuzziness` values.\n====\n\n.Changes to `Repository`.\n[%collapsible]\n====\n*Details* +\nRepository has no dependency on IndexShard anymore. The contract of restoreShard\nand snapshotShard has been reduced to Store and MappingService in order to improve\ntestability.\n\n*Impact* +\nNo action needed.\n====\n"
}