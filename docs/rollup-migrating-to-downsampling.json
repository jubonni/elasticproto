{
    "meta": {
        "size": 4346,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/rollup-migrating-to-downsampling.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "rollup-migrating-to-downsampling",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[rollup-migrating-to-downsampling]]\n=== Migrating from {rollup-cap} to downsampling\n++++\n<titleabbrev>Migrating to downsampling</titleabbrev>\n++++\n\nRollup and downsampling are two different features that allow historical metrics to be rolled up.\nFrom a high level rollup is more flexible compared to downsampling, but downsampling is a more robust and\neasier feature to downsample metrics.\n\nThe following aspects of downsampling are easier or more robust:\n\n* No need to schedule jobs. Downsampling is integrated with Index Lifecycle Management (ILM) and Data Stream Lifecycle (DSL).\n* No separate search API. Downsampled indices can be accessed via the search api and es|ql.\n* No separate rollup configuration. Downsampling uses the time series dimension and metric configuration from the mapping.\n\nIt isn't possible to migrate all rollup usages to downsampling. The main requirement\nis that the data should be stored in Elasticsearch as <<tsds,time series data stream (TSDS)>>.\nRollup usages that basically roll the data up by time and all dimensions can migrate to downsampling.\n\nAn example rollup usage that can be migrated to downsampling:\n\n[source,console]\n--------------------------------------------------\nPUT _rollup/job/sensor\n{\n  \"index_pattern\": \"sensor-*\",\n  \"rollup_index\": \"sensor_rollup\",\n  \"cron\": \"0 0 * * * *\", <1>\n  \"page_size\": 1000,\n  \"groups\": { <2>\n    \"date_histogram\": {\n      \"field\": \"timestamp\",\n      \"fixed_interval\": \"60m\" <3>\n    },\n    \"terms\": {\n      \"fields\": [ \"node\" ]\n    }\n  },\n  \"metrics\": [\n    {\n      \"field\": \"temperature\",\n      \"metrics\": [ \"min\", \"max\", \"sum\" ] <4>\n    },\n    {\n      \"field\": \"voltage\",\n      \"metrics\": [ \"avg\" ] <4>\n    }\n  ]\n}\n--------------------------------------------------\n// TEST[setup:sensor_index]\n\nThe equivalent <<tsds,time series data stream (TSDS)>> setup that uses downsampling via DSL:\n\n[source,console]\n--------------------------------------------------\nPUT _index_template/sensor-template\n{\n  \"index_patterns\": [\"sensor-*\"],\n  \"data_stream\": { },\n  \"template\": {\n    \"lifecycle\": {\n        \"downsampling\": [\n            {\n                \"after\": \"1d\", <1>\n                \"fixed_interval\": \"1h\" <3>\n            }\n        ]\n    },\n    \"settings\": {\n      \"index.mode\": \"time_series\"\n    },\n    \"mappings\": {\n      \"properties\": {\n        \"node\": {\n          \"type\": \"keyword\",\n          \"time_series_dimension\": true <2>\n        },\n        \"temperature\": {\n          \"type\": \"half_float\",\n          \"time_series_metric\": \"gauge\" <4>\n        },\n        \"voltage\": {\n          \"type\": \"half_float\",\n          \"time_series_metric\": \"gauge\" <4>\n        },\n        \"@timestamp\": { <2>\n          \"type\": \"date\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\n////\n[source,console]\n----\nDELETE _index_template/sensor-template\n----\n// TEST[continued]\n////\n\nThe downsample configuration is included in the above template for a <<tsds,time series data stream (TSDS)>>.\nOnly the `downsampling` part is necessary to enable downsampling, which indicates when to downsample to what fixed interval.\n\n<1> In the rollup job, the `cron` field determines when the rollup documents. In the index template,\n    the `after` field determines when downsampling will rollup documents (note that this the time after a rollover has been performed).\n<2> In the rollup job, the `groups` field determines all dimensions of the group documents are rolled up to. In the index template,\n    the fields with `time_series_dimension` set `true` and the `@timestamp` field determine the group.\n<3> In the rollup job, the `fixed_interval` field determines how timestamps are aggregated as part of the grouping.\n    In the index template, the `fixed_interval` field has the same purpose. Note that downsampling does not support calendar intervals.\n<4> In the rollup job, the `metrics` field define the metrics and how to store these metrics. In the index template,\n    all fields with a `time_series_metric` are metric fields. If a field has `gauge` as `time_series_metric` attribute\n    value, then min, max, sum and value counts are stored for this field in the downsampled index. If a field has\n    `counter` as  `time_series_metric` attribute value, then only the last value stored for this field in the downsampled\n    index.\n"
}