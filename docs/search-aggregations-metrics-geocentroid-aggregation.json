{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.600580",
        "size": 7151,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-metrics-geocentroid-aggregation.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "search-aggregations-metrics-geocentroid-aggregation",
        "version": "8.15"
    },
    "doc": "[[search-aggregations-metrics-geocentroid-aggregation]]\n=== Geo-centroid aggregation\n\n++++\n<titleabbrev>Geo-centroid</titleabbrev>\n++++\n\nA metric aggregation that computes the weighted {wikipedia}/Centroid[centroid] from all coordinate values for geo fields.\n\nExample:\n\n[source,console]\n--------------------------------------------------\nPUT /museums\n{\n  \"mappings\": {\n    \"properties\": {\n      \"location\": {\n        \"type\": \"geo_point\"\n      }\n    }\n  }\n}\n\nPOST /museums/_bulk?refresh\n{\"index\":{\"_id\":1}}\n{\"location\": \"POINT (4.912350 52.374081)\", \"city\": \"Amsterdam\", \"name\": \"NEMO Science Museum\"}\n{\"index\":{\"_id\":2}}\n{\"location\": \"POINT (4.901618 52.369219)\", \"city\": \"Amsterdam\", \"name\": \"Museum Het Rembrandthuis\"}\n{\"index\":{\"_id\":3}}\n{\"location\": \"POINT (4.914722 52.371667)\", \"city\": \"Amsterdam\", \"name\": \"Nederlands Scheepvaartmuseum\"}\n{\"index\":{\"_id\":4}}\n{\"location\": \"POINT (4.405200 51.222900)\", \"city\": \"Antwerp\", \"name\": \"Letterenhuis\"}\n{\"index\":{\"_id\":5}}\n{\"location\": \"POINT (2.336389 48.861111)\", \"city\": \"Paris\", \"name\": \"Mus\u00e9e du Louvre\"}\n{\"index\":{\"_id\":6}}\n{\"location\": \"POINT (2.327000 48.860000)\", \"city\": \"Paris\", \"name\": \"Mus\u00e9e d'Orsay\"}\n\nPOST /museums/_search?size=0\n{\n  \"aggs\": {\n    \"centroid\": {\n      \"geo_centroid\": {\n        \"field\": \"location\" <1>\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n<1> The `geo_centroid` aggregation specifies the field to use for computing the centroid. (NOTE: field must be a <<geo-point>> type)\n\nThe above aggregation demonstrates how one would compute the centroid of the location field for all museums' documents.\n\nThe response for the above aggregation:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"centroid\": {\n      \"location\": {\n        \"lat\": 51.00982965203002,\n        \"lon\": 3.9662131341174245\n      },\n      \"count\": 6\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\nThe `geo_centroid` aggregation is more interesting when combined as a sub-aggregation to other bucket aggregations.\n\nExample:\n\n[source,console]\n--------------------------------------------------\nPOST /museums/_search?size=0\n{\n  \"aggs\": {\n    \"cities\": {\n      \"terms\": { \"field\": \"city.keyword\" },\n      \"aggs\": {\n        \"centroid\": {\n          \"geo_centroid\": { \"field\": \"location\" }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\nThe above example uses `geo_centroid` as a sub-aggregation to a\n<<search-aggregations-bucket-terms-aggregation, terms>> bucket aggregation\nfor finding the central location for museums in each city.\n\nThe response for the above aggregation:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"cities\": {\n      \"sum_other_doc_count\": 0,\n      \"doc_count_error_upper_bound\": 0,\n      \"buckets\": [\n        {\n          \"key\": \"Amsterdam\",\n          \"doc_count\": 3,\n          \"centroid\": {\n            \"location\": {\n              \"lat\": 52.371655656024814,\n              \"lon\": 4.909563297405839\n            },\n            \"count\": 3\n          }\n        },\n        {\n          \"key\": \"Paris\",\n          \"doc_count\": 2,\n          \"centroid\": {\n            \"location\": {\n              \"lat\": 48.86055548675358,\n              \"lon\": 2.3316944623366\n            },\n            \"count\": 2\n          }\n        },\n        {\n          \"key\": \"Antwerp\",\n          \"doc_count\": 1,\n          \"centroid\": {\n            \"location\": {\n              \"lat\": 51.22289997059852,\n              \"lon\": 4.40519998781383\n            },\n            \"count\": 1\n          }\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\n\n[discrete]\n[role=\"xpack\"]\n[[geocentroid-aggregation-geo-shape]]\n==== Geo Centroid Aggregation on `geo_shape` fields\n\nThe centroid metric for geoshapes is more nuanced than for points. The centroid of a specific aggregation bucket\ncontaining shapes is the centroid of the highest-dimensionality shape type in the bucket. For example, if a bucket contains\nshapes comprising of polygons and lines, then the lines do not contribute to the centroid metric. Each type of shape's\ncentroid is calculated differently. Envelopes and circles ingested via the <<ingest-circle-processor>> are treated\nas polygons.\n\n|===\n|Geometry Type | Centroid Calculation\n\n|[Multi]Point\n|equally weighted average of all the coordinates\n\n|[Multi]LineString\n|a weighted average of all the centroids of each segment, where the weight of each segment is its length in degrees\n\n|[Multi]Polygon\n|a weighted average of all the centroids of all the triangles of a polygon where the triangles are formed by every two consecutive vertices and the starting-point.\n holes have negative weights. weights represent the area of the triangle in deg^2 calculated\n\n|GeometryCollection\n|The centroid of all the underlying geometries with the highest dimension. If Polygons and Lines and/or Points, then lines and/or points are ignored.\n If Lines and Points, then points are ignored\n|===\n\nExample:\n\n[source,console]\n--------------------------------------------------\nPUT /places\n{\n  \"mappings\": {\n    \"properties\": {\n      \"geometry\": {\n        \"type\": \"geo_shape\"\n      }\n    }\n  }\n}\n\nPOST /places/_bulk?refresh\n{\"index\":{\"_id\":1}}\n{\"name\": \"NEMO Science Museum\", \"geometry\": \"POINT(4.912350 52.374081)\" }\n{\"index\":{\"_id\":2}}\n{\"name\": \"Sportpark De Weeren\", \"geometry\": { \"type\": \"Polygon\", \"coordinates\": [ [ [ 4.965305328369141, 52.39347642069457 ], [ 4.966979026794433, 52.391721758934835 ], [ 4.969425201416015, 52.39238958618537 ], [ 4.967944622039794, 52.39420969150824 ], [ 4.965305328369141, 52.39347642069457 ] ] ] } }\n\nPOST /places/_search?size=0\n{\n  \"aggs\": {\n    \"centroid\": {\n      \"geo_centroid\": {\n        \"field\": \"geometry\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"centroid\": {\n      \"location\": {\n        \"lat\": 52.39296147599816,\n        \"lon\": 4.967404240742326\n      },\n      \"count\": 2\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\n\n[WARNING]\n.Using `geo_centroid` as a sub-aggregation of `geohash_grid`\n====\nThe <<search-aggregations-bucket-geohashgrid-aggregation,`geohash_grid`>>\naggregation places documents, not individual geopoints, into buckets. If a\ndocument's `geo_point` field contains <<array,multiple values>>, the document\ncould be assigned to multiple buckets, even if one or more of its geopoints are\noutside the bucket boundaries.\n\nIf a `geocentroid` sub-aggregation is also used, each centroid is calculated\nusing all geopoints in a bucket, including those outside the bucket boundaries.\nThis can result in centroids outside of bucket boundaries.\n====\n"
}