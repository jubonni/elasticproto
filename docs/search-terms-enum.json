{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.713582",
        "size": 3495,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-terms-enum.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "search-terms-enum",
        "version": "8.15"
    },
    "doc": "[[search-terms-enum]]\n=== Terms enum API\n++++\n<titleabbrev>Terms enum</titleabbrev>\n++++\n\nThe terms enum API can be used to discover terms in the index that match\na partial string. Supported field types are <<keyword-field-type,`keyword`>>,\n<<constant-keyword-field-type,`constant_keyword`>>, <<flattened,`flattened`>>,\n<<version, `version`>> and <<ip, `ip`>>. This is used for auto-complete:\n\n[source,console]\n--------------------------------------------------\nPOST stackoverflow/_terms_enum\n{\n    \"field\" : \"tags\",\n    \"string\" : \"kiba\"\n}\n--------------------------------------------------\n// TEST[setup:stackoverflow]\n\n\nThe API returns the following response:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"_shards\": {\n    \"total\": 1,\n    \"successful\": 1,\n    \"failed\": 0\n  },\n  \"terms\": [\n    \"kibana\"\n  ],\n  \"complete\" : true\n}\n--------------------------------------------------\n\nIf the `complete` flag is `false`, the returned `terms` set may be incomplete\nand should be treated as approximate. This can occur due to a few reasons, such\nas a request timeout or a node error.\n\nNOTE: The terms enum API may return terms from deleted documents. Deleted\ndocuments are initially only marked as deleted. It is not until their segments\nare <<index-modules-merge,merged>> that documents are actually deleted. Until\nthat happens, the terms enum API will return terms from these documents.\n\n[[search-terms-enum-api-request]]\n==== {api-request-title}\n\n`GET /<target>/_terms_enum`\n\n\n[[search-terms-enum-api-desc]]\n==== {api-description-title}\n\nThe terms_enum API  can be used to discover terms in the index that begin with the provided\nstring. It is designed for low-latency look-ups used in auto-complete scenarios.\n\n\n[[search-terms-enum-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Required, string) Comma-separated list of data streams, indices, and aliases\nto search. Supports wildcards (`*`). To search all data streams or indices, omit\nthis parameter or use `*` or `_all`.\n\n[[search-terms-enum-api-request-body]]\n==== {api-request-body-title}\n\n[[terms-enum-field-param]]\n`field`::\n(Mandatory, string)\nWhich field to match\n\n[[terms-enum-string-param]]\n`string`::\n(Optional, string)\nThe string to match at the start of indexed terms. If not provided, all terms in the field\nare considered.\n\nNOTE: The prefix string cannot be larger than the larges possible keyword value, which is\nLucene's term byte-length limit of `32766`\n\n[[terms-enum-size-param]]\n`size`::\n(Optional, integer)\nHow many matching terms to return. Defaults to 10\n\n[[terms-enum-timeout-param]]\n`timeout`::\n(Optional, <<time-units,time value>>)\nThe maximum length of time to spend collecting results. Defaults to \"1s\" (one second).\nIf the timeout is exceeded the `complete` flag set to false in the response and the results may\nbe partial or empty.\n\n[[terms-enum-case_insensitive-param]]\n`case_insensitive`::\n(Optional, boolean)\nWhen true the provided search string is matched against index terms without case sensitivity.\nDefaults to false.\n\n[[terms-enum-index_filter-param]]\n`index_filter`::\n(Optional,  <<query-dsl,query object>> Allows to filter an index shard if the provided\nquery rewrites to `match_none`.\n\n[[terms-enum-search_after-param]]\n`search_after`::\n(Optional, string)\nThe string after which terms in the index should be returned. Allows for a form of\npagination if the last result from one request is passed as the `search_after`\nparameter for a subsequent request.\n"
}