{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.446595",
        "size": 3145,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/dynamic.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "dynamic",
        "version": "8.15"
    },
    "doc": "[[dynamic]]\n=== `dynamic`\n\nWhen you index a document containing a new field, {es} <<dynamic-mapping,adds the field dynamically>> to a document or to inner objects within a document. The\nfollowing document adds the string field `username`, the object field\n`name`, and two string fields under the `name` object:\n\n[source,console]\n----\nPUT my-index-000001/_doc/1\n{\n  \"username\": \"johnsmith\",\n  \"name\": { <1>\n    \"first\": \"John\",\n    \"last\": \"Smith\"\n  }\n}\n\nGET my-index-000001/_mapping <2>\n----\n<1> Refer to fields under the `name` object as `name.first` and `name.last`.\n<2> Check the mapping to view changes.\n\nThe following document adds two string fields: `email` and `name.middle`:\n\n[source,console]\n----\nPUT my-index-000001/_doc/2\n{\n  \"username\": \"marywhite\",\n  \"email\": \"mary@white.com\",\n  \"name\": {\n    \"first\": \"Mary\",\n    \"middle\": \"Alice\",\n    \"last\": \"White\"\n  }\n}\n\nGET my-index-000001/_mapping\n----\n\n[[dynamic-inner-objects]]\n==== Setting `dynamic` on inner objects\n<<object,Inner objects>> inherit the `dynamic` setting from their parent\nobject. In the following example, dynamic mapping is\ndisabled at the type level, so no new top-level fields will be added\ndynamically.\n\nHowever, the `user.social_networks` object enables dynamic mapping, so you can\nadd fields to this inner object.\n\n[source,console]\n----\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"dynamic\": false, <1>\n    \"properties\": {\n      \"user\": { <2>\n        \"properties\": {\n          \"name\": {\n            \"type\": \"text\"\n          },\n          \"social_networks\": {\n            \"dynamic\": true, <3>\n            \"properties\": {}\n          }\n        }\n      }\n    }\n  }\n}\n----\n\n<1> Disables dynamic mapping at the type level.\n<2> The `user` object inherits the type-level setting.\n<3> Enables dynamic mapping for this inner object.\n\n[[dynamic-parameters]]\n==== Parameters for `dynamic`\nThe `dynamic` parameter controls whether new fields are added dynamically, and\naccepts the following parameters:\n\n[horizontal]\n`true`::    New fields are added to the mapping (default).\n`runtime`:: New fields are added to the mapping as <<runtime,runtime fields>>.\n            These fields are not indexed, and are loaded from `_source` at query time.\n`false`::   New fields are ignored. These fields will not be indexed\n            or searchable, but will still appear in the `_source` field of returned hits. These fields will not be added\n            to the mapping, and new fields must be added explicitly.\n`strict`::  If new fields are detected, an exception is thrown and the document\n            is rejected. New fields must be explicitly added to the mapping.\n\n[[dynamic-field-limit]]\n==== Behavior when reaching the field limit\nSetting `dynamic` to either `true` or `runtime` will only add dynamic fields until <<mapping-settings-limit,`index.mapping.total_fields.limit`>> is reached.\nBy default, index requests for documents that would exceed the field limit will fail,\nunless <<mapping-settings-limit,`index.mapping.total_fields.ignore_dynamic_beyond_limit`>> is set to `true`.\nIn that case, ignored fields are added to the <<mapping-ignored-field, `_ignored` metadata field>>.\n"
}