{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.600272",
        "size": 3414,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-match-query-phrase-prefix.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-match-query-phrase-prefix",
        "version": "8.15"
    },
    "doc": "[[query-dsl-match-query-phrase-prefix]]\n=== Match phrase prefix query\n++++\n<titleabbrev>Match phrase prefix</titleabbrev>\n++++\n\nReturns documents that contain the words of a provided text, in the **same\norder** as provided. The last term of the provided text is treated as a\n<<query-dsl-prefix-query,prefix>>, matching any words that begin with that term.\n\n\n[[match-phrase-prefix-query-ex-request]]\n==== Example request\n\nThe following search returns documents that contain phrases beginning with\n`quick brown f` in the `message` field.\n\nThis search would match a `message` value of `quick brown fox` or `two quick\nbrown ferrets` but not `the fox is quick and brown`.\n\n[source,console]\n--------------------------------------------------\nGET /_search\n{\n  \"query\": {\n    \"match_phrase_prefix\": {\n      \"message\": {\n        \"query\": \"quick brown f\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[[match-phrase-prefix-top-level-params]]\n==== Top-level parameters for `match_phrase_prefix`\n`<field>`::\n(Required, object) Field you wish to search.\n\n[[match-phrase-prefix-field-params]]\n==== Parameters for `<field>`\n`query`::\n+\n--\n(Required, string) Text you wish to find in the provided `<field>`. \n\nThe `match_phrase_prefix` query <<analysis,analyzes>> any provided text into\ntokens before performing a search. The last term of this text is treated as a\n<<query-dsl-prefix-query,prefix>>, matching any words that begin with that term.\n--\n\n`analyzer`::\n(Optional, string) <<analysis,Analyzer>> used to convert text in the `query`\nvalue into tokens. Defaults to the <<specify-index-time-analyzer,index-time\nanalyzer>> mapped for the `<field>`. If no analyzer is mapped, the index's\ndefault analyzer is used.\n\n`max_expansions`::\n(Optional, integer) Maximum number of terms to which the last provided term of\nthe `query` value will expand. Defaults to `50`.\n\n`slop`::\n(Optional, integer) Maximum number of positions allowed between matching tokens.\nDefaults to `0`. Transposed terms have a slop of `2`.\n\n`zero_terms_query`::\n+\n--\n(Optional, string) Indicates whether no documents are returned if the `analyzer`\nremoves all tokens, such as when using a `stop` filter. Valid values are:\n\n `none` (Default)::\nNo documents are returned if the `analyzer` removes all tokens.\n\n `all`::\nReturns all documents, similar to a <<query-dsl-match-all-query,`match_all`>>\nquery.\n--\n\n\n[[match-phrase-prefix-query-notes]]\n==== Notes\n\n[[match-phrase-prefix-autocomplete]]\n===== Using the match phrase prefix query for search autocompletion\nWhile easy to set up, using the `match_phrase_prefix` query for search\nautocompletion can sometimes produce confusing results.\n\nFor example, consider the query string `quick brown f`. This query works by\ncreating a phrase query out of `quick` and `brown` (i.e. the term `quick` must\nexist and must be followed by the term `brown`). Then it looks at the sorted\nterm dictionary to find the first 50 terms that begin with `f`, and adds these\nterms to the phrase query.\n\nThe problem is that the first 50 terms may not include the term `fox` so the\nphrase `quick brown fox` will not be found. This usually isn't a problem as\nthe user will continue to type more letters until the word they are looking\nfor appears.\n\nFor better solutions for _search-as-you-type_ see the\n<<completion-suggester,completion suggester>> and\nthe <<search-as-you-type,`search_as_you_type` field type>>."
}