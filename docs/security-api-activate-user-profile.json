{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.227808",
        "size": 4380,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-activate-user-profile.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": false,
        "title": "security-api-activate-user-profile",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-activate-user-profile]]\n=== Activate user profile API\n++++\n<titleabbrev>Activate user profile</titleabbrev>\n++++\n\nNOTE: The user profile feature is designed only for use by {kib} and\nElastic\u2019s {observability}, {ents}, and {elastic-sec} solutions. Individual\nusers and external applications should not call this API directly. Elastic reserves\nthe right to change or remove this feature in future releases without prior notice.\n\nCreates or updates a user profile on behalf of another user.\n\n[[security-api-activate-user-profile-request]]\n==== {api-request-title}\n\n`POST /_security/profile/_activate`\n\n[[security-api-activate-user-profile-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have the `manage_user_profile` cluster privilege.\n\n[[security-api-activate-user-profile-desc]]\n==== {api-description-title}\n\nThe activate user profile API creates or updates a profile document for end\nusers with information that is extracted from the user's authentication object,\nincluding `username`, `full_name`, `roles`, and the authentication realm.\nFor example, in the JWT `access_token` case, the profile user's `username` is\nextracted from the JWT token claim pointed to by the `claims.principal`\nsetting of the JWT realm that authenticated the token.\n\nWhen updating a profile document, the API enables the document if it was\ndisabled. Any updates do not change existing content for either the `labels` or\n`data` fields.\n\nThis API is intended only for use by applications (such as {kib}) that need to\ncreate or update profiles for end users.\n\nIMPORTANT: The calling application must have either an `access_token`, or a\ncombination of `username` and `password` for the user that the profile document\nis intended for.\n\n[role=\"child_attributes\"]\n[[security-api-activate-user-profile-request-body]]\n==== {api-request-body-title}\n\n`access_token`::\n(Required*, string)\nThe user's <<security-api-get-token, {es} access token>>, or JWT. Both <<jwt-realm-oauth2, access>> and\n<<jwt-realm-oidc, id>> JWT token types are supported, and they depend on the underlying JWT realm configuration.\nIf you specify the `access_token` grant type, this parameter is required. It is not valid with other grant types.\n\ninclude::client-authentication.asciidoc[]\n\n`grant_type`::\n(Required, string)\nThe type of grant.\n+\n.Valid values for `grant_type`\n[%collapsible%open]\n====\n`access_token`::\nIn this type of grant, you must supply either an access token, that was created by the\n{es} token service (see <<security-api-get-token>> and <<encrypt-http-communication>>),\nor a <<jwt-auth-realm, JWT>> (either a JWT `access_token` or a JWT `id_token`).\n\n`password`::\nIn this type of grant, you must supply the `username` and `password` for the\nuser that you want to create the API key for.\n====\n\n`password`::\n(Required*, string)\nThe user's password. If you specify the `password` grant type, this parameter is\nrequired. It is not valid with other grant types.\n\n`username`::\n(Required*, string)\nThe username that identifies the user. If you specify the `password` grant type,\nthis parameter is required. It is not valid with other grant types.\n\n*Indicates that the setting is required in some, but not all situations.\n\n[[security-api-activate-user-profile-response-body]]\n==== {api-response-body-title}\n\nA successful activate user profile API call returns a JSON structure that contains\nthe profile unique ID, user information, timestamp for the operation and version\ncontrol numbers.\n\n[[security-api-activate-user-profile-example]]\n==== {api-examples-title}\n\n[source,console]\n----\nPOST /_security/profile/_activate\n{\n  \"grant_type\": \"password\",\n  \"username\" : \"jacknich\",\n  \"password\" : \"l0ng-r4nd0m-p@ssw0rd\"\n}\n----\n// TEST[setup:jacknich_user]\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"uid\": \"u_79HkWkwmnBH5gqFKwoxggWPjEBOur1zLPXQPEl1VBW0_0\",\n  \"enabled\": true,\n  \"last_synchronized\": 1642650651037,\n  \"user\": {\n    \"username\": \"jacknich\",\n    \"roles\": [\n      \"admin\", \"other_role1\"\n    ],\n    \"realm_name\": \"native\",\n    \"full_name\": \"Jack Nicholson\",\n    \"email\": \"jacknich@example.com\"\n  },\n  \"labels\": {},\n  \"data\": {},\n  \"_doc\": {\n    \"_primary_term\": 88,\n    \"_seq_no\": 66\n  }\n}\n----\n// TESTRESPONSE[s/1642650651037/$body.last_synchronized/]\n// TESTRESPONSE[s/88/$body._doc._primary_term/]\n// TESTRESPONSE[s/66/$body._doc._seq_no/]\n"
}