{
    "meta": {
        "size": 4984,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/term-suggester.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "term-suggester",
        "version": "8.15"
    },
    "doc": "[[term-suggester]]\n==== Term suggester\n\nThe `term` suggester suggests terms based on edit distance. The provided\nsuggest text is analyzed before terms are suggested. The suggested terms\nare provided per analyzed suggest text token. The `term` suggester\ndoesn't take the query into account that is part of request.\n\n===== Common suggest options:\n\n[horizontal]\n`text`::\n    The suggest text. The suggest text is a required option that\n    needs to be set globally or per suggestion.\n\n`field`::\n    The field to fetch the candidate suggestions from. This is\n    a required option that either needs to be set globally or per\n    suggestion.\n\n`analyzer`::\n    The analyzer to analyse the suggest text with. Defaults\n    to the search analyzer of the suggest field.\n\n`size`::\n    The maximum corrections to be returned per suggest text\n    token.\n\n`sort`::\n    Defines how suggestions should be sorted per suggest text\n    term. Two possible values:\n+\n    ** `score`:     Sort by score first, then document frequency and\n                    then the term itself.\n    ** `frequency`: Sort by document frequency first, then similarity\n                    score and then the term itself.\n+\n`suggest_mode`::\n    The suggest mode controls what suggestions are\n    included or controls for what suggest text terms, suggestions should be\n    suggested. Three possible values can be specified:\n+\n     ** `missing`:  Only provide suggestions for suggest text terms that are\n                    not in the index (default).\n     ** `popular`:  Only suggest suggestions that occur in more docs than\n                    the original suggest text term.\n     ** `always`:   Suggest any matching suggestions based on terms in the\n                    suggest text.\n\n===== Other term suggest options:\n\n[horizontal]\n`max_edits`::\n    The maximum edit distance candidate suggestions can\n    have in order to be considered as a suggestion. Can only be a value\n    between 1 and 2. Any other value results in a bad request error being\n    thrown. Defaults to 2.\n\n`prefix_length`::\n    The number of minimal prefix characters that must\n    match in order be a candidate for suggestions. Defaults to 1. Increasing\n    this number improves spellcheck performance. Usually misspellings don't\n    occur in the beginning of terms.\n\n`min_word_length`::\n    The minimum length a suggest text term must have in\n    order to be included. Defaults to `4`.\n\n`shard_size`::\n    Sets the maximum number of suggestions to be retrieved\n    from each individual shard. During the reduce phase only the top N\n    suggestions are returned based on the `size` option. Defaults to the\n    `size` option. Setting this to a value higher than the `size` can be\n    useful in order to get a more accurate document frequency for spelling\n    corrections at the cost of performance. Due to the fact that terms are\n    partitioned amongst shards, the shard level document frequencies of\n    spelling corrections may not be precise. Increasing this will make these\n    document frequencies more precise.\n\n`max_inspections`::\n    A factor that is used to multiply with the\n    `shard_size` in order to inspect more candidate spelling corrections on\n    the shard level. Can improve accuracy at the cost of performance.\n    Defaults to 5.\n\n`min_doc_freq`::\n    The minimal threshold in number of documents a\n    suggestion should appear in. This can be specified as an absolute number\n    or as a relative percentage of number of documents. This can improve\n    quality by only suggesting high frequency terms. Defaults to 0f and is\n    not enabled. If a value higher than 1 is specified, then the number\n    cannot be fractional. The shard level document frequencies are used for\n    this option.\n\n`max_term_freq`::\n    The maximum threshold in number of documents in which a\n    suggest text token can exist in order to be included. Can be a relative\n    percentage number (e.g., 0.4) or an absolute number to represent document\n    frequencies. If a value higher than 1 is specified, then fractional can\n    not be specified. Defaults to 0.01f. This can be used to exclude high\n    frequency terms -- which are usually spelled correctly -- from being spellchecked.\n    This also improves the spellcheck performance. The shard level document frequencies\n    are used for this option.\n\n`string_distance`::\n    Which string distance implementation to use for comparing how similar\n    suggested terms are. Five possible values can be specified:\n    \n    ** `internal`: The default based on damerau_levenshtein but highly optimized\n    for comparing string distance for terms inside the index.\n    ** `damerau_levenshtein`: String distance algorithm based on\n    Damerau-Levenshtein algorithm.\n    ** `levenshtein`: String distance algorithm based on Levenshtein edit distance\n    algorithm.\n    ** `jaro_winkler`: String distance algorithm based on Jaro-Winkler algorithm.\n    ** `ngram`: String distance algorithm based on character n-grams.\n"
}