{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.286071",
        "size": 44211,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-trained-models.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": true,
        "title": "get-trained-models",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[get-trained-models]]\n= Get trained models API\n[subs=\"attributes\"]\n++++\n<titleabbrev>Get trained models</titleabbrev>\n++++\n\nRetrieves configuration information about {ml-docs}/ml-nlp-deploy-models.html[{infer} trained models].\n\n\n[[ml-get-trained-models-request]]\n== {api-request-title}\n\n`GET _ml/trained_models/` +\n\n`GET _ml/trained_models/<model_id>` +\n\n`GET _ml/trained_models/_all` +\n\n`GET _ml/trained_models/<model_id1>,<model_id2>` +\n\n`GET _ml/trained_models/<model_id_pattern*>`\n\n\n[[ml-get-trained-models-prereq]]\n== {api-prereq-title}\n\nRequires the `monitor_ml` cluster privilege. This privilege is included in the\n`machine_learning_user` built-in role.\n\n\n//[[ml-get-trained-models-desc]]\n//== {api-description-title}\n\n[[ml-get-trained-models-path-params]]\n== {api-path-parms-title}\n\n`<model_id>`::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=model-id-or-alias]\n+\nYou can get information for multiple trained models in a single API request by\nusing a comma-separated list of model IDs or a wildcard expression.\n\n[[ml-get-trained-models-query-params]]\n== {api-query-parms-title}\n\n`allow_no_match`::\n(Optional, Boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=allow-no-match-models]\n\n`decompress_definition`::\n(Optional, Boolean)\nSpecifies whether the included model definition should be returned as a JSON map\n(`true`) or in a custom compressed format (`false`). Defaults to `true`.\n\n`exclude_generated`::\n(Optional, Boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=exclude-generated]\n\n`from`::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=from-models]\n\n`include`::\n(Optional, string)\nA comma delimited string of optional fields to include in the response body. The\ndefault value is empty, indicating no optional fields are included. Valid\noptions are:\n - `definition`: Includes the model definition.\n - `feature_importance_baseline`: Includes the baseline for {feat-imp} values.\n - `hyperparameters`: Includes the information about hyperparameters used to\n    train the model. This information consists of the value, the absolute and\n    relative importance of the hyperparameter as well as an indicator of whether\n    it was specified by the user or tuned during hyperparameter optimization.\n - `total_feature_importance`: Includes the total {feat-imp} for the training\n   data set.\n - `definition_status`: Includes the field `fully_defined` indicating if the\nfull model definition is present.\nThe baseline and total {feat-imp} values are returned in the `metadata` field\nin the response body.\n\n`size`::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=size-models]\n\n`tags`::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=tags]\n\n[role=\"child_attributes\"]\n[[ml-get-trained-models-results]]\n== {api-response-body-title}\n\n`trained_model_configs`::\n(array)\nAn array of trained model resources, which are sorted by the `model_id` value in\nascending order.\n+\n.Properties of trained model resources\n[%collapsible%open]\n====\n`created_by`:::\n(string)\nThe creator of the trained model.\n\n`create_time`:::\n(<<time-units,time units>>)\nThe time when the trained model was created.\n\n`default_field_map` :::\n(object)\nA string object that contains the default field map to use when inferring\nagainst the model. For example, {dfanalytics} may train the model on a specific\nmulti-field `foo.keyword`. The analytics job would then supply a default field\nmap entry for `\"foo\" : \"foo.keyword\"`.\n+\nAny field map described in the inference configuration takes precedence.\n\n`description`:::\n(string)\nThe free-text description of the trained model.\n\n`model_size_bytes`:::\n(integer)\nThe estimated model size in bytes to keep the trained model in memory.\n\n`estimated_operations`:::\n(integer)\nThe estimated number of operations to use the trained model.\n\n`inference_config`:::\n(object)\nThe default configuration for inference. This can be either a `regression`\nor `classification` configuration. It must match the `target_type` of the\nunderlying `definition.trained_model`.\n+\n.Properties of `inference_config`\n[%collapsible%open]\n=====\n`classification`::::\n(object)\nClassification configuration for inference.\n+\n.Properties of classification inference\n[%collapsible%open]\n======\n`num_top_classes`:::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-classes]\n\n`num_top_feature_importance_values`:::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-num-top-feature-importance-values]\n\n`prediction_field_type`:::\n(string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-prediction-field-type]\n\n`results_field`:::\n(string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n\n`top_classes_results_field`:::\n(string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-classification-top-classes-results-field]\n======\n`fill_mask`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-fill-mask]\n+\n.Properties of fill_mask inference\n[%collapsible%open]\n======\n`mask_token`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-mask-token]\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n\n`ner`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-ner]\n+\n.Properties of ner inference\n[%collapsible%open]\n======\n`classification_labels`::::\n(Optional, string)\nAn array of classification labels. NER supports only\nInside-Outside-Beginning labels (IOB) and only persons, organizations, locations,\nand miscellaneous. For example:\n`[\"O\", \"B-PER\", \"I-PER\", \"B-ORG\", \"I-ORG\", \"B-LOC\", \"I-LOC\", \"B-MISC\", \"I-MISC\"]`.\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored\n=======\n======\n\n`pass_through`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-pass-through]\n+\n.Properties of pass_through inference\n[%collapsible%open]\n======\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n\n`regression`::::\n(object)\nRegression configuration for inference.\n+\n.Properties of regression inference\n[%collapsible%open]\n======\n`num_top_feature_importance_values`:::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-regression-num-top-feature-importance-values]\n\n`results_field`:::\n(string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n======\n`text_classification`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-text-classification]\n+\n.Properties of text_classification inference\n[%collapsible%open]\n======\n`classification_labels`::::\n(Optional, string)\nAn array of classification labels.\n\n`num_top_classes`::::\n(Optional, integer)\nSpecifies the number of top class predictions to return. Defaults to all classes (-1).\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n`text_embedding`::::\n(Object, optional)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-text-embedding]\n+\n.Properties of text_embedding inference\n[%collapsible%open]\n======\n`embedding_size`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-text-embedding-size]\n\n`results_field`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-results-field]\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n`text_similarity`::::\n(Object, optional)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-text-similarity]\n+\n.Properties of text_similarity inference\n[%collapsible%open]\n======\n`span_score_combination_function`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-text-similarity-span-score-func]\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`span`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-span]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n`zero_shot_classification`::::\n(Object, optional)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-zero-shot-classification]\n+\n.Properties of zero_shot_classification inference\n[%collapsible%open]\n======\n`classification_labels`::::\n(Required, array)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-zero-shot-classification-classification-labels]\n\n`hypothesis_template`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-zero-shot-classification-hypothesis-template]\n\n`labels`::::\n(Optional, array)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-zero-shot-classification-labels]\n\n`multi_label`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-zero-shot-classification-multi-label]\n\n`tokenization`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization]\n+\n.Properties of tokenization\n[%collapsible%open]\n=======\n`bert`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert]\n+\n.Properties of bert\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-with-special-tokens]\n========\n`roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta]\n+\n.Properties of roberta\n[%collapsible%open]\n========\n`add_prefix_space`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-add-prefix-space]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`mpnet`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet]\n+\n.Properties of mpnet\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-mpnet-with-special-tokens]\n========\n`xlm_roberta`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-xlm-roberta]\n+\n.Properties of xlm_roberta\n[%collapsible%open]\n========\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-roberta-with-special-tokens]\n========\n`bert_ja`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja]\n+\n.Properties of bert_ja\n[%collapsible%open]\n========\n`do_lower_case`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-do-lower-case]\n\n`max_sequence_length`::::\n(Optional, integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-max-sequence-length]\n\n`truncate`::::\n(Optional, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-truncate]\n\n`with_special_tokens`::::\n(Optional, boolean)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-tokenization-bert-ja-with-special-tokens]\n========\n=======\n`vocabulary`::::\n(Optional, object)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-config-nlp-vocabulary]\n+\n.Properties of vocabulary\n[%collapsible%open]\n=======\n`index`::::\n(Required, string)\nThe index where the vocabulary is stored.\n=======\n======\n=====\n\n`input`:::\n(object)\nThe input field names for the model definition.\n+\n.Properties of `input`\n[%collapsible%open]\n=====\n`field_names`::::\n(string)\nAn array of input field names for the model.\n=====\n\n`fully_defined`::\n(boolean)\nTrue if the full model definition is present.\nThis field is only present if `include=definition_status` was specified in the request.\n\n// Begin location\n`location`::\n(Optional, object)\nThe model definition location. Must be provided if the `definition` or `compressed_definition` are not\nprovided.\n+\n.Properties of `location`\n[%collapsible%open]\n=====\n`index`:::\n(Required, object)\nIndicates that the model definition is stored in an index. It is required to be empty as\nthe index for storing model definitions is configured automatically.\n=====\n// End location\n\n`license_level`::\n(string)\nThe license level of the trained model.\n\n`metadata`::\n(object)\nAn object containing metadata about the trained model. For example, models\ncreated by {dfanalytics} contain `analysis_config` and `input` objects.\n+\n.Properties of metadata\n[%collapsible%open]\n=====\n`feature_importance_baseline`:::\n(object)\nAn object that contains the baseline for {feat-imp} values. For {reganalysis},\nit is a single value. For {classanalysis}, there is a value for each class.\n\n`hyperparameters`:::\n(array)\nList of the available hyperparameters optimized during the\n`fine_parameter_tuning` phase as well as specified by the user.\n+\n.Properties of hyperparameters\n[%collapsible%open]\n======\n`absolute_importance`::::\n(double)\nA positive number showing how much the parameter influences the variation of the\n{ml-docs}/dfa-regression-lossfunction.html[loss function]. For\nhyperparameters with values that are not specified by the user but tuned during\nhyperparameter optimization.\n\n`max_trees`::::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=max-trees-trained-models]\n\n`name`::::\n(string)\nName of the hyperparameter.\n\n`relative_importance`::::\n(double)\nA number between 0 and 1 showing the proportion of influence on the variation of\nthe loss function among all tuned hyperparameters. For hyperparameters with\nvalues that are not specified by the user but tuned during hyperparameter\noptimization.\n\n`supplied`::::\n(Boolean)\nIndicates if the hyperparameter is specified by the user (`true`) or optimized\n(`false`).\n\n`value`::::\n(double)\nThe value of the hyperparameter, either optimized or specified by the user.\n\n======\n\n`total_feature_importance`:::\n(array)\nAn array of the total {feat-imp} for each feature used from\nthe training data set. This array of objects is returned if {dfanalytics} trained\nthe model and the request includes `total_feature_importance` in the `include`\nrequest parameter.\n+\n.Properties of total {feat-imp}\n[%collapsible%open]\n======\n\n`feature_name`:::\n(string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-feature-name]\n\n`importance`:::\n(object)\nA collection of {feat-imp} statistics related to the training data set for this particular feature.\n+\n.Properties of {feat-imp}\n[%collapsible%open]\n=======\n`mean_magnitude`:::\n(double)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-magnitude]\n\n`max`:::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-max]\n\n`min`:::\n(integer)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-min]\n\n=======\n\n`classes`:::\n(array)\nIf the trained model is a classification model, {feat-imp} statistics are gathered\nper target class value.\n+\n.Properties of class {feat-imp}\n[%collapsible%open]\n\n=======\n\n`class_name`:::\n(string)\nThe target class value. Could be a string, boolean, or number.\n\n`importance`:::\n(object)\nA collection of {feat-imp} statistics related to the training data set for this particular feature.\n+\n.Properties of {feat-imp}\n[%collapsible%open]\n========\n`mean_magnitude`:::\n(double)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-magnitude]\n\n`max`:::\n(int)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-max]\n\n`min`:::\n(int)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=inference-metadata-feature-importance-min]\n\n========\n\n=======\n\n======\n=====\n\n`model_id`::\n(string)\nIdentifier for the trained model.\n\n`model_type`::\n(Optional, string)\nThe created model type. By default the model type is `tree_ensemble`.\nAppropriate types are:\n+\n--\n* `tree_ensemble`: The model definition is an ensemble model of decision trees.\n* `lang_ident`: A special type reserved for language identification models.\n* `pytorch`: The stored definition is a PyTorch (specifically a TorchScript) model. Currently only\nNLP models are supported.\n--\n\n`tags`::\n(string)\nA comma delimited string of tags. A trained model can have many tags, or none.\n\n`version`::\n(string)\nThe {ml} configuration version number at which the trained model was created.\n\nNOTE: From {es} 8.10.0,  a new version number is used to\ntrack the configuration and state changes in the {ml} plugin. This new\nversion number is decoupled from the product version and will increment\nindependently. The `version` value represents the new version number.\n\n====\n\n\n[[ml-get-trained-models-response-codes]]\n== {api-response-codes-title}\n\n`400`::\n  If `include_model_definition` is `true`, this code indicates that more than\n  one models match the ID pattern.\n\n`404` (Missing resources)::\n  If `allow_no_match` is `false`, this code indicates that there are no\n  resources that match the request or only partial matches for the request.\n\n\n[[ml-get-trained-models-example]]\n== {api-examples-title}\n\nThe following example gets configuration information for all the trained models:\n\n[source,console]\n--------------------------------------------------\nGET _ml/trained_models/\n--------------------------------------------------\n// TEST[skip:TBD]\n"
}