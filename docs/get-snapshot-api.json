{
    "meta": {
        "size": 29676,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-api.html",
        "type": "documentation",
        "role": [
            "child_attributes",
            "child_attributes"
        ],
        "has_code": false,
        "title": "get-snapshot-api",
        "version": "8.15"
    },
    "doc": "[[get-snapshot-api]]\n=== Get snapshot API\n++++\n<titleabbrev>Get snapshot</titleabbrev>\n++++\n\nRetrieves information about one or more snapshots.\n\n////\n[source,console]\n----\nPUT /_snapshot/my_repository\n{\n  \"type\": \"fs\",\n  \"settings\": {\n    \"location\": \"my_backup_location\"\n  }\n}\n\nPUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n{\n  \"indices\":\"-*\"\n}\n\nPUT /_snapshot/my_repository/snapshot_1?wait_for_completion=true\n{\n  \"indices\":\"-*\"\n}\n\nPUT /_snapshot/my_repository/snapshot_2?wait_for_completion=true\n{\n  \"indices\":\"-*\"\n}\n\nPUT /_snapshot/my_repository/snapshot_3?wait_for_completion=true\n{\n  \"indices\":\"-*\"\n}\n----\n// TESTSETUP\n////\n\n[source,console]\n----\nGET /_snapshot/my_repository/my_snapshot\n----\n\n[[get-snapshot-api-request]]\n==== {api-request-title}\n\n`GET /_snapshot/<repository>/<snapshot>`\n\n[[get-snapshot-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`monitor_snapshot`, `create_snapshot`, or `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[get-snapshot-api-path-params]]\n==== {api-path-parms-title}\n\n`<repository>`::\n(Required, string)\nComma-separated list of snapshot repository names used to limit the request.\nWildcard (`*`) expressions are supported including combining wildcards with exclude patterns starting with `-`.\n+\nTo get information about all snapshot repositories registered in the\ncluster, omit this parameter or use `*` or `_all`.\n\n`<snapshot>`::\n(Required, string)\nComma-separated list of snapshot names to retrieve.\nWildcard (`*`) expressions are supported including combining wildcards with exclude patterns starting with `-`.\n+\n* To get information about all snapshots in a registered repository, use a wildcard (`*`) or `_all`.\n* To get information about any snapshots that are currently running, use `_current`.\n+\nNOTE: Using `_all` in a request fails if any snapshots are unavailable.\nSet <<get-snapshot-api-ignore-unavailable,`ignore_unavailable`>> to `true` to return only available snapshots.\n\n[role=\"child_attributes\"]\n[[get-snapshot-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n[[get-snapshot-api-ignore-unavailable]]\n`ignore_unavailable`::\n(Optional, Boolean)\nIf `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n+\nIf `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n\n`verbose`::\n(Optional, Boolean)\nIf `true`, returns additional information about each snapshot such as the\nversion of Elasticsearch which took the snapshot, the start and end times of\nthe snapshot, and the number of shards snapshotted. Defaults to `true`. If\n`false`, omits the additional information.\n\n`index_names`::\n(Optional, Boolean)\nIf `true`, returns the list of index names included in each snapshot in the response.\nDefaults to `true`.\n\n`index_details`::\n(Optional, Boolean)\nIf `true`, returns additional information about each index in the snapshot\ncomprising the number of shards in the index, the total size of the index in\nbytes, and the maximum number of segments per shard in the index. Defaults to\n`false`, meaning that this information is omitted.\n\n`include_repository`::\n(Optional, Boolean)\nIf `true`, returns the repository name for each snapshot in the response.\nDefaults to `true`.\n\n`sort`::\n(Optional, string)\nAllows setting a sort order for the result. Defaults to `start_time`, i.e. sorting by snapshot start time stamp.\n+\n.Valid values for `sort`\n[%collapsible%open]\n====\n`start_time`::\n  Sort snapshots by their start time stamp and break ties by snapshot name.\n\n`duration`::\n  Sort snapshots by their duration and break ties by snapshot name.\n\n`name`::\n  Sort snapshots by their name.\n\n`repository`::\n  Sort snapshots by their repository name and break ties by snapshot name.\n\n`index_count`::\n  Sort snapshots by the number of indices they contain and break ties by snapshot name.\n\n`shard_count`::\n  Sort snapshots by the number of shards they contain and break ties by snapshot name.\n\n`failed_shard_count`::\n  Sort snapshots by the number of shards that they failed to snapshot and break ties by snapshot name.\n====\n\n`size`::\n(Optional, integer)\n Maximum number of snapshots to return. Defaults to `0` which means return all that match the request without limit.\n\n`order`::\n(Optional, string)\nSort order. Valid values are `asc` for ascending and `desc` for descending order. Defaults to `asc`, meaning ascending order.\n\n`from_sort_value`::\n(Optional, string)\nValue of the current sort column at which to start retrieval. Can either be a string snapshot- or repository name when sorting by\nsnapshot or repository name, a millisecond time value or a number when sorting by index- or shard count.\n\n`after`::\n(Optional, string)\nOffset identifier to start pagination from as returned by the `next` field in the response body. Using this parameter is mutually exclusive\nwith using the `from_sort_value` parameter.\n\n`offset`::\n(Optional, integer)\nNumeric offset to start pagination from based on the snapshots matching this request. Using a non-zero value for this parameter is mutually\nexclusive with using the `after` parameter. Defaults to `0`.\n\n`slm_policy_filter`::\n(Optional, string)\nFilter snapshots by a comma-separated list of SLM policy names that snapshots belong to. Also accepts wildcards (`\\*`) and combinations\nof wildcards followed by exclude patterns starting with `-`. For example, the pattern `*,-policy-a-\\*` will return all snapshots except\nfor those that were created by an SLM policy with a name starting with `policy-a-`. Note that the wildcard pattern `*` matches all snapshots\ncreated by an SLM policy but not those snapshots that were not created by an SLM policy. To include snapshots not created by an SLM\npolicy you can use the special pattern `_none` that will match all snapshots without an SLM policy.\n\nNOTE: The `after` parameter and `next` field allow for iterating through snapshots with some consistency guarantees regarding concurrent\ncreation or deletion of snapshots. It is guaranteed that any snapshot that exists at the beginning of the iteration and is not concurrently\ndeleted will be seen during the iteration. Snapshots concurrently created may be seen during an iteration.\n\nNOTE: The parameters `size`, `order`, `after`, `from_sort_value`, `offset`, `slm_policy_filter` and `sort` are not supported when using\n`verbose=false` and the sort order for requests with `verbose=false` is undefined.\n\n[role=\"child_attributes\"]\n[[get-snapshot-api-response-body]]\n==== {api-response-body-title}\n\n`snapshot`::\n(string)\nName of the snapshot.\n\n`uuid`::\n(string)\nUniversally unique identifier (UUID) of the snapshot.\n\n`version_id`::\n(int)\nBuild ID of the {es} version used to create the snapshot.\n\n`version`::\n(float)\n{es} version used to create the snapshot.\n\n`indices`::\n(array)\nList of indices included in the snapshot.\n\n`index_details`::\n(object)\nDetails of each index in the snapshot, keyed by index name. Only present if the\n`?index_details` query parameter is set, and only contains details for indices\nthat were completely snapshotted in a sufficiently recent version of {es}.\n+\n.Properties of `index_details`\n[%collapsible%open]\n====\n`shard_count`::\n(integer)\nNumber of shards in this index.\n\n`size`::\n(string)\nTotal size of all shards in this index. Only present if the `?human` query\nparamter is set.\n\n`size_in_bytes`::\n(long)\nTotal size of all shards in this index, in bytes.\n\n`max_segments_per_shard`::\n(integer)\nMaximum number of segments per shard in this index snapshot.\n====\n\n`data_streams`::\n(array of strings)\nList of <<data-streams,data streams>> included in the snapshot.\n\n`include_global_state`::\n(Boolean)\nIndicates whether the current cluster state is included in the snapshot.\n\n[[get-snapshot-api-feature-states]]\n`feature_states`::\n(array of objects) <<feature-state,Feature states>> in the snapshot.\nOnly present if the snapshot contains one or more feature states.\n+\n.Properties of `features_states` objects\n[%collapsible%open]\n====\n`feature_name`::\n(string) Name of the feature, as returned by the <<get-features-api,get features\nAPI>>.\n\n`indices`::\n(array of strings) Indices in the feature state.\n====\n\n`start_time`::\n(string)\nDate timestamp of when the snapshot creation process started.\n\n`start_time_in_millis`::\n(long)\nThe time, in milliseconds, when the snapshot creation process started.\n\n`end_time`::\n(string)\nDate timestamp of when the snapshot creation process ended.\n\n`end_time_in_millis`::\n(long)\nThe time, in milliseconds, when the snapshot creation process ended.\n\n`duration_in_millis`::\n(long)\nHow long, in milliseconds, it took to create the snapshot.\n\n[[get-snapshot-api-response-failures]]\n`failures`::\n(array)\nLists any failures that occurred when creating the snapshot.\n\n`shards`::\n(object)\nContains a count of shards in the snapshot.\n+\n.Properties of `shards`\n[%collapsible%open]\n====\n`total`::\n(integer)\nTotal number of shards included in the snapshot.\n\n`successful`::\n(integer)\nNumber of shards that were successfully included in the snapshot.\n\n`failed`::\n(integer)\nNumber of shards that failed to be included in the snapshot.\n====\n\n[[get-snapshot-api-response-state]]\n`state`::\n+\n--\n(string)\nThe snapshot `state` can be one of the following values:\n\n.Values for `state`\n[%collapsible%open]\n====\n`IN_PROGRESS`::\n  The snapshot is currently running.\n\n`SUCCESS`::\n  The snapshot finished and all shards were stored successfully.\n\n`FAILED`::\n  The snapshot finished with an error and failed to store any data.\n\n`PARTIAL`::\n  The global cluster state was stored, but data of at least one shard was not stored successfully.\n  The <<get-snapshot-api-response-failures,`failures`>> section of the response contains more detailed information about shards\n  that were not processed correctly.\n====\n--\n`next`::\n(string)\nIf the request contained a size limit and there might be more results, a `next` field will be added to the response and can be used as the\n`after` query parameter to fetch additional results.\n\n`total`::\n(integer)\nThe total number of snapshots that match the request when ignoring size limit or `after` query parameter.\n\n`remaining`::\n(integer)\nThe number of remaining snapshots that were not returned due to size limits and that can be fetched by additional requests using the `next`\nfield value.\n\n[[get-snapshot-api-example]]\n==== {api-examples-title}\n\nThe following request returns information for `snapshot_2` in the `my_repository` repository.\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot_2\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_2\",\n      \"uuid\": \"vdRctLCxSketdKb54xw67g\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 1,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"vdRctLCxSketdKb54xw67g\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n\nThe following request returns information for all snapshots with prefix `snapshot` in the `my_repository` repository,\nlimiting the response size to 2 and sorting by snapshot name.\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot*?size=2&sort=name\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_1\",\n      \"uuid\": \"dKb54xw67gvdRctLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    },\n    {\n      \"snapshot\": \"snapshot_2\",\n      \"uuid\": \"vdRctLCxSketdKb54xw67g\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.130Z\",\n      \"start_time_in_millis\": 1593093628851,\n      \"end_time\": \"2020-07-06T21:55:18.130Z\",\n      \"end_time_in_millis\": 1593094752019,\n      \"duration_in_millis\": 1,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"next\": \"c25hcHNob3RfMixteV9yZXBvc2l0b3J5LHNuYXBzaG90XzI=\",\n  \"total\": 3,\n  \"remaining\": 1\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"dKb54xw67gvdRctLCxSket\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"uuid\": \"vdRctLCxSketdKb54xw67g\"/\"uuid\": $body.snapshots.1.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.130Z\"/\"start_time\": $body.snapshots.1.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628851/\"start_time_in_millis\": $body.snapshots.1.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.130Z\"/\"end_time\": $body.snapshots.1.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752019/\"end_time_in_millis\": $body.snapshots.1.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 1/\"duration_in_millis\": $body.snapshots.1.duration_in_millis/]\n\nA subsequent request for the remaining snapshots can then be made using the `next` value from the previous response as `after` parameter.\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot*?size=2&sort=name&after=c25hcHNob3RfMixteV9yZXBvc2l0b3J5LHNuYXBzaG90XzI=\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_3\",\n      \"uuid\": \"dRctdKb54xw67gvLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 3,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"dRctdKb54xw67gvLCxSket\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n\nAlternatively, the same result could be retrieved by using an offset value of `2` to skip the two snapshot already seen.\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot*?size=2&sort=name&offset=2\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_3\",\n      \"uuid\": \"dRctdKb54xw67gvLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 3,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"dRctdKb54xw67gvLCxSket\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n\nThe following request returns information for all snapshots with prefix `snapshot` in the `my_repository` repository,\nexcept for the one named `snapshot_3`\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot*,-snapshot_3?sort=name\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_1\",\n      \"uuid\": \"dKb54xw67gvdRctLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    },\n    {\n      \"snapshot\": \"snapshot_2\",\n      \"uuid\": \"vdRctLCxSketdKb54xw67g\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.130Z\",\n      \"start_time_in_millis\": 1593093628851,\n      \"end_time\": \"2020-07-06T21:55:18.130Z\",\n      \"end_time_in_millis\": 1593094752019,\n      \"duration_in_millis\": 1,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 2,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"dKb54xw67gvdRctLCxSket\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"uuid\": \"vdRctLCxSketdKb54xw67g\"/\"uuid\": $body.snapshots.1.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.130Z\"/\"start_time\": $body.snapshots.1.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628851/\"start_time_in_millis\": $body.snapshots.1.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.130Z\"/\"end_time\": $body.snapshots.1.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752019/\"end_time_in_millis\": $body.snapshots.1.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 1/\"duration_in_millis\": $body.snapshots.1.duration_in_millis/]\n\n\nThe following request returns information for all snapshots that come after `snapshot_2` when sorted by snapshot name in the default\nascending order.\n\n[source,console]\n----\nGET /_snapshot/my_repository/*?sort=name&from_sort_value=snapshot_2\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_2\",\n      \"uuid\": \"vdRctLCxSketdKb54xw67g\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.130Z\",\n      \"start_time_in_millis\": 1593093628851,\n      \"end_time\": \"2020-07-06T21:55:18.130Z\",\n      \"end_time_in_millis\": 1593094752019,\n      \"duration_in_millis\": 1,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    },\n    {\n      \"snapshot\": \"snapshot_3\",\n      \"uuid\": \"dRctdKb54xw67gvLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.129Z\",\n      \"start_time_in_millis\": 1593093628850,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593094752018,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 2,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"vdRctLCxSketdKb54xw67g\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"uuid\": \"dRctdKb54xw67gvLCxSket\"/\"uuid\": $body.snapshots.1.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.130Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.129Z\"/\"start_time\": $body.snapshots.1.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628851/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628850/\"start_time_in_millis\": $body.snapshots.1.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.130Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.1.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752019/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593094752018/\"end_time_in_millis\": $body.snapshots.1.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 1/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.1.duration_in_millis/]\n\n\nThe following request returns information for all snapshots with names starting with `snapshot_` and that started on or after timestamp\n`1577833200000` (Jan 1st 2020) when sorted by snapshot start time in the default ascending order.\n\n[source,console]\n----\nGET /_snapshot/my_repository/snapshot_*?sort=start_time&from_sort_value=1577833200000\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"snapshots\": [\n    {\n      \"snapshot\": \"snapshot_1\",\n      \"uuid\": \"dKb54xw67gvdRctLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.128Z\",\n      \"start_time_in_millis\": 1593093628849,\n      \"end_time\": \"2020-07-06T21:55:18.129Z\",\n      \"end_time_in_millis\": 1593093628850,\n      \"duration_in_millis\": 1,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    },\n    {\n      \"snapshot\": \"snapshot_2\",\n      \"uuid\": \"vdRctLCxSketdKb54xw67g\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.130Z\",\n      \"start_time_in_millis\": 1593093628851,\n      \"end_time\": \"2020-07-06T21:55:18.130Z\",\n      \"end_time_in_millis\": 1593093628851,\n      \"duration_in_millis\": 0,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    },\n    {\n      \"snapshot\": \"snapshot_3\",\n      \"uuid\": \"dRctdKb54xw67gvLCxSket\",\n      \"repository\": \"my_repository\",\n      \"version_id\": <version_id>,\n      \"version\": <version>,\n      \"indices\": [],\n      \"data_streams\": [],\n      \"feature_states\": [],\n      \"include_global_state\": true,\n      \"state\": \"SUCCESS\",\n      \"start_time\": \"2020-07-06T21:55:18.131Z\",\n      \"start_time_in_millis\": 1593093628852,\n      \"end_time\": \"2020-07-06T21:55:18.135Z\",\n      \"end_time_in_millis\": 1593093628856,\n      \"duration_in_millis\": 4,\n      \"failures\": [],\n      \"shards\": {\n        \"total\": 0,\n        \"failed\": 0,\n        \"successful\": 0\n      }\n    }\n  ],\n  \"total\": 3,\n  \"remaining\": 0\n}\n----\n// TESTRESPONSE[s/\"uuid\": \"dKb54xw67gvdRctLCxSket\"/\"uuid\": $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"uuid\": \"vdRctLCxSketdKb54xw67g\"/\"uuid\": $body.snapshots.1.uuid/]\n// TESTRESPONSE[s/\"uuid\": \"dRctdKb54xw67gvLCxSket\"/\"uuid\": $body.snapshots.2.uuid/]\n// TESTRESPONSE[s/\"version_id\": <version_id>/\"version_id\": $body.snapshots.0.version_id/]\n// TESTRESPONSE[s/\"version\": <version>/\"version\": $body.snapshots.0.version/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.128Z\"/\"start_time\": $body.snapshots.0.start_time/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.130Z\"/\"start_time\": $body.snapshots.1.start_time/]\n// TESTRESPONSE[s/\"start_time\": \"2020-07-06T21:55:18.131Z\"/\"start_time\": $body.snapshots.2.start_time/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628849/\"start_time_in_millis\": $body.snapshots.0.start_time_in_millis/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628851/\"start_time_in_millis\": $body.snapshots.1.start_time_in_millis/]\n// TESTRESPONSE[s/\"start_time_in_millis\": 1593093628852/\"start_time_in_millis\": $body.snapshots.2.start_time_in_millis/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.129Z\"/\"end_time\": $body.snapshots.0.end_time/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.130Z\"/\"end_time\": $body.snapshots.1.end_time/]\n// TESTRESPONSE[s/\"end_time\": \"2020-07-06T21:55:18.135Z\"/\"end_time\": $body.snapshots.2.end_time/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593093628850/\"end_time_in_millis\": $body.snapshots.0.end_time_in_millis/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593093628851/\"end_time_in_millis\": $body.snapshots.1.end_time_in_millis/]\n// TESTRESPONSE[s/\"end_time_in_millis\": 1593093628856/\"end_time_in_millis\": $body.snapshots.2.end_time_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 1/\"duration_in_millis\": $body.snapshots.0.duration_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 0/\"duration_in_millis\": $body.snapshots.1.duration_in_millis/]\n// TESTRESPONSE[s/\"duration_in_millis\": 4/\"duration_in_millis\": $body.snapshots.2.duration_in_millis/]\n"
}