{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.448580",
        "size": 5981,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-with-synonyms.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "search-with-synonyms",
        "version": "8.15"
    },
    "doc": "[[search-with-synonyms]]\n== Search with synonyms\n\nSynonyms are words or phrases that have the same or similar meaning.\nThey are an important aspect of search, as they can improve the search experience and increase the scope of search results.\n\nSynonyms allow you to:\n\n* *Improve search relevance* by finding relevant documents that use different terms to express the same concept.\n* Make *domain-specific vocabulary* more user-friendly, allowing users to use search terms they are more familiar with.\n* *Define common misspellings and typos* to transparently handle common mistakes.\n\nSynonyms are grouped together using *synonyms sets*.\nYou can have as many synonyms sets as you need.\n\nIn order to use synonyms sets in {es}, you need to:\n\n* <<synonyms-store-synonyms>>\n* <<synonyms-synonym-token-filters>>\n\n[discrete]\n[[synonyms-store-synonyms]]\n=== Store your synonyms set\n\nYour synonyms sets need to be stored in {es} so your analyzers can refer to them.\nThere are three ways to store your synonyms sets:\n\n[discrete]\n[[synonyms-store-synonyms-api]]\n==== Synonyms API\n\nYou can use the <<synonyms-apis,synonyms APIs>> to manage synonyms sets.\nThis is the most flexible approach, as it allows to dynamically define and modify synonyms sets.\n\nChanges in your synonyms sets will automatically reload the associated analyzers.\n\n[discrete]\n[[synonyms-store-synonyms-file]]\n==== Synonyms File\n\nYou can store your synonyms set in a file.\n\nA synonyms set file needs to be uploaded to all your cluster nodes, and be located in the configuration directory for your {es} distribution.\nIf you're using {ess}, you can upload synonyms files using {cloud}/ec-custom-bundles.html[custom bundles].\n\nAn example synonyms file:\n\n[source,synonyms]\n--------------------------------------------------\ninclude::{elasticsearch-root}/docs/src/test/cluster/config/analysis/synonym.txt[]\n--------------------------------------------------\n\nTo update an existing synonyms set, upload new files to your cluster.\nSynonyms set files must be kept in sync on every cluster node.\n\nWhen a synonyms set is updated, search analyzers that use it need to be refreshed using the <<indices-reload-analyzers,reload search analyzers API>>\n\nThis manual syncing and reloading makes this approach less flexible than using the <<synonyms-store-synonyms-api,synonyms API>>.\n\n[discrete]\n[[synonyms-store-synonyms-inline]]\n==== Inline\n\nYou can test your synonyms by adding them directly inline in your token filter definition.\n\n[WARNING]\n======\nInline synonyms are not recommended for production usage.\nA large number of inline synonyms increases cluster size unnecessarily and can lead to performance issues.\n======\n\n[discrete]\n[[synonyms-synonym-token-filters]]\n==== Configure synonyms token filters and analyzers\n\nOnce your synonyms sets are created, you can start configuring your token filters and analyzers to use them.\n\n[WARNING]\n======\nSynonyms sets must exist before they can be added to indices.\nIf an index is created referencing a nonexistent synonyms set, the index will remain in a partially created and inoperable state.\nThe only way to recover from this scenario is to ensure the synonyms set exists then either delete and re-create the index, or close and re-open the index.\n======\n\n[WARNING]\n====\nInvalid synonym rules can cause errors when applying analyzer changes.\nFor reloadable analyzers, this prevents reloading and applying changes.\nYou must correct errors in the synonym rules and reload the analyzer.\n\nAn index with invalid synonym rules cannot be reopened, making it inoperable when:\n\n* A node containing the index starts\n* The index is opened from a closed state\n* A node restart occurs (which reopens the node assigned shards)\n====\n\n{es} uses synonyms as part of the <<analysis-overview,analysis process>>.\nYou can use two types of <<analysis-tokenfilters,token filter>> to include synonyms:\n\n* <<analysis-synonym-graph-tokenfilter>>: It is recommended to use it, as it can correctly handle multi-word synonyms (\"hurriedly\", \"in a hurry\").\n* <<analysis-synonym-tokenfilter>>: Not recommended if you need to use multi-word synonyms.\n\nCheck each synonym token filter documentation for configuration details and instructions on adding it to an analyzer.\n\n[discrete]\n[[synonyms-test-analyzer]]\n==== Test your analyzer\n\nYou can test an analyzer configuration without modifying your index settings.\nUse the <<indices-analyze,analyze API>> to test your analyzer chain:\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"standard\",\n  \"filter\" : [\n    \"lowercase\",\n    {\n      \"type\": \"synonym_graph\",\n      \"synonyms\": [\"pc => personal computer\", \"computer, pc, laptop\"]\n    }\n  ],\n  \"text\" : \"Check how PC synonyms work\"\n}\n----\n\n[discrete]\n[[synonyms-apply-synonyms]]\n==== Apply synonyms at index or search time\n\nAnalyzers can be applied at <<analysis-index-search-time,index time or search time>>.\n\nYou need to decide when to apply your synonyms:\n\n* Index time: Synonyms are applied when the documents are indexed into {es}. This is a less flexible alternative, as changes to your synonyms require <<docs-reindex,reindexing>>.\n* Search time: Synonyms are applied when a search is executed. This is a more flexible approach, which doesn't require reindexing. If token filters are configured with `\"updateable\": true`, search analyzers can be <<indices-reload-analyzers,reloaded>> when you make changes to your synonyms.\n\nSynonyms sets created using the <<synonyms-store-synonyms-api,synonyms API>> can only be used at search time.\n\nYou can specify the analyzer that contains your synonyms set as a <<specify-search-analyzer,search time analyzer>> or as an <<specify-index-time-analyzer,index time analyzer>>.\n\nThe following example adds `my_analyzer` as a search analyzer to the `title` field in an index mapping:\n\n[source,JSON]\n----\n  \"mappings\": {\n    \"properties\": {\n      \"title\": {\n        \"type\": \"text\",\n        \"search_analyzer\": \"my_analyzer\",\n        \"updateable\": true\n      }\n    }\n  }\n----\n\n\n"
}