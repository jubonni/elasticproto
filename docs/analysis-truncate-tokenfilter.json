{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.790583",
        "size": 3635,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-truncate-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analysis-truncate-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-truncate-tokenfilter]]\n=== Truncate token filter\n++++\n<titleabbrev>Truncate</titleabbrev>\n++++\n\nTruncates tokens that exceed a specified character limit. This limit defaults to\n`10` but can be customized using the `length` parameter.\n\nFor example, you can use the `truncate` filter to shorten all tokens to\n`3` characters or fewer, changing `jumping fox` to `jum fox`.\n\nThis filter uses Lucene's\n{lucene-analysis-docs}/miscellaneous/TruncateTokenFilter.html[TruncateTokenFilter].\n\n[[analysis-truncate-tokenfilter-analyze-ex]]\n==== Example\n\nThe following <<indices-analyze,analyze API>> request uses the `truncate` filter\nto shorten tokens that exceed 10 characters in\n`the quinquennial extravaganza carried on`:\n\n[source,console]\n--------------------------------------------------\nGET _analyze\n{\n  \"tokenizer\" : \"whitespace\",\n  \"filter\" : [\"truncate\"],\n  \"text\" : \"the quinquennial extravaganza carried on\"\n}\n--------------------------------------------------\n\nThe filter produces the following tokens:\n\n[source,text]\n--------------------------------------------------\n[ the, quinquenni, extravagan, carried, on ]\n--------------------------------------------------\n\n/////////////////////\n[source,console-result]\n--------------------------------------------------\n{\n  \"tokens\" : [\n    {\n      \"token\" : \"the\",\n      \"start_offset\" : 0,\n      \"end_offset\" : 3,\n      \"type\" : \"word\",\n      \"position\" : 0\n    },\n    {\n      \"token\" : \"quinquenni\",\n      \"start_offset\" : 4,\n      \"end_offset\" : 16,\n      \"type\" : \"word\",\n      \"position\" : 1\n    },\n    {\n      \"token\" : \"extravagan\",\n      \"start_offset\" : 17,\n      \"end_offset\" : 29,\n      \"type\" : \"word\",\n      \"position\" : 2\n    },\n    {\n      \"token\" : \"carried\",\n      \"start_offset\" : 30,\n      \"end_offset\" : 37,\n      \"type\" : \"word\",\n      \"position\" : 3\n    },\n    {\n      \"token\" : \"on\",\n      \"start_offset\" : 38,\n      \"end_offset\" : 40,\n      \"type\" : \"word\",\n      \"position\" : 4\n    }\n  ]\n}\n--------------------------------------------------\n/////////////////////\n\n[[analysis-truncate-tokenfilter-analyzer-ex]]\n==== Add to an analyzer\n\nThe following <<indices-create-index,create index API>> request uses the\n`truncate` filter to configure a new \n<<analysis-custom-analyzer,custom analyzer>>.\n\n[source,console]\n--------------------------------------------------\nPUT custom_truncate_example\n{\n  \"settings\" : {\n    \"analysis\" : {\n      \"analyzer\" : {\n        \"standard_truncate\" : {\n        \"tokenizer\" : \"standard\",\n        \"filter\" : [\"truncate\"]\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[[analysis-truncate-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n`length`::\n(Optional, integer)\nCharacter limit for each token. Tokens exceeding this limit are truncated.\nDefaults to `10`.\n\n[[analysis-truncate-tokenfilter-customize]]\n==== Customize\n\nTo customize the `truncate` filter, duplicate it to create the basis\nfor a new custom token filter. You can modify the filter using its configurable\nparameters.\n\nFor example, the following request creates a custom `truncate` filter,\n`5_char_trunc`, that shortens tokens to a `length` of `5` or fewer characters:\n\n[source,console]\n--------------------------------------------------\nPUT 5_char_words_example\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"lowercase_5_char\": {\n          \"tokenizer\": \"lowercase\",\n          \"filter\": [ \"5_char_trunc\" ]\n        }\n      },\n      \"filter\": {\n        \"5_char_trunc\": {\n          \"type\": \"truncate\",\n          \"length\": 5\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------"
}