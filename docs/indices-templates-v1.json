{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.999067",
        "size": 7116,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-templates-v1.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "indices-templates-v1",
        "version": "8.15"
    },
    "doc": "[[indices-templates-v1]]\n=== Create or update index template API\n++++\n<titleabbrev>Create or update index template (legacy)</titleabbrev>\n++++\n\nIMPORTANT: This documentation is about legacy index templates, \nwhich are deprecated and will be replaced by the composable templates introduced in {es} 7.8. \nFor information about composable templates, see <<index-templates>>.\n\nCreates or updates an index template.\n\n[source,console]\n--------------------------------------------------\nPUT _template/template_1\n{\n  \"index_patterns\": [\"te*\", \"bar*\"],\n  \"settings\": {\n    \"number_of_shards\": 1\n  },\n  \"mappings\": {\n    \"_source\": {\n      \"enabled\": false\n    },\n    \"properties\": {\n      \"host_name\": {\n        \"type\": \"keyword\"\n      },\n      \"created_at\": {\n        \"type\": \"date\",\n        \"format\": \"EEE MMM dd HH:mm:ss Z yyyy\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTSETUP\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nDELETE _template/template_*\n--------------------------------------------------\n// TEARDOWN\n\n//////////////////////////\n\n[[put-index-template-v1-api-request]]\n==== {api-request-title}\n\n`PUT /_template/<index-template>`\n\n[[put-index-template-v1-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`manage_index_templates` or `manage` <<privileges-list-cluster,cluster\nprivilege>> to use this API.\n\n\n[[put-index-template-v1-api-desc]]\n==== {api-description-title}\n\nIndex templates define <<index-modules-settings,settings>> and <<mapping,mappings>>\nthat you can automatically apply when creating new indices.\n{es} applies templates to new indices\nbased on an index pattern that matches the index name.\n\nNOTE: Composable templates always take precedence over legacy templates. \nIf no composable template matches a new index, \nmatching legacy templates are applied according to their order.\n\nIndex templates are only applied during index creation.\nChanges to index templates do not affect existing indices.\nSettings and mappings specified in <<indices-create-index, create index>> API requests\noverride any settings or mappings specified in an index template.\n\n===== Comments in index templates\nYou can use C-style /* */ block comments in index templates.\nYou can include comments anywhere in the request body,\nexcept before the opening curly bracket.\n\n[[getting-v1]]\n===== Getting templates\n\nSee <<indices-get-template-v1>>.\n\n\n[[put-index-template-v1-api-path-params]]\n==== {api-path-parms-title}\n\n`<index-template>`::\n(Required, string)\nName of the index template to create.\n\n\n[[put-index-template-v1-api-query-params]]\n==== {api-query-parms-title}\n\n`create`::\n(Optional, Boolean)\nIf `true`, this request cannot replace or update existing index templates.\nDefaults to `false`.\n\n`order`::\n(Optional,integer)\nOrder in which {es} applies this template\nif index matches multiple templates.\n+\nTemplates with lower `order` values are merged first.\nTemplates with higher `order` values are merged later,\noverriding templates with lower values.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n[role=\"child_attributes\"]\n[[put-index-template-v1-api-request-body]]\n==== {api-request-body-title}\n\n`index_patterns`::\n(Required, array of strings)\nArray of wildcard expressions\nused to match the names of indices during creation.\n\n`aliases`::\n(Optional, object of objects) Aliases for the index.\n+\ninclude::{es-ref-dir}/indices/create-index.asciidoc[tag=aliases-props]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=mappings]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=settings]\n\n`version`::\n(Optional, integer)\nVersion number used to manage index templates externally.\nThis number is not automatically generated by {es}.\n\n\n[[put-index-template-v1-api-example]]\n==== {api-examples-title}\n\n===== Index template with index aliases\n\nYou can include <<aliases,index aliases>> in an index template.\n\n[source,console]\n--------------------------------------------------\nPUT _template/template_1\n{\n  \"index_patterns\" : [\"te*\"],\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  },\n  \"aliases\" : {\n    \"alias1\" : {},\n    \"alias2\" : {\n      \"filter\" : {\n        \"term\" : {\"user.id\" : \"kimchy\" }\n      },\n      \"routing\" : \"shard-1\"\n    },\n    \"{index}-alias\" : {} <1>\n  }\n}\n--------------------------------------------------\n\n<1> the `{index}` placeholder in the alias name will be replaced with the\nactual index name that the template gets applied to, during index creation.\n\n\n[[multiple-templates-v1]]\n===== Indices matching multiple templates\n\nMultiple index templates can potentially match an index, in this case,\nboth the settings and mappings are merged into the final configuration\nof the index. The order of the merging can be controlled using the\n`order` parameter, with lower order being applied first, and higher\norders overriding them. For example:\n\n[source,console]\n--------------------------------------------------\nPUT /_template/template_1\n{\n  \"index_patterns\" : [\"te*\"],\n  \"order\" : 0,\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  },\n  \"mappings\" : {\n    \"_source\" : { \"enabled\" : false }\n  }\n}\n\nPUT /_template/template_2\n{\n  \"index_patterns\" : [\"tes*\"],\n  \"order\" : 1,\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  },\n  \"mappings\" : {\n    \"_source\" : { \"enabled\" : true }\n  }\n}\n--------------------------------------------------\n\nThe above will disable storing the `_source`, but\nfor indices that start with `tes*`, `_source` will still be enabled.\nNote, for mappings, the merging is \"deep\", meaning that specific\nobject/property based mappings can easily be added/overridden on higher\norder templates, with lower order templates providing the basis.\n\nNOTE: Multiple matching templates with the same order value will\nresult in a non-deterministic merging order.\n\n\n[[versioning-templates-v1]]\n===== Template versioning\n\nYou can use the `version` parameter\nto add an optional version number to an index template.\nExternal systems can use these version numbers\nto simplify template management.\n\nThe `version`\tparameter is completely optional\nand not automatically generated by {es}.\n\nTo unset a `version`,\nreplace the template without specifying\tone.\n\n[source,console]\n--------------------------------------------------\nPUT /_template/template_1\n{\n  \"index_patterns\" : [\"my-index-*\"],\n  \"order\" : 0,\n  \"settings\" : {\n    \"number_of_shards\" : 1\n  },\n  \"version\": 123\n}\n--------------------------------------------------\n\nTo check the `version`,\nyou can\tuse the <<indices-get-template, get index template>> API\nwith the <<common-options-response-filtering, `filter_path`>> query parameter\nto return only the version number:\n\n[source,console]\n--------------------------------------------------\nGET /_template/template_1?filter_path=*.version\n--------------------------------------------------\n// TEST[continued]\n\nThe API returns the following response:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"template_1\" : {\n    \"version\" : 123\n  }\n}\n--------------------------------------------------"
}