{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.112272",
        "size": 2018,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-dis-max-query.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "query-dsl-dis-max-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-dis-max-query]]\n=== Disjunction max query\n++++\n<titleabbrev>Disjunction max</titleabbrev>\n++++\n\nReturns documents matching one or more wrapped queries, called query clauses or\nclauses.\n\nIf a returned document matches multiple query clauses, the `dis_max` query\nassigns the document the highest relevance score from any matching clause, plus\na tie breaking increment for any additional matching subqueries.\n\n[[query-dsl-dis-max-query-ex-request]]\n==== Example request\n\n[source,console]\n----\nGET /_search\n{\n  \"query\": {\n    \"dis_max\": {\n      \"queries\": [\n        { \"term\": { \"title\": \"Quick pets\" } },\n        { \"term\": { \"body\": \"Quick pets\" } }\n      ],\n      \"tie_breaker\": 0.7\n    }\n  }\n}\n----\n\n[[query-dsl-dis-max-query-top-level-params]]\n==== Top-level parameters for `dis_max`\n\n`queries`::\n(Required, array of query objects) Contains one or more query clauses. Returned\ndocuments **must match one or more** of these queries. If a document matches\nmultiple queries, {es} uses the highest <<query-filter-context, relevance\nscore>>.\n\n`tie_breaker`::\n+\n--\n(Optional, float) Floating point number between `0` and `1.0` used to increase\nthe <<relevance-scores,relevance scores>> of documents matching multiple\nquery clauses. Defaults to `0.0`.\n\nYou can use the `tie_breaker` value to assign higher relevance scores to\ndocuments that contain the same term in multiple fields than documents that\ncontain this term in only the best of those multiple fields, without confusing\nthis with the better case of two different terms in the multiple fields.\n\nIf a document matches multiple clauses, the `dis_max` query calculates the\nrelevance score for the document as follows:\n\n. Take the relevance score from a matching clause with the highest score.\n. Multiply the score from any other matching clauses by the `tie_breaker` value.\n. Add the highest score to the multiplied scores.\n\nIf the `tie_breaker` value is greater than `0.0`, all matching clauses count,\nbut the clause with the highest score counts most.\n--\n"
}