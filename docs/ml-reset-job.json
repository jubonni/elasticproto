{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.079292",
        "size": 2463,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-reset-job.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ml-reset-job",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ml-reset-job]]\n= Reset {anomaly-jobs} API\n++++\n<titleabbrev>Reset jobs</titleabbrev>\n++++\n\nResets an existing {anomaly-job}.\n\n[[ml-reset-job-request]]\n== {api-request-title}\n\n`POST _ml/anomaly_detectors/<job_id>/_reset`\n\n[[ml-reset-job-prereqs]]\n== {api-prereq-title}\n\n* Requires the `manage_ml` cluster privilege. This privilege is included in the \n`machine_learning_admin` built-in role.\n* Before you can reset a job, you must close it. You can set `force` to `true`\nwhen closing the job to avoid waiting for the job to complete. See \n<<ml-close-job>>.\n\n[[ml-reset-job-desc]]\n== {api-description-title}\n\nAll model state and results are deleted.\nThe job is ready to start over as if it had just been created.\n\nIt is not currently possible to reset multiple jobs using wildcards or a comma\nseparated list.\n\n[[ml-reset-job-path-parms]]\n== {api-path-parms-title}\n\n`<job_id>`::\n(Required, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=job-id-anomaly-detection]\n\n[[ml-reset-job-query-parms]]\n== {api-query-parms-title}\n\n`wait_for_completion`::\n  (Optional, Boolean) Specifies whether the request should return immediately or\n  wait until the job reset completes. Defaults to `true`.\n\n`delete_user_annotations`::\n  (Optional, Boolean) Specifies whether annotations that have been added by the \n  user should be deleted along with any auto-generated annotations when the job is\n  reset. Defaults to `false`.\n\n[[ml-reset-job-example]]\n== {api-examples-title}\n\n[source,console]\n--------------------------------------------------\nPOST _ml/anomaly_detectors/total-requests/_reset\n--------------------------------------------------\n// TEST[skip:setup:server_metrics_job]\n\nWhen the job is reset, you receive the following results:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true\n}\n----\n\nIn the next example we reset the `total-requests` job asynchronously:\n\n[source,console]\n--------------------------------------------------\nPOST _ml/anomaly_detectors/total-requests/_reset?wait_for_completion=false\n--------------------------------------------------\n// TEST[skip:setup:server_metrics_job]\n\nWhen `wait_for_completion` is set to `false`, the response contains the id\nof the job reset task:\n\n[source,console-result]\n----\n{\n  \"task\": \"oTUltX4IQMOUUVeiohTt8A:39\"\n}\n----\n// TESTRESPONSE[s/\"task\": \"oTUltX4IQMOUUVeiohTt8A:39\"/\"task\": $body.task/]\n\nIf you want to check the status of the reset task, use the <<tasks>> by referencing \nthe task ID.\n"
}