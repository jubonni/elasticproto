{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.732276",
        "size": 4123,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/docs-multi-termvectors.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "docs-multi-termvectors",
        "version": "8.15"
    },
    "doc": "[[docs-multi-termvectors]]\n=== Multi term vectors API\n++++\n<titleabbrev>Multi term vectors</titleabbrev>\n++++\n\nRetrieves multiple term vectors with a single request. \n\n[source,console]\n--------------------------------------------------\nPOST /_mtermvectors\n{\n   \"docs\": [\n      {\n         \"_index\": \"my-index-000001\",\n         \"_id\": \"2\",\n         \"term_statistics\": true\n      },\n      {\n         \"_index\": \"my-index-000001\",\n         \"_id\": \"1\",\n         \"fields\": [\n            \"message\"\n         ]\n      }\n   ]\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\n[[docs-multi-termvectors-api-request]]\n==== {api-request-title}\n\n`POST /_mtermvectors`\n\n`POST /<index>/_mtermvectors`\n\n[[docs-multi-termvectors-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `read`\n<<privileges-list-indices,index privilege>> for the target index or index alias.\n\n[[docs-multi-termvectors-api-desc]]\n==== {api-description-title}\n\nYou can specify existing documents by index and ID or \nprovide artificial documents in the body of the request.  \nYou can specify the index in the request body or request URI.\n\nThe response contains a `docs` array with all the fetched termvectors. \nEach element has the structure provided by the <<docs-termvectors,termvectors>>\nAPI. \n\nSee the <<docs-termvectors,termvectors>> API for more information about the information\nthat can be included in the response.  \n\n[[docs-multi-termvectors-api-path-params]]\n==== {api-path-parms-title}\n\n`<index>`::\n(Optional, string) Name of the index that contains the documents.\n\n[[docs-multi-termvectors-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=fields]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=field_statistics]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=offsets]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=payloads]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=positions]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=preference]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=routing]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=realtime]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=term_statistics]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=version]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=version_type]\n\n[discrete]\n[[docs-multi-termvectors-api-example]]\n==== {api-examples-title}\n\nIf you specify an index in the request URI, the index does not need to be specified for each documents\nin the request body:\n\n[source,console]\n--------------------------------------------------\nPOST /my-index-000001/_mtermvectors\n{\n   \"docs\": [\n      {\n         \"_id\": \"2\",\n         \"fields\": [\n            \"message\"\n         ],\n         \"term_statistics\": true\n      },\n      {\n         \"_id\": \"1\"\n      }\n   ]\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\nIf all requested documents are in same index and the parameters are the same, you can use the\nfollowing simplified syntax:\n\n[source,console]\n--------------------------------------------------\nPOST /my-index-000001/_mtermvectors\n{\n  \"ids\": [ \"1\", \"2\" ],\n  \"parameters\": {\n    \"fields\": [\n      \"message\"\n    ],\n    \"term_statistics\": true\n  }\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n\n[[docs-multi-termvectors-artificial-doc]]\n===== Artificial documents\n\nYou can also use `mtermvectors` to generate term vectors for _artificial_ documents provided\nin the body of the request. The mapping used is determined by the specified `_index`.\n\n[source,console]\n--------------------------------------------------\nPOST /_mtermvectors\n{\n   \"docs\": [\n      {\n         \"_index\": \"my-index-000001\",\n         \"doc\" : {\n            \"message\" : \"test test test\"\n         }\n      },\n      {\n         \"_index\": \"my-index-000001\",\n         \"doc\" : {\n           \"message\" : \"Another test ...\"\n         }\n      }\n   ]\n}\n--------------------------------------------------\n// TEST[setup:my_index]\n"
}