{
    "meta": {
        "size": 6435,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-disk-usage.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "indices-disk-usage",
        "version": "8.15"
    },
    "doc": "[[indices-disk-usage]]\n=== Analyze index disk usage API\n++++\n<titleabbrev>Analyze index disk usage</titleabbrev>\n++++\n\nexperimental[]\n\nAnalyzes the disk usage of each field of an index or data stream.\nThis API might not support indices created in previous {es} versions.\nThe result of a small index can be inaccurate as some parts of an index\nmight not be analyzed by the API.\n\n[source,console]\n--------------------------------------------------\nPOST /my-index-000001/_disk_usage?run_expensive_tasks=true\n--------------------------------------------------\n// TEST[setup:messages]\n\n[[analyze-index-disk-usage-api-request]]\n==== {api-request-title}\n\n`POST /<target>/_disk_usage`\n\n[[analyze-index-disk-usage-api-request-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage`\n<<privileges-list-indices,index privilege>> for the target index, data stream,\nor alias.\n\n[[analyze-index-disk-usage-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Required, string) Comma-separated list of data streams, indices, and aliases\nused to limit the request. It's recommended to execute this API with a single\nindex (or the latest backing index of a data stream) as the API consumes\nresources significantly.\n\n[[analyze-index-disk-usage-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+\nDefaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n+\nDefaults to `open`.\n\n`flush`::\n(Optional, Boolean) If `true`, the API performs a flush before analysis. If\n`false`, the response may not include uncommitted data. Defaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n\n`run_expensive_tasks`::\n(Required, Boolean) Analyzing field disk usage is resource-intensive. To use the\nAPI, this parameter must be set to `true`. Defaults to `false`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=wait_for_active_shards]\n\n\n[[analyze-index-disk-usage-api-example]]\n==== {api-examples-title}\n\n[source,console]\n--------------------------------------------------\nPOST /my-index-000001/_disk_usage?run_expensive_tasks=true\n--------------------------------------------------\n// TEST[setup:messages]\n\nThe API returns:\n\n[source,console-response]\n--------------------------------------------------\n{\n    \"_shards\": {\n        \"total\": 1,\n        \"successful\": 1,\n        \"failed\": 0\n    },\n    \"my-index-000001\": {\n        \"store_size\": \"929mb\", <1>\n        \"store_size_in_bytes\": 974192723,\n        \"all_fields\": {\n            \"total\": \"928.9mb\", <2>\n            \"total_in_bytes\": 973977084,\n            \"inverted_index\": {\n                \"total\": \"107.8mb\",\n                \"total_in_bytes\": 113128526\n            },\n            \"stored_fields\": \"623.5mb\",\n            \"stored_fields_in_bytes\": 653819143,\n            \"doc_values\": \"125.7mb\",\n            \"doc_values_in_bytes\": 131885142,\n            \"points\": \"59.9mb\",\n            \"points_in_bytes\": 62885773,\n            \"norms\": \"2.3kb\",\n            \"norms_in_bytes\": 2356,\n            \"term_vectors\": \"2.2kb\",\n            \"term_vectors_in_bytes\": 2310,\n            \"knn_vectors\": \"0b\",\n            \"knn_vectors_in_bytes\": 0\n        },\n        \"fields\": {\n            \"_id\": {\n                \"total\": \"49.3mb\",\n                \"total_in_bytes\": 51709993,\n                \"inverted_index\": {\n                    \"total\": \"29.7mb\",\n                    \"total_in_bytes\": 31172745\n                },\n                \"stored_fields\": \"19.5mb\", <3>\n                \"stored_fields_in_bytes\": 20537248,\n                \"doc_values\": \"0b\",\n                \"doc_values_in_bytes\": 0,\n                \"points\": \"0b\",\n                \"points_in_bytes\": 0,\n                \"norms\": \"0b\",\n                \"norms_in_bytes\": 0,\n                \"term_vectors\": \"0b\",\n                \"term_vectors_in_bytes\": 0,\n                \"knn_vectors\": \"0b\",\n                \"knn_vectors_in_bytes\": 0\n            },\n            \"_primary_term\": {...},\n            \"_seq_no\": {...},\n            \"_version\": {...},\n            \"_source\": {\n                \"total\": \"603.9mb\",\n                \"total_in_bytes\": 633281895,\n                \"inverted_index\": {...},\n                \"stored_fields\": \"603.9mb\", <4>\n                \"stored_fields_in_bytes\": 633281895,\n                \"doc_values\": \"0b\",\n                \"doc_values_in_bytes\": 0,\n                \"points\": \"0b\",\n                \"points_in_bytes\": 0,\n                \"norms\": \"0b\",\n                \"norms_in_bytes\": 0,\n                \"term_vectors\": \"0b\",\n                \"term_vectors_in_bytes\": 0,\n                \"knn_vectors\": \"0b\",\n                \"knn_vectors_in_bytes\": 0\n            },\n            \"context\": {\n                \"total\": \"28.6mb\",\n                \"total_in_bytes\": 30060405,\n                \"inverted_index\": {\n                    \"total\": \"22mb\",\n                    \"total_in_bytes\": 23090908\n                },\n                \"stored_fields\": \"0b\",\n                \"stored_fields_in_bytes\": 0,\n                \"doc_values\": \"0b\",\n                \"doc_values_in_bytes\": 0,\n                \"points\": \"0b\",\n                \"points_in_bytes\": 0,\n                \"norms\": \"2.3kb\",\n                \"norms_in_bytes\": 2356,\n                \"term_vectors\": \"2.2kb\",\n                \"term_vectors_in_bytes\": 2310,\n                \"knn_vectors\": \"0b\",\n                \"knn_vectors_in_bytes\": 0\n            },\n            \"context.keyword\": {...},\n            \"message\": {...},\n            \"message.keyword\": {...}\n        }\n    }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/: \\{\\.\\.\\.\\}/: $body.$_path/]\n// TESTRESPONSE[s/: (\\-)?[0-9]+/: $body.$_path/]\n// TESTRESPONSE[s/: \"[^\"]*\"/: $body.$_path/]\n\n<1> The store size of only analyzed shards of the index.\n\n<2> The total size of fields of the analyzed shards of the index. This total\nis usually smaller than the index size specified in <1> as some small metadata\nfiles are ignored and some parts of data files might not be scanned by the API.\n\n<3> The stored size of the `_id` field\n\n<4> The stored size of the `_source` field. As stored fields are stored\ntogether in a compressed format, the sizes of stored fields are\nestimates and can be inaccurate. The stored size of the `_id` field\nis likely underestimated while the `_source` field is overestimated.\n"
}