{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.611580",
        "size": 11375,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-get-api-key.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-api-get-api-key",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-get-api-key]]\n=== Get API key information API\n++++\n<titleabbrev>Get API key information</titleabbrev>\n++++\n\nRetrieves information for one or more API keys.\n\n[[security-api-get-api-key-request]]\n==== {api-request-title}\n\n`GET /_security/api_key`\n\n[[security-api-get-api-key-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have at least the `manage_own_api_key` or the\n`read_security` cluster privileges.\n** If you only have the `manage_own_api_key` privilege, this API only returns\nthe API keys that you own.\n+\nNOTE: Authenticating with an API key that has the `manage_own_api_key` privilege\ndoes not allow retrieving the authenticated user's own keys. Instead,\nauthenticate the user with basic credentials.\n** If you have `read_security`, `manage_api_key` or greater\nprivileges (including `manage_security`), this API returns all API keys\nregardless of ownership.\n\n[[security-api-get-api-key-desc]]\n==== {api-description-title}\n\nThe information for the API keys created by\n<<security-api-create-api-key,create API Key>> can be retrieved using this API.\n\n[[security-api-get-api-key-query-params]]\n==== {api-path-parms-title}\n\nThe following parameters can be specified in the query parameters of a GET request and\npertain to retrieving api keys:\n\n`id`::\n(Optional, string) An API key id. This parameter cannot be used with any of\n`name`, `realm_name` or `username` are used.\n\n`name`::\n(Optional, string) An API key name. This parameter cannot be used with any of\n`id`, `realm_name` or `username` are used. It supports prefix search with wildcard.\n\n`realm_name`::\n(Optional, string) The name of an authentication realm. This parameter cannot be\nused with either `id` or `name` or when `owner` flag is set to `true`.\n\n`username`::\n(Optional, string) The username of a user. This parameter cannot be used with\neither `id` or `name` or when `owner` flag is set to `true`.\n\n`owner`::\n(Optional, Boolean) A boolean flag that can be used to query API keys owned\nby the currently authenticated user. Defaults to false.\nThe 'realm_name' or 'username' parameters cannot be specified when this\nparameter is set to 'true' as they are assumed to be the currently authenticated ones.\n\n`with_limited_by`::\n(Optional, Boolean) A boolean flag to return the snapshot of the owner user's role descriptors\nassociated with the API key. An API key's actual permission is the intersection of\nits <<api-key-role-descriptors,assigned role descriptors>> and the owner user's role descriptors\n(effectively limited by it). An API key must have `manage_api_key` or higher privileges to retrieve the limited-by role descriptors of any API key, including itself.\n\n`with_profile_uid`::\n(Optional, boolean) Determines whether to also retrieve the <<user-profile,user profile>> `uid`, for the API key owner user.\nIf it exists, the profile uid is returned under the `profile_uid` response field for each API key.\nDefaults to `false`.\n\n`active_only`::\n(Optional, Boolean) A boolean flag that can be used to query API keys that are currently active.\nAn API key is considered active if it is neither invalidated, nor expired at query time. You can specify this together\nwith other parameters such as `owner` or `name`.  If `active_only` is `false`, the response will\ninclude both active and inactive (expired or invalidated) keys. Defaults to `false`.\n\nNOTE: When none of the parameters \"id\", \"name\", \"username\" and \"realm_name\"\nare specified, and the \"owner\" is set to false then it will retrieve all API\nkeys if the user is authorized. If the user is not authorized to retrieve other user's\nAPI keys, then an error will be returned.\n\n[[security-api-get-api-key-example]]\n==== {api-examples-title}\n\nIf you create an API key as follows:\n\n[source,console]\n------------------------------------------------------------\nPOST /_security/api_key\n{\n  \"name\": \"my-api-key\",\n  \"role_descriptors\": {},\n  \"metadata\": {\n    \"application\": \"myapp\"\n  }\n}\n------------------------------------------------------------\n\nA successful call returns a JSON structure that provides\nAPI key information. For example:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"id\":\"VuaCfGcBCdbkQm-e5aOx\",\n  \"name\":\"my-api-key\",\n  \"api_key\":\"ui2lp2axTNmsyakw9tvNnw\",\n  \"encoded\": \"VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==\"\n}\n--------------------------------------------------\n// TESTRESPONSE[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n// TESTRESPONSE[s/ui2lp2axTNmsyakw9tvNnw/$body.api_key/]\n// TESTRESPONSE[s/VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==/$body.encoded/]\n\nYou can use the following example to retrieve the API key by ID:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?id=VuaCfGcBCdbkQm-e5aOx&with_limited_by=true\n--------------------------------------------------\n// TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n// TEST[continued]\n\nA successful call returns a JSON structure that contains the information of the API key:\n\n[source,js]\n--------------------------------------------------\n{\n  \"api_keys\": [ <1>\n    {\n      \"id\": \"VuaCfGcBCdbkQm-e5aOx\", <2>\n      \"name\": \"my-api-key\", <3>\n      \"creation\": 1548550550158, <4>\n      \"expiration\": 1548551550158, <5>\n      \"invalidated\": false, <6>\n      \"username\": \"myuser\", <7>\n      \"realm\": \"native1\", <8>\n      \"realm_type\": \"native\",\n      \"metadata\": { <9>\n        \"application\": \"myapp\"\n      },\n      \"role_descriptors\": { }, <10>\n      \"limited_by\": [  <11>\n        {\n          \"role-power-user\": {\n            \"cluster\": [\n              \"monitor\"\n            ],\n            \"indices\": [\n              {\n                \"names\": [\n                  \"*\"\n                ],\n                \"privileges\": [\n                  \"read\"\n                ],\n                \"allow_restricted_indices\": false\n              }\n            ],\n            \"applications\": [ ],\n            \"run_as\": [ ],\n            \"metadata\": { },\n            \"transient_metadata\": {\n              \"enabled\": true\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> The list of API keys that were retrieved for this request.\n<2> Id for the API key\n<3> Name of the API key\n<4> Creation time for the API key in milliseconds\n<5> Optional expiration time for the API key in milliseconds\n<6> Invalidation status for the API key. If the key has been invalidated, it has\na value of `true` and an additional field with the `invalidation` time in milliseconds. Otherwise, it is `false`.\n<7> Principal for which this API key was created\n<8> Realm name of the principal for which this API key was created\n<9> Metadata of the API key\n<10> The role descriptors assigned to this API key when it was <<api-key-role-descriptors,created>>\nor last <<security-api-update-api-key-api-key-role-descriptors,updated>>.\nAn empty role descriptor means the API key inherits the owner user's\npermissions.\n<11> The owner user's permissions associated with the API key.\nIt is a point-in-time snapshot captured at <<security-api-create-api-key,creation>> and\nsubsequent <<security-api-update-api-key,updates>>. An API key's\neffective permissions are an intersection of its assigned privileges and\nthe owner user's permissions.\n\nYou can use the following example to retrieve the API key by name:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?name=my-api-key\n--------------------------------------------------\n// TEST[continued]\n\nAPI key name supports prefix search by using wildcard:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?name=my-*\n--------------------------------------------------\n// TEST[continued]\n\nThe following example retrieves all API keys for the `native1` realm:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?realm_name=native1\n--------------------------------------------------\n// TEST[continued]\n\nThe following example retrieves all API keys for the user `myuser` in all realms:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?username=myuser\n--------------------------------------------------\n// TEST[continued]\n\nThe following example retrieves all API keys owned by the currently authenticated user:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?owner=true\n--------------------------------------------------\n// TEST[continued]\n\nThe following example retrieves all API keys if the user is authorized to do so:\n[source,console]\n--------------------------------------------------\nGET /_security/api_key\n--------------------------------------------------\n// TEST[continued]\n\nThe following example retrieves all active API keys if the user is authorized to do so:\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?active_only=true\n--------------------------------------------------\n// TEST[continued]\n\nFollowing creates an API key\n\n[source,console]\n------------------------------------------------------------\nPOST /_security/api_key\n{\n  \"name\": \"my-api-key-1\",\n  \"metadata\": {\n    \"application\": \"my-application\"\n  }\n}\n------------------------------------------------------------\n\nThe following example retrieves the API key identified by the specified `id` if\nit is owned by the currently authenticated user:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?id=VuaCfGcBCdbkQm-e5aOx&owner=true\n--------------------------------------------------\n// TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n// TEST[continued]\n\nFinally, the following example retrieves all API keys for the user `myuser` in\n the `native1` realm immediately:\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?username=myuser&realm_name=native1\n--------------------------------------------------\n// TEST[continued]\n\nA successful call returns a JSON structure that contains the information of one or more API keys that were retrieved.\n\n[source,js]\n--------------------------------------------------\n{\n  \"api_keys\": [\n    {\n      \"id\": \"0GF5GXsBCXxz2eDxWwFN\",\n      \"name\": \"hadoop_myuser_key\",\n      \"creation\": 1548550550158,\n      \"expiration\": 1548551550158,\n      \"invalidated\": false,\n      \"username\": \"myuser\",\n      \"realm\": \"native1\",\n      \"realm_type\": \"native\",\n      \"metadata\": {\n        \"application\": \"myapp\"\n      },\n      \"role_descriptors\": {\n        \"role-a\": {\n          \"cluster\": [\n            \"monitor\"\n          ],\n          \"indices\": [\n            {\n              \"names\": [\n                \"index-a\"\n              ],\n              \"privileges\": [\n                \"read\"\n              ],\n              \"allow_restricted_indices\": false\n            }\n          ],\n          \"applications\": [ ],\n          \"run_as\": [ ],\n          \"metadata\": { },\n          \"transient_metadata\": {\n            \"enabled\": true\n          }\n        }\n      }\n    },\n    {\n      \"id\": \"6wHJmcQpReKBa42EHV5SBw\",\n      \"name\": \"api-key-name-2\",\n      \"creation\": 1548550550158,\n      \"invalidated\": false,\n      \"username\": \"user-y\",\n      \"realm\": \"realm-2\",\n      \"metadata\": {},\n      \"role_descriptors\": { }\n    }\n  ]\n}\n--------------------------------------------------\n// NOTCONSOLE\n\n"
}