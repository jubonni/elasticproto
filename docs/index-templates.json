{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.416067",
        "size": 5389,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/index-templates.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "index-templates",
        "version": "8.15"
    },
    "doc": "[[index-templates]]\n= Index templates\n\nNOTE: This topic describes the composable index templates introduced in {es} 7.8.\nFor information about how index templates worked previously,\nsee the <<indices-templates-v1,legacy template documentation>>.\n\n[[getting]]\nAn index template is a way to tell {es} how to configure an index when it is\ncreated. For data streams, the index template configures the stream's backing\nindices as they are created. Templates are configured\n*prior to index creation*. When an index is created - either manually or\nthrough indexing a document - the template settings are used as a basis for\ncreating the index.\n\nThere are two types of templates: index templates and <<indices-component-template,component templates>>. Component templates are reusable building\nblocks that configure mappings, settings, and aliases. While you can use\ncomponent templates to construct index templates, they aren't directly applied\nto a set of indices. Index templates can contain a collection of component\ntemplates, as well as directly specify settings, mappings, and aliases.\n\nThe following conditions apply to index templates:\n\n* Composable templates take precedence over legacy templates. If no composable\ntemplate matches a given index, a legacy template may still match and be\napplied.\n* If an index is created with explicit settings and also matches an index\ntemplate, the settings from the <<indices-create-index,create index>> request\ntake precedence over settings specified in the index template and its component\ntemplates.\n* Settings specified in the index template itself take precedence over the settings\nin its component templates.\n* If a new data stream or index matches more than one index template, the index\ntemplate with the highest priority is used.\n\n[[avoid-index-pattern-collisions]]\n.Avoid index pattern collisions\n****\n{es} has built-in index templates, each with a priority of `100`, for the\nfollowing index patterns:\n\n// tag::built-in-index-template-patterns[]\n- `logs-*-*`\n- `metrics-*-*`\n- `synthetics-*-*`\n- `profiling-*`\n- `security_solution-*-*`\n// end::built-in-index-template-patterns[]\n\n{fleet-guide}/fleet-overview.html[{agent}] uses these templates to create\ndata streams. Index templates created by {fleet} integrations use similar\noverlapping index patterns and have a priority up to `200`.\n\nIf you use {fleet} or {agent}, assign your index templates a priority lower than\n`100` to avoid overriding these templates. Otherwise, to avoid accidentally\napplying the templates, do one or more of the following:\n\n- To disable all built-in index and component templates, set\n<<stack-templates-enabled,`stack.templates.enabled`>> to `false` using the\n<<cluster-update-settings,cluster update settings API>>.\n\n- Use a non-overlapping index pattern.\n\n- Assign templates with an overlapping pattern a `priority` higher than `200`.\nFor example, if you don't use {fleet} or {agent} and want to create a template\nfor the `logs-*` index pattern, assign your template a priority of `500`. This\nensures your template is applied instead of the built-in template for\n`logs-*-*`.\n\n- To avoid naming collisions with built-in and Fleet-managed index templates, avoid using `@` as part of the name of your own index templates.\n****\n\n[discrete]\n[[create-index-templates]]\n== Create index template\n\nUse the <<indices-put-template,index template>> and <<indices-component-template,put component template>> APIs to create and update index templates.\nYou can also <<index-mgmt,manage index templates>> from Stack\nManagement in {kib}.\n\nThe following requests create two component templates.\n\n[source,console]\n----\nPUT _component_template/component_template1\n{\n  \"template\": {\n    \"mappings\": {\n      \"properties\": {\n        \"@timestamp\": {\n          \"type\": \"date\"\n        }\n      }\n    }\n  }\n}\n\nPUT _component_template/runtime_component_template\n{\n  \"template\": {\n    \"mappings\": {\n      \"runtime\": { <1>\n        \"day_of_week\": {\n          \"type\": \"keyword\",\n          \"script\": {\n            \"source\": \"emit(doc['@timestamp'].value.dayOfWeekEnum.getDisplayName(TextStyle.FULL, Locale.ENGLISH))\"\n          }\n        }\n      }\n    }\n  }\n}\n----\n<1> This component template adds a <<runtime-mapping-fields,runtime field>>\nnamed `day_of_week` to the mappings when a new index matches the template.\n\nThe following request creates an index template that is _composed of_ these\ncomponent templates.\n\n[source,console]\n----\nPUT _index_template/template_1\n{\n  \"index_patterns\": [\"te*\", \"bar*\"],\n  \"template\": {\n    \"settings\": {\n      \"number_of_shards\": 1\n    },\n    \"mappings\": {\n      \"_source\": {\n        \"enabled\": true\n      },\n      \"properties\": {\n        \"host_name\": {\n          \"type\": \"keyword\"\n        },\n        \"created_at\": {\n          \"type\": \"date\",\n          \"format\": \"EEE MMM dd HH:mm:ss Z yyyy\"\n        }\n      }\n    },\n    \"aliases\": {\n      \"mydata\": { }\n    }\n  },\n  \"priority\": 500,\n  \"composed_of\": [\"component_template1\", \"runtime_component_template\"], <1>\n  \"version\": 3,\n  \"_meta\": {\n    \"description\": \"my custom\"\n  }\n}\n----\n// TEST[continued]\n\n////\n\n[source,console]\n----\nDELETE _index_template/template_1\nDELETE _component_template/runtime_component_template\nDELETE _component_template/component_template1\n----\n// TEST[continued]\n\n////\n\ninclude::simulate-multi-component-templates.asciidoc[]\n\ninclude::ignore-missing-component-templates.asciidoc[]\n"
}