{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.858074",
        "size": 5421,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-weighted-tokens-query.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "query-dsl-weighted-tokens-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-weighted-tokens-query]]\n=== Weighted tokens query\n\n++++\n<titleabbrev>Weighted tokens</titleabbrev>\n++++\n\ndeprecated[8.15.0, This query has been replaced by the <<query-dsl-sparse-vector-query>> and will be removed in an upcoming release.]\npreview::[]\n\nThe weighted tokens query requires a list of token-weight pairs that are sent in with a query rather than calculated using a {nlp} model.\nThese token pairs are then used in a query against a <<sparse-vector,sparse vector>> or <<rank-features,rank features>> field.\n\nWeighted tokens queries are useful when you want to use an external query expansion model, or quickly prototype changes without reindexing a new model.\n\n[discrete]\n[[weighted-tokens-query-ex-request]]\n==== Example request\n\n[source,console]\n----\nPOST _search\n{\n  \"query\": {\n    \"weighted_tokens\": {\n      \"query_expansion_field\": {\n        \"tokens\": {\"2161\": 0.4679, \"2621\": 0.307, \"2782\": 0.1299, \"2851\": 0.1056, \"3088\": 0.3041, \"3376\": 0.1038, \"3467\": 0.4873, \"3684\": 0.8958, \"4380\": 0.334, \"4542\": 0.4636, \"4633\": 2.2805, \"4785\": 1.2628, \"4860\": 1.0655, \"5133\": 1.0709, \"7139\": 1.0016, \"7224\": 0.2486, \"7387\": 0.0985, \"7394\": 0.0542, \"8915\": 0.369, \"9156\": 2.8947, \"10505\": 0.2771, \"11464\": 0.3996, \"13525\": 0.0088, \"14178\": 0.8161, \"16893\": 0.1376, \"17851\": 1.5348, \"19939\": 0.6012},\n        \"pruning_config\": {\n          \"tokens_freq_ratio_threshold\": 5,\n          \"tokens_weight_threshold\": 0.4,\n          \"only_score_pruned_tokens\": false\n        }\n      }\n    }\n  }\n}\n----\n// TEST[skip: TBD]\n\n[discrete]\n[[weighted-token-query-params]]\n=== Top level parameters for `weighted_token`\n\n`<tokens>`:::\n(Required, dictionary) A dictionary of token-weight pairs.\n\n`pruning_config` ::::\n(Optional, object) Optional pruning configuration.\nIf enabled, this will omit non-significant tokens from the query in order to improve query performance.\nDefault: Disabled.\n+\n--\nParameters for `<pruning_config>` are:\n\n`tokens_freq_ratio_threshold`::\n(Optional, integer) Tokens whose frequency is more than `tokens_freq_ratio_threshold` times the average frequency of all tokens in the specified field are considered outliers and pruned.\nThis value must between 1 and 100.\nDefault: `5`.\n\n`tokens_weight_threshold`::\n(Optional, float) Tokens whose weight is less than `tokens_weight_threshold` are considered insignificant and pruned.\nThis value must be between 0 and 1.\nDefault: `0.4`.\n\n`only_score_pruned_tokens`::\n(Optional, boolean) If `true` we only input pruned tokens into scoring, and discard non-pruned tokens.\nIt is strongly recommended to set this to `false` for the main query, but this can be set to `true` for a rescore query to get more relevant results.\nDefault: `false`.\n\nNOTE: The default values for `tokens_freq_ratio_threshold` and `tokens_weight_threshold` were chosen based on tests using ELSER that provided the most optimal results.\n--\n\n[discrete]\n[[weighted-tokens-query-with-pruning-config-and-rescore-example]]\n==== Example weighted tokens query with pruning configuration and rescore\n\nThe following example adds a pruning configuration to the `text_expansion` query.\nThe pruning configuration identifies non-significant tokens to prune from the query in order to improve query performance.\n\nToken pruning happens at the shard level.\nWhile this should result in the same tokens being labeled as insignificant across shards, this is not guaranteed based on the composition of each shard.\nTherefore, if you are running `text_expansion` with a `pruning_config` on a multi-shard index, we strongly recommend adding a <<rescore>> function with the tokens that were originally pruned from the query.\nThis will help mitigate any shard-level inconsistency with pruned tokens and provide better relevance overall.\n\n[source,console]\n----\nGET my-index/_search\n{\n   \"query\":{\n      \"weighted_tokens\": {\n      \"query_expansion_field\": {\n        \"tokens\": {\"2161\": 0.4679, \"2621\": 0.307, \"2782\": 0.1299, \"2851\": 0.1056, \"3088\": 0.3041, \"3376\": 0.1038, \"3467\": 0.4873, \"3684\": 0.8958, \"4380\": 0.334, \"4542\": 0.4636, \"4633\": 2.2805, \"4785\": 1.2628, \"4860\": 1.0655, \"5133\": 1.0709, \"7139\": 1.0016, \"7224\": 0.2486, \"7387\": 0.0985, \"7394\": 0.0542, \"8915\": 0.369, \"9156\": 2.8947, \"10505\": 0.2771, \"11464\": 0.3996, \"13525\": 0.0088, \"14178\": 0.8161, \"16893\": 0.1376, \"17851\": 1.5348, \"19939\": 0.6012},\n        \"pruning_config\": {\n          \"tokens_freq_ratio_threshold\": 5,\n          \"tokens_weight_threshold\": 0.4,\n          \"only_score_pruned_tokens\": false\n        }\n      }\n    }\n   },\n   \"rescore\": {\n      \"window_size\": 100,\n      \"query\": {\n         \"rescore_query\": {\n            \"weighted_tokens\": {\n              \"query_expansion_field\": {\n                \"tokens\": {\"2161\": 0.4679, \"2621\": 0.307, \"2782\": 0.1299, \"2851\": 0.1056, \"3088\": 0.3041, \"3376\": 0.1038, \"3467\": 0.4873, \"3684\": 0.8958, \"4380\": 0.334, \"4542\": 0.4636, \"4633\": 2.2805, \"4785\": 1.2628, \"4860\": 1.0655, \"5133\": 1.0709, \"7139\": 1.0016, \"7224\": 0.2486, \"7387\": 0.0985, \"7394\": 0.0542, \"8915\": 0.369, \"9156\": 2.8947, \"10505\": 0.2771, \"11464\": 0.3996, \"13525\": 0.0088, \"14178\": 0.8161, \"16893\": 0.1376, \"17851\": 1.5348, \"19939\": 0.6012},\n                \"pruning_config\": {\n                  \"tokens_freq_ratio_threshold\": 5,\n                  \"tokens_weight_threshold\": 0.4,\n                  \"only_score_pruned_tokens\": true\n                }\n              }\n            }\n         }\n      }\n   }\n}\n----\n//TEST[skip: TBD]\n"
}