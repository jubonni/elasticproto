{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.268583",
        "size": 4078,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/range-enrich-policy-type.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "range-enrich-policy-type",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[range-enrich-policy-type]]\n=== Example: Enrich your data by matching a value to a range\n\nA `range` <<enrich-policy,enrich policy>> uses a <<query-dsl-term-query,`term`\nquery>> to match a number, date, or IP address in incoming documents to a range\nof the same type in the enrich index. Matching a range to a range is not\nsupported.\n\nThe following example creates a `range` enrich policy that adds a descriptive network name and\nresponsible department to incoming documents based on an IP address. It then\nadds the enrich policy to a processor in an ingest pipeline.\n\nUse the <<indices-create-index, create index API>> with the appropriate mappings to create a source index.\n\n[source,console]\n----\nPUT /networks\n{\n  \"mappings\": {\n    \"properties\": {\n      \"range\": { \"type\": \"ip_range\" },\n      \"name\": { \"type\": \"keyword\" },\n      \"department\": { \"type\": \"keyword\" }\n    }\n  }\n}\n----\n\nThe following index API request indexes a new document to that index.\n\n[source,console]\n----\nPUT /networks/_doc/1?refresh=wait_for\n{\n  \"range\": \"10.100.0.0/16\",\n  \"name\": \"production\",\n  \"department\": \"OPS\"\n}\n----\n// TEST[continued]\n\nUse the create enrich policy API to create an enrich policy with the\n`range` policy type. This policy must include:\n\n* One or more source indices\n* A `match_field`,\nthe field from the source indices used to match incoming documents\n* Enrich fields from the source indices you'd like to append to incoming\ndocuments\n\nSince we plan to enrich documents based on an IP address, the policy's\n`match_field` must be an `ip_range` field.\n\n[source,console]\n----\nPUT /_enrich/policy/networks-policy\n{\n  \"range\": {\n    \"indices\": \"networks\",\n    \"match_field\": \"range\",\n    \"enrich_fields\": [\"name\", \"department\"]\n  }\n}\n----\n// TEST[continued]\n\nUse the <<execute-enrich-policy-api,execute enrich policy API>> to create an\nenrich index for the policy.\n\n[source,console]\n----\nPOST /_enrich/policy/networks-policy/_execute?wait_for_completion=false\n----\n// TEST[s/\\?wait_for_completion=false//]\n// TEST[continued]\n\n\nUse the <<put-pipeline-api,create or update pipeline API>> to create an ingest\npipeline. In the pipeline, add an <<enrich-processor,enrich processor>> that\nincludes:\n\n* Your enrich policy.\n* The `field` of incoming documents used to match documents\nfrom the enrich index.\n* The `target_field` used to store appended enrich data for incoming documents.\nThis field contains the `match_field` and `enrich_fields` specified in your\nenrich policy.\n\n[source,console]\n----\nPUT /_ingest/pipeline/networks_lookup\n{\n  \"processors\" : [\n    {\n      \"enrich\" : {\n        \"description\": \"Add 'network' data based on 'ip'\",\n        \"policy_name\": \"networks-policy\",\n        \"field\" : \"ip\",\n        \"target_field\": \"network\",\n        \"max_matches\": \"10\"\n      }\n    }\n  ]\n}\n----\n// TEST[continued]\n\nUse the ingest pipeline to index a document. The incoming document should\ninclude the `field` specified in your enrich processor.\n\n[source,console]\n----\nPUT /my-index-000001/_doc/my_id?pipeline=networks_lookup\n{\n  \"ip\": \"10.100.34.1\"\n}\n----\n// TEST[continued]\n\nTo verify the enrich processor matched and appended the appropriate field data,\nuse the <<docs-get,get API>> to view the indexed document.\n\n[source,console]\n----\nGET /my-index-000001/_doc/my_id\n----\n// TEST[continued]\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"_index\" : \"my-index-000001\",\n  \"_id\" : \"my_id\",\n  \"_version\" : 1,\n  \"_seq_no\" : 0,\n  \"_primary_term\" : 1,\n  \"found\" : true,\n  \"_source\" : {\n    \"ip\" : \"10.100.34.1\",\n    \"network\" : [\n      {\n        \"name\" : \"production\",\n        \"range\" : \"10.100.0.0/16\",\n        \"department\" : \"OPS\"\n      }\n    ]\n  }\n}\n----\n// TESTRESPONSE[s/\"_seq_no\": \\d+/\"_seq_no\" : $body._seq_no/ s/\"_primary_term\":1/\"_primary_term\" : $body._primary_term/]\n\n////\n[source,console]\n--------------------------------------------------\nDELETE /_ingest/pipeline/networks_lookup\nDELETE /_enrich/policy/networks-policy\nDELETE /networks\nDELETE /my-index-000001\n--------------------------------------------------\n// TEST[continued]\n////\n"
}