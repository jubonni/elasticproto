{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.366066",
        "size": 5687,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/query-dsl-semantic-query.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "query-dsl-semantic-query",
        "version": "8.15"
    },
    "doc": "[[query-dsl-semantic-query]]\n=== Semantic query\n++++\n<titleabbrev>Semantic</titleabbrev>\n++++\n\nbeta[]\n\nThe `semantic` query type enables you to perform <<semantic-search,semantic search>> on data stored in a <<semantic-text,`semantic_text`>> field.\n\n\n[discrete]\n[[semantic-query-example]]\n==== Example request\n\n[source,console]\n------------------------------------------------------------\nGET my-index-000001/_search\n{\n  \"query\": {\n    \"semantic\": {\n      \"field\": \"inference_field\",\n      \"query\": \"Best surfing places\"\n    }\n  }\n}\n------------------------------------------------------------\n// TEST[skip: Requires inference endpoints]\n\n\n[discrete]\n[[semantic-query-params]]\n==== Top-level parameters for `semantic`\n\n`field`::\n(Required, string)\nThe `semantic_text` field to perform the query on.\n\n`query`::\n(Required, string)\nThe query text to be searched for on the field.\n\n\nRefer to <<semantic-search-semantic-text,this tutorial>> to learn more about semantic search using `semantic_text` and `semantic` query.\n\n[discrete]\n[[hybrid-search-semantic]]\n==== Hybrid search with the `semantic` query\n\nThe `semantic` query can be used as a part of a hybrid search where the `semantic` query is combined with lexical queries.\nFor example, the query below finds documents with the `title` field matching \"mountain lake\", and combines them with results from a semantic search on the field `title_semantic`, that is a `semantic_text` field.\nThe combined documents are then scored, and the top 3 top scored documents are returned.\n\n[source,console]\n------------------------------------------------------------\nPOST my-index/_search\n{\n  \"size\" : 3,\n  \"query\": {\n    \"bool\": {\n      \"should\": [\n        {\n          \"match\": {\n            \"title\": {\n              \"query\": \"mountain lake\",\n              \"boost\": 1\n            }\n          }\n        },\n        {\n          \"semantic\": {\n            \"field\": \"title_semantic\",\n            \"query\": \"mountain lake\",\n            \"boost\": 2\n          }\n        }\n      ]\n    }\n  }\n}\n------------------------------------------------------------\n// TEST[skip: Requires inference endpoints]\n\nYou can also use semantic_text as part of <<rrf,Reciprocal Rank Fusion>> to make ranking relevant results easier:\n\n[source,console]\n------------------------------------------------------------\nGET my-index/_search\n{\n  \"retriever\": {\n    \"rrf\": {\n      \"retrievers\": [\n        {\n          \"standard\": {\n            \"query\": {\n              \"term\": {\n                \"text\": \"shoes\"\n              }\n            }\n          }\n        },\n        {\n          \"standard\": {\n            \"query\": {\n              \"semantic\": {\n                \"field\": \"semantic_field\",\n                \"query\": \"shoes\"\n              }\n            }\n          }\n        }\n      ],\n      \"rank_window_size\": 50,\n      \"rank_constant\": 20\n    }\n  }\n}\n------------------------------------------------------------\n// TEST[skip: Requires inference endpoints]\n\n\n[discrete]\n[[advanced-search]]\n==== Advanced search on `semantic_text` fields\n\nThe `semantic` query uses default settings for searching on `semantic_text` fields for ease of use.\nIf you want to fine-tune a search on a `semantic_text` field, you need to know the task type used by the `inference_id` configured in `semantic_text`.\nYou can find the task type using the <<get-inference-api>>, and check the `task_type` associated with the {infer} service.\nDepending on the `task_type`, use either the <<query-dsl-sparse-vector-query,`sparse_vector`>> or the <<query-dsl-knn-query,`knn`>> query for greater flexibility and customization.\n\nNOTE: While it is possible to use the `sparse_vector` query or the `knn` query\non a `semantic_text` field, it is not supported to use the `semantic_query` on a\n`sparse_vector` or `dense_vector` field type.\n\n\n[discrete]\n[[search-sparse-inference]]\n===== Search with `sparse_embedding` inference\n\nWhen the {infer} endpoint uses a `sparse_embedding` model, you can use a <<query-dsl-sparse-vector-query,`sparse_vector` query>> on a <<semantic-text,`semantic_text`>> field in the following way:\n\n[source,console]\n------------------------------------------------------------\nGET test-index/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"inference_field.inference.chunks\",\n      \"query\": {\n        \"sparse_vector\": {\n          \"field\": \"inference_field.inference.chunks.embeddings\",\n          \"inference_id\": \"my-inference-id\",\n          \"query\": \"mountain lake\"\n        }\n      }\n    }\n  }\n}\n------------------------------------------------------------\n// TEST[skip: Requires inference endpoints]\n\nYou can customize the `sparse_vector` query to include specific settings, like <<sparse-vector-query-with-pruning-config-and-rescore-example,pruning configuration>>.\n\n\n[discrete]\n[[search-text-inferece]]\n===== Search with `text_embedding` inference\n\nWhen the {infer} endpoint uses a `text_embedding` model, you can use a <<query-dsl-knn-query,`knn` query>> on a `semantic_text` field in the following way:\n\n[source,console]\n------------------------------------------------------------\nGET test-index/_search\n{\n  \"query\": {\n    \"nested\": {\n      \"path\": \"inference_field.inference.chunks\",\n      \"query\": {\n        \"knn\": {\n          \"field\": \"inference_field.inference.chunks.embeddings\",\n          \"query_vector_builder\": {\n            \"text_embedding\": {\n              \"model_id\": \"my_inference_id\",\n\t      \"model_text\": \"mountain lake\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n------------------------------------------------------------\n// TEST[skip: Requires inference endpoints]\n\nYou can customize the `knn` query to include specific settings, like `num_candidates` and `k`.\n"
}