{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.575087",
        "size": 5446,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-suggest-user-profile.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "security-api-suggest-user-profile",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-suggest-user-profile]]\n=== Suggest user profile API\n++++\n<titleabbrev>Suggest user profile</titleabbrev>\n++++\n\nNOTE: The user profile feature is designed only for use by {kib} and\nElastic\u2019s {observability}, {ents}, and {elastic-sec} solutions. Individual\nusers and external applications should not call this API directly. Elastic reserves\nthe right to change or remove this feature in future releases without prior notice.\n\nGet suggestions for user profiles that match specified search criteria.\n\n[[security-api-suggest-user-profile-request]]\n==== {api-request-title}\n\n`GET /_security/profile/_suggest`\n\n`POST /_security/profile/_suggest`\n\n[[security-api-suggest-user-profile-prereqs]]\n==== {api-prereq-title}\n\nTo use this API, you must have _at least_ the `read_security`\n<<privileges-list-cluster,cluster privilege>> (or a greater privilege\nsuch as `manage_user_profile` or `manage_security`).\n\n[[security-api-suggest-user-profile-query-params]]\n==== {api-query-parms-title}\n\n`data`::\n(Optional, string) Comma-separated list of filters for the `data` field of\nthe profile document. To return all content, use `data=*`. To return a\nsubset of content, use `data=<key>` to retrieve the content nested under the\nspecified `<key>`. Defaults to returning no content.\n\n[[security-api-suggest-user-profile-request-body]]\n==== {api-request-body-title}\n\n`name`::\n(Optional, string)\nQuery string used to match name-related fields in <<security-api-activate-user-profile-desc,user profile documents>>. Name-related fields are the user's `username`, `full_name` and `email`.\n\n`size`::\n(Optional, integer)\nNumber of profiles to return. Defaults to `10`.\n\n`data`::\n(Optional, string)\nComma-separated list of filters for the `data` field of\nthe profile document. It works the same way as the <<security-api-suggest-user-profile-query-params,`data` query parameter>>.\n\nNOTE: It is an error to specify `data` as both the query parameter and the request body field.\n\n`hint`::\n(Optional, object)\nExtra search criteria to improve relevance of the suggestion result.\nA profile matching the specified hint is ranked higher in the response.\nBut not-matching the hint does not exclude a profile from the response\nas long as it matches the `name` field query.\n+\n.Properties of `hint`:\n--\n`uids`::\n(Optional, list of strings)\nA list of Profile UIDs to match against.\n\n`labels`::\n(Optional, object)\nA single key-value pair to match against the `labels` section of a profile.\nThe key must be a string and the value must be either a string or a list of strings.\nA profile is considered matching if it matches at least one of the strings.\n--\n\n[[security-api-suggest-user-profile-response-body]]\n==== {api-response-body-title}\n\n\n`total`::\n(object)\nMetadata about the number of matching profiles.\n\n`took`::\n(integer)\nMilliseconds it took {es} to execute the request.\n\n`profiles`::\n(array of objects)\nList of profile documents, ordered by relevance, that match the search criteria.\n\n[[security-api-suggest-user-profile-example]]\n==== {api-examples-title}\n\nThe following request get suggestions for profile documents with name-related fields\nmatching `jack`. It specifies both `uids` and `labels` hints for better relevance:\n\n[source,console]\n----\nPOST /_security/profile/_suggest\n{\n  \"name\": \"jack\",  <1>\n  \"hint\": {\n    \"uids\": [  <2>\n      \"u_8RKO7AKfEbSiIHZkZZ2LJy2MUSDPWDr3tMI_CkIGApU_0\",\n      \"u_79HkWkwmnBH5gqFKwoxggWPjEBOur1zLPXQPEl1VBW0_0\"\n    ],\n    \"labels\": {\n      \"direction\": [\"north\", \"east\"]  <3>\n    }\n  }\n}\n----\n// TEST[setup:user_profiles]\n<1> A profile's name-related fields must match `jack` for it to be included in the response.\n<2> The `uids` hint include profile UIDs for both user `jackspa` and `jacknich`.\n<3> The `labels` hint ranks profiles higher if their `direction` label matches either `north` or `east`.\n\nThe API returns:\n\n[source,console-result]\n----\n{\n  \"took\": 30,\n  \"total\": {\n    \"value\": 3,\n    \"relation\": \"eq\"\n  },\n  \"profiles\": [\n    {\n      \"uid\": \"u_79HkWkwmnBH5gqFKwoxggWPjEBOur1zLPXQPEl1VBW0_0\",\n      \"user\": {\n        \"username\": \"jacknich\",    <1>\n        \"roles\": [ \"admin\", \"other_role1\" ],\n        \"realm_name\": \"native\",\n        \"email\" : \"jacknich@example.com\",\n        \"full_name\": \"Jack Nicholson\"\n      },\n      \"labels\": {\n        \"direction\": \"north\"\n      },\n      \"data\": {}\n    },\n    {\n      \"uid\": \"u_8RKO7AKfEbSiIHZkZZ2LJy2MUSDPWDr3tMI_CkIGApU_0\",\n      \"user\": {\n        \"username\": \"jackspa\",    <2>\n        \"roles\": [ \"user\" ],\n        \"realm_name\": \"native\",\n        \"email\" : \"jackspa@example.com\",\n        \"full_name\": \"Jack Sparrow\"\n      },\n      \"labels\": {\n        \"direction\": \"south\"\n      },\n      \"data\": {}\n    },\n    {\n      \"uid\": \"u_P_0BMHgaOK3p7k-PFWUCbw9dQ-UFjt01oWJ_Dp2PmPc_0\",\n      \"user\": {\n        \"username\": \"jackrea\",    <3>\n        \"roles\": [ \"admin\" ],\n        \"realm_name\": \"native\",\n        \"email\" : \"jackrea@example.com\",\n        \"full_name\": \"Jack Reacher\"\n      },\n      \"labels\": {\n        \"direction\": \"west\"\n      },\n      \"data\": {}\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/30/$body.took/]\n<1> User `jacknich` is ranked highest because the profile matches both the `uids` and `labels` hints\n<2> User `jackspa` is ranked second because the profile matches only the `uids` hint\n<3> User `jackrea` is ranked lowest because the profile does not match any hints. However, it is *not*\n    excluded from the response because it matches the `name` query.\n"
}