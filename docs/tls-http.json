{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.671068",
        "size": 5126,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/tls-http.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "tls-http",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[tls-http]]\n==== Encrypting HTTP client communications\n\nWhen {security-features} are enabled, you can optionally use TLS to ensure that\ncommunication between HTTP clients and the cluster is encrypted.\n\nEnabling TLS on the HTTP layer is strongly recommended, but is not required.\n\nIMPORTANT: In a <<dev-vs-prod-mode,production environment>>, some {es} features\nsuch as tokens will be disabled unless you enable TLS on the HTTP\nlayer.\n\nIf you enable TLS on the HTTP layer in {es}, you might need to make\nconfiguration changes in other parts of the Elastic Stack and in any {es}\nclients that you use. For example, the following changes are typically\nnecessary:\n\n* Update all clients, tools, and applications that connect to {es} to use the\n`https` protocol in their configuration URL. For example, {kib}, {beats}, {ls},\nlanguage clients, and custom applications.\n* Set trusted certificate authorities. This change is typically required only\nif the {es} server certificate is issued by a certificate authority that is not\nautomatically trusted by the clients, tools, and applications that connect to\n{es}.\n\nIf you enable advanced TLS features on {es} (such as\n`ssl.client_authentication`), additional\nconfiguration could be necessary, but is not typically required in most {es}\ndeployments.\n\n. If you have not done so already, <<node-certificates,generate node certificates>>.\n+\n--\nIn particular, you need the files that are generated by the following command:\n\n[source,shell]\n----------------------------------------------------------\nbin/elasticsearch-certutil http\n----------------------------------------------------------\n\nThis command generates a zip file that contains certificates and keys for use in\n{es} and {kib}. Each folder contains a readme that explains how to use the files.\n--\n\n. Verify that you've copied the output files to the appropriate locations, as\nspecified in the readme files.\n+\n--\nFor example, copy the `http.p12` file from the `elasticsearch` folder into a\ndirectory within the {es} configuration directory on each node. If you chose to\ngenerate one certificate per node, copy the appropriate `http.p12` file to each\nnode. If you want to use {kib} to access this cluster, copy the\n`elasticsearch-ca.pem` file from the `kibana` folder into the {kib}\nconfiguration directory.\n--\n\n. Enable TLS and specify the information required to access the node\u2019s\ncertificate. For example:\n\n.. Update the `elasticsearch.yml` file on each node with the location of the\ncertificates.\n+\n--\nIf the certificates are in PKCS#12 format:\n\n[source, yaml]\n--------------------------------------------------\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.keystore.path: \"http.p12\"\n--------------------------------------------------\n\nIf you have certificates in PEM format:\n\n[source, yaml]\n--------------------------------------------------\nxpack.security.http.ssl.enabled: true\nxpack.security.http.ssl.key:  /home/es/config/node1_http.key <1>\nxpack.security.http.ssl.certificate: /home/es/config/node1_http.crt <2>\nxpack.security.http.ssl.certificate_authorities: [ \"/home/es/config/ca.crt\" ] <3>\n--------------------------------------------------\n<1> The full path to the node key file. This must be a location within the\n    {es} configuration directory.\n<2> The full path to the node certificate. This must be a location within the\n    {es} configuration directory.\n<3> An array of paths to the CA certificates that should be trusted. These paths\n    must be a location within the {es} configuration directory.\n--\n\n.. If you secured the keystore or the private key with a password, add that password to a secure\nsetting in {es}.\n+\n--\nIf the certificates are in PKCS#12 format:\n\n[source,shell]\n-----------------------------------------------------------\nbin/elasticsearch-keystore add xpack.security.http.ssl.keystore.secure_password\n-----------------------------------------------------------\n\nIf the certificates are in PEM format:\n\n[source,shell]\n-----------------------------------------------------------\nbin/elasticsearch-keystore add xpack.security.http.ssl.secure_key_passphrase\n-----------------------------------------------------------\n--\n\n. Optional: If you want to use {kib}, follow the instructions in the readme\nprovided by the `elasticsearch-certutil http` command or see\n{kibana-ref}/configuring-tls.html[Encrypting communications in {kib}].\n\n. Restart {es}.\n\n[NOTE]\n===============================\n* All TLS-related node settings are considered to be highly sensitive and\ntherefore are not exposed via the\n<<cluster-nodes-info,nodes info API>> For more\ninformation about any of these settings, see <<security-settings>>.\n\n* {es} monitors all files such as certificates, keys, keystores, or truststores\nthat are configured as values of TLS-related node settings. If you update any of\nthese files (for example, when your hostnames change or your certificates are\ndue to expire), {es} reloads them. The files are polled for changes at\na frequency determined by the global {es} `resource.reload.interval.high`\nsetting, which defaults to 5 seconds.\n===============================\n"
}