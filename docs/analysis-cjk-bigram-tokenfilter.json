{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.154579",
        "size": 4421,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-cjk-bigram-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analysis-cjk-bigram-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-cjk-bigram-tokenfilter]]\n=== CJK bigram token filter\n++++\n<titleabbrev>CJK bigram</titleabbrev>\n++++\n\nForms {wikipedia}/Bigram[bigrams] out of CJK (Chinese,\nJapanese, and Korean) tokens.\n\nThis filter is included in {es}'s built-in <<cjk-analyzer,CJK language\nanalyzer>>. It uses Lucene's\n{lucene-analysis-docs}/cjk/CJKBigramFilter.html[CJKBigramFilter].\n\n\n[[analysis-cjk-bigram-tokenfilter-analyze-ex]]\n==== Example\n\nThe following <<indices-analyze,analyze API>> request demonstrates how the\nCJK bigram token filter works.\n\n[source,console]\n--------------------------------------------------\nGET /_analyze\n{\n  \"tokenizer\" : \"standard\",\n  \"filter\" : [\"cjk_bigram\"],\n  \"text\" : \"\u6771\u4eac\u90fd\u306f\u3001\u65e5\u672c\u306e\u9996\u90fd\u3067\u3042\u308a\"\n}\n--------------------------------------------------\n\nThe filter produces the following tokens:\n\n[source,text]\n--------------------------------------------------\n[ \u6771\u4eac, \u4eac\u90fd, \u90fd\u306f, \u65e5\u672c, \u672c\u306e, \u306e\u9996, \u9996\u90fd, \u90fd\u3067, \u3067\u3042, \u3042\u308a ]\n--------------------------------------------------\n\n/////////////////////\n[source,console-result]\n--------------------------------------------------\n{\n  \"tokens\" : [\n    {\n      \"token\" : \"\u6771\u4eac\",\n      \"start_offset\" : 0,\n      \"end_offset\" : 2,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 0\n    },\n    {\n      \"token\" : \"\u4eac\u90fd\",\n      \"start_offset\" : 1,\n      \"end_offset\" : 3,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 1\n    },\n    {\n      \"token\" : \"\u90fd\u306f\",\n      \"start_offset\" : 2,\n      \"end_offset\" : 4,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 2\n    },\n    {\n      \"token\" : \"\u65e5\u672c\",\n      \"start_offset\" : 5,\n      \"end_offset\" : 7,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 3\n    },\n    {\n      \"token\" : \"\u672c\u306e\",\n      \"start_offset\" : 6,\n      \"end_offset\" : 8,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 4\n    },\n    {\n      \"token\" : \"\u306e\u9996\",\n      \"start_offset\" : 7,\n      \"end_offset\" : 9,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 5\n    },\n    {\n      \"token\" : \"\u9996\u90fd\",\n      \"start_offset\" : 8,\n      \"end_offset\" : 10,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 6\n    },\n    {\n      \"token\" : \"\u90fd\u3067\",\n      \"start_offset\" : 9,\n      \"end_offset\" : 11,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 7\n    },\n    {\n      \"token\" : \"\u3067\u3042\",\n      \"start_offset\" : 10,\n      \"end_offset\" : 12,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 8\n    },\n    {\n      \"token\" : \"\u3042\u308a\",\n      \"start_offset\" : 11,\n      \"end_offset\" : 13,\n      \"type\" : \"<DOUBLE>\",\n      \"position\" : 9\n    }\n  ]\n}\n--------------------------------------------------\n/////////////////////\n\n[[analysis-cjk-bigram-tokenfilter-analyzer-ex]]\n==== Add to an analyzer\n\nThe following <<indices-create-index,create index API>> request uses the\nCJK bigram token filter to configure a new \n<<analysis-custom-analyzer,custom analyzer>>.\n\n[source,console]\n--------------------------------------------------\nPUT /cjk_bigram_example\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"standard_cjk_bigram\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [ \"cjk_bigram\" ]\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n\n[[analysis-cjk-bigram-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n`ignored_scripts`::\n+\n--\n(Optional, array of character scripts)\nArray of character scripts for which to disable bigrams.\nPossible values:\n\n* `han`\n* `hangul`\n* `hiragana`\n* `katakana`\n\nAll non-CJK input is passed through unmodified.\n--\n\n`output_unigrams`::\n(Optional, Boolean)\nIf `true`, emit tokens in both bigram and\n{wikipedia}/N-gram[unigram] form. If `false`, a CJK character\nis output in unigram form when it has no adjacent characters. Defaults to\n`false`.\n\n[[analysis-cjk-bigram-tokenfilter-customize]]\n==== Customize\n\nTo customize the CJK bigram token filter, duplicate it to create the basis\nfor a new custom token filter. You can modify the filter using its configurable\nparameters.\n\n[source,console]\n--------------------------------------------------\nPUT /cjk_bigram_example\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"han_bigrams\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [ \"han_bigrams_filter\" ]\n        }\n      },\n      \"filter\": {\n        \"han_bigrams_filter\": {\n          \"type\": \"cjk_bigram\",\n          \"ignored_scripts\": [\n            \"hangul\",\n            \"hiragana\",\n            \"katakana\"\n          ],\n          \"output_unigrams\": true\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n"
}