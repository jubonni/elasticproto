{
    "meta": {
        "size": 2851,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-get-lifecycle.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ilm-get-lifecycle",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-get-lifecycle]]\n=== Get lifecycle policy API\n++++\n<titleabbrev>Get policy</titleabbrev>\n++++\n\nRetrieves a <<index-lifecycle-management,lifecycle>> policy.\n\n[[ilm-get-lifecycle-request]]\n==== {api-request-title}\n\n`GET _ilm/policy`\n\n`GET _ilm/policy/<policy_id>`\n\n[[ilm-get-lifecycle-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `manage_ilm` or\n`read_ilm` or both cluster privileges to use this API. For more information, see\n<<security-privileges>>.\n\n[[ilm-get-lifecycle-desc]]\n==== {api-description-title}\n\nReturns the specified policy definition. Includes the policy version and last\nmodified date. If no policy is specified, returns all defined policies.\n\n[[ilm-get-lifecycle-path-params]]\n==== {api-path-parms-title}\n\n`<policy_id>`::\n  (Optional, string) Identifier for the policy.\n\n[[ilm-get-lifecycle-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[[ilm-get-lifecycle-example]]\n==== {api-examples-title}\n\nThe following example retrieves `my_policy`:\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"min_age\": \"10d\",\n        \"actions\": {\n          \"forcemerge\": {\n            \"max_num_segments\": 1\n          }\n        }\n      },\n      \"delete\": {\n        \"min_age\": \"30d\",\n        \"actions\": {\n          \"delete\": {}\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nGET _ilm/policy/my_policy\n--------------------------------------------------\n// TEST[continued]\n\n\nIf the request succeeds, the body of the response contains the policy definition:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"my_policy\": {\n    \"version\": 1, <1>\n    \"modified_date\": 82392349, <2>\n    \"policy\": {\n      \"phases\": {\n        \"warm\": {\n          \"min_age\": \"10d\",\n          \"actions\": {\n            \"forcemerge\": {\n              \"max_num_segments\": 1\n            }\n          }\n        },\n        \"delete\": {\n          \"min_age\": \"30d\",\n          \"actions\": {\n            \"delete\": {\n              \"delete_searchable_snapshot\": true\n            }\n          }\n        }\n      }\n    },\n    \"in_use_by\" : { <3>\n      \"indices\" : [],\n      \"data_streams\" : [],\n      \"composable_templates\" : []\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"modified_date\": 82392349/\"modified_date\": $body.my_policy.modified_date/]\n\n<1> The policy version is incremented whenever the policy is updated\n<2> When this policy was last modified\n<3> Which indices, data streams, or templates currently use this policy\n"
}