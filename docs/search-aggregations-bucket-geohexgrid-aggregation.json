{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.604598",
        "size": 8890,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-geohexgrid-aggregation.html",
        "type": "documentation",
        "role": [
            "xpack",
            "xpack"
        ],
        "has_code": true,
        "title": "search-aggregations-bucket-geohexgrid-aggregation",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[search-aggregations-bucket-geohexgrid-aggregation]]\n=== Geohex grid aggregation\n++++\n<titleabbrev>Geohex grid</titleabbrev>\n++++\n\nA multi-bucket aggregation that groups <<geo-point,`geo_point`>> and\n<<geo-shape,`geo_shape`>> values into buckets that represent a grid.\nThe resulting grid can be sparse and only\ncontains cells that have matching data. Each cell corresponds to a\nhttps://h3geo.org/docs/core-library/h3Indexing#h3-cell-indexp[H3 cell index] and is\nlabeled using the https://h3geo.org/docs/core-library/h3Indexing#h3index-representation[H3Index representation].\n\nSee https://h3geo.org/docs/core-library/restable[the table of cell areas for H3\nresolutions] on how precision (zoom) correlates to size on the ground.\nPrecision for this aggregation can be between 0 and 15, inclusive.\n\nWARNING: High-precision requests can be very expensive in terms of RAM and\nresult sizes. For example, the highest-precision geohex with a precision of 15\nproduces cells that cover less than one square meter. We recommend you use a\nfilter to limit high-precision requests to a smaller geographic area. For an example,\nrefer to <<geohexgrid-high-precision>>.\n\n[[geohexgrid-low-precision]]\n==== Simple low-precision request\n\n[source,console,id=geohexgrid-aggregation-example]\n--------------------------------------------------\nPUT /museums\n{\n  \"mappings\": {\n    \"properties\": {\n      \"location\": {\n        \"type\": \"geo_point\"\n      }\n    }\n  }\n}\n\nPOST /museums/_bulk?refresh\n{\"index\":{\"_id\":1}}\n{\"location\": \"POINT (4.912350 52.374081)\", \"name\": \"NEMO Science Museum\"}\n{\"index\":{\"_id\":2}}\n{\"location\": \"POINT (4.901618 52.369219)\", \"name\": \"Museum Het Rembrandthuis\"}\n{\"index\":{\"_id\":3}}\n{\"location\": \"POINT (4.914722 52.371667)\", \"name\": \"Nederlands Scheepvaartmuseum\"}\n{\"index\":{\"_id\":4}}\n{\"location\": \"POINT (4.405200 51.222900)\", \"name\": \"Letterenhuis\"}\n{\"index\":{\"_id\":5}}\n{\"location\": \"POINT (2.336389 48.861111)\", \"name\": \"Mus\u00e9e du Louvre\"}\n{\"index\":{\"_id\":6}}\n{\"location\": \"POINT (2.327000 48.860000)\", \"name\": \"Mus\u00e9e d'Orsay\"}\n\nPOST /museums/_search?size=0\n{\n  \"aggregations\": {\n    \"large-grid\": {\n      \"geohex_grid\": {\n        \"field\": \"location\",\n        \"precision\": 4\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"large-grid\": {\n      \"buckets\": [\n        {\n          \"key\": \"841969dffffffff\",\n          \"doc_count\": 3\n        },\n        {\n          \"key\": \"841fb47ffffffff\",\n          \"doc_count\": 2\n        },\n        {\n          \"key\": \"841fa4dffffffff\",\n          \"doc_count\": 1\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\n[[geohexgrid-high-precision]]\n==== High-precision requests\n\nWhen requesting detailed buckets (typically for displaying a \"zoomed in\" map),\na filter like <<query-dsl-geo-bounding-box-query,geo_bounding_box>> should be\napplied to narrow the subject area. Otherwise, potentially millions of buckets\nwill be created and returned.\n\n[source,console,id=geohexgrid-high-precision-ex]\n--------------------------------------------------\nPOST /museums/_search?size=0\n{\n  \"aggregations\": {\n    \"zoomed-in\": {\n      \"filter\": {\n        \"geo_bounding_box\": {\n          \"location\": {\n            \"top_left\": \"POINT (4.9 52.4)\",\n            \"bottom_right\": \"POINT (5.0 52.3)\"\n          }\n        }\n      },\n      \"aggregations\": {\n        \"zoom1\": {\n          \"geohex_grid\": {\n            \"field\": \"location\",\n            \"precision\": 12\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"zoomed-in\": {\n      \"doc_count\": 3,\n      \"zoom1\": {\n        \"buckets\": [\n          {\n            \"key\": \"8c1969c9b2617ff\",\n            \"doc_count\": 1\n          },\n          {\n            \"key\": \"8c1969526d753ff\",\n            \"doc_count\": 1\n          },\n          {\n            \"key\": \"8c1969526d26dff\",\n            \"doc_count\": 1\n          }\n        ]\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\n[[geohexgrid-addtl-bounding-box-filtering]]\n==== Requests with additional bounding box filtering\n\nThe `geohex_grid` aggregation supports an optional `bounds` parameter\nthat restricts the cells considered to those that intersect the\nprovided bounds. The `bounds` parameter accepts the same\n<<query-dsl-geo-bounding-box-query-accepted-formats,bounding box formats>>\nas the geo-bounding box query. This bounding box can be used with or\nwithout an additional `geo_bounding_box` query for filtering the points prior to aggregating.\nIt is an independent bounding box that can intersect with, be equal to, or be disjoint\nto any additional `geo_bounding_box` queries defined in the context of the aggregation.\n\n[source,console,id=geohexgrid-aggregation-with-bounds]\n--------------------------------------------------\nPOST /museums/_search?size=0\n{\n  \"aggregations\": {\n    \"tiles-in-bounds\": {\n      \"geohex_grid\": {\n        \"field\": \"location\",\n        \"precision\": 12,\n        \"bounds\": {\n          \"top_left\": \"POINT (4.9 52.4)\",\n          \"bottom_right\": \"POINT (5.0 52.3)\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[continued]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n  \"aggregations\": {\n    \"tiles-in-bounds\": {\n      \"buckets\": [\n        {\n          \"key\": \"8c1969c9b2617ff\",\n          \"doc_count\": 1\n        },\n        {\n          \"key\": \"8c1969526d753ff\",\n          \"doc_count\": 1\n        },\n        {\n          \"key\": \"8c1969526d26dff\",\n          \"doc_count\": 1\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"_shards\": $body._shards,\"hits\":$body.hits,\"timed_out\":false,/]\n\n[discrete]\n[role=\"xpack\"]\n[[geohexgrid-aggregating-geo-shape]]\n==== Aggregating `geo_shape` fields\n\nAggregating on <<geo-shape>> fields works almost as it does for points. There are two key differences:\n\n* When aggregating over `geo_point` data, points are considered within a hexagonal tile if they lie\nwithin the edges defined by great circles. In other words the calculation is done using spherical coordinates.\nHowever, when aggregating over `geo_shape` data, the shapes are considered within a hexagon if they lie\nwithin the edges defined as straight lines on an equirectangular projection.\nThe reason is that Elasticsearch and Lucene treat edges using the equirectangular projection at index and search time.\nIn order to ensure that search results and aggregation results are aligned, we therefore also use equirectangular\nprojection in aggregations.\nFor most data, the difference is subtle or not noticed.\nHowever, for low zoom levels (low precision), especially far from the equator,  this can be noticeable.\nFor example, if the same point data is indexed as `geo_point` and `geo_shape`, it is possible  to get\ndifferent results when aggregating at lower resolutions.\n* As is the case with <<geotilegrid-aggregating-geo-shape,`geotile_grid`>>,\na single shape can be counted for in multiple tiles. A shape will contribute to the count of matching values\nif any part of its shape intersects with that tile. Below is an image that demonstrates this:\n\n\nimage:images/spatial/geoshape_hexgrid.png[]\n\n==== Options\n\n[horizontal]\nfield::\n(Required, string) Field containing indexed geo-point or geo-shape values.\nMust be explicitly mapped as a <<geo-point,`geo_point`>> or a <<geo-shape,`geo_shape`>> field.\nIf the field contains an array, `geohex_grid` aggregates all array values.\n\nprecision::\n(Optional, integer) Integer zoom of the key used to define cells/buckets in\nthe results. Defaults to `6`. Values outside of [`0`,`15`] will be rejected.\n\nbounds::\n(Optional, object) Bounding box used to filter the geo-points or geo-shapes in each bucket.\nAccepts the same bounding box formats as the\n<<query-dsl-geo-bounding-box-query-accepted-formats,geo-bounding box query>>.\n\nsize::\n(Optional, integer) Maximum number of buckets to return. Defaults to 10,000.\nWhen results are trimmed, buckets are prioritized based on the volume of\ndocuments they contain.\n\nshard_size::\n(Optional, integer) Number of buckets returned from each shard. Defaults to\n`max(10,(size x number-of-shards))` to allow for a more accurate count of the\ntop cells in the final result. Since each shard could have a different top result order,\nusing a larger number here reduces the risk of inaccurate counts, but incurs a performance cost.\n"
}