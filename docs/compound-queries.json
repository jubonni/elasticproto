{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.687078",
        "size": 1669,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/compound-queries.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "compound-queries",
        "version": "8.15"
    },
    "doc": "[[compound-queries]]\n== Compound queries\n\nCompound queries wrap other compound or leaf queries, either to combine their\nresults and scores, to change their behaviour, or to switch from query to\nfilter context.\n\nThe queries in this group are:\n\n<<query-dsl-bool-query,`bool` query>>::\nThe default query for combining multiple leaf or compound query clauses, as\n`must`, `should`, `must_not`, or `filter` clauses. The `must` and `should`\nclauses have their scores combined -- the more matching clauses, the better --\nwhile the `must_not` and `filter` clauses are executed in filter context.\n\n<<query-dsl-boosting-query,`boosting` query>>::\nReturn documents which match a `positive` query, but reduce the score of\ndocuments which also match a `negative` query.\n\n<<query-dsl-constant-score-query,`constant_score` query>>::\nA query which wraps another query, but executes it in filter context. All\nmatching documents are given the same ``constant'' `_score`.\n\n<<query-dsl-dis-max-query,`dis_max` query>>::\nA query which accepts multiple queries, and returns any documents which match\nany of the query clauses. While the `bool` query combines the scores from all\nmatching queries, the `dis_max` query uses the score of the single best-\nmatching query clause.\n\n<<query-dsl-function-score-query,`function_score` query>>::\nModify the scores returned by the main query with functions to take into\naccount factors like popularity, recency, distance, or custom algorithms\nimplemented with scripting.\n\n\ninclude::bool-query.asciidoc[]\ninclude::boosting-query.asciidoc[]\ninclude::constant-score-query.asciidoc[]\ninclude::dis-max-query.asciidoc[]\ninclude::function-score-query.asciidoc[]"
}