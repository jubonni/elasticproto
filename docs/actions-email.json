{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.991066",
        "size": 22055,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/actions-email.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "actions-email",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[actions-email]]\n=== Watcher email action\n++++\n<titleabbrev>Email action</titleabbrev>\n++++\n\nUse the `email` action to send email notifications. To send email, you must\n<<configuring-email, configure at least one email account>> in\n`elasticsearch.yml`.\n\nEmail notifications can be plain text or styled using HTML. You can include\ninformation from the watch execution payload using <<templates, templates>>\nand attach the entire watch payload to the message.\n\nSee <<email-action-attributes>> for the supported attributes. Any attributes that\nare missing from the email action definition are looked up in the email\naccount configuration. The required attributes must either be set in the email\naction definition or the account's `email_defaults`.\n\n[[configuring-email-actions]]\n==== Configuring email actions\n\nYou configure email actions in the `actions` array. Action-specific attributes\nare specified using the `email` keyword.\n\nFor example, the following email action uses a template to include data from\nthe watch payload in the email body:\n\n[source,js]\n--------------------------------------------------\n\"actions\" : {\n  \"send_email\" : { <1>\n    \"email\" : { <2>\n      \"to\" : \"username@example.org\", <3>\n      \"subject\" : \"Watcher Notification\", <4>\n      \"body\" : \"{{ctx.payload.hits.total}} error logs found\" <5>\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> The id of the action.\n<2> The action type is set to `email`.\n<3> One or more addresses to send the email to. Must be specified in the\n    action definition or in the email account configuration.\n<4> The subject of the email can contain static text and Mustache <<templates,\n    templates>>.\n<5> The body of the email can contain static text and Mustache <<templates,\n     templates>>. Must be specified in the action definition or in the email\n     account configuration.\n\n[[configuring-email-attachments]]\n==== Configuring email attachments\n\nYou can attach the execution context payload or data from an any HTTP service to\nthe email notification. There is no limit on the number of attachments you can\nconfigure.\n\nTo configure attachments, specify a name for the attached file and the type of\nattachment: `data`, `http` or `reporting`. The `data` attachment type attaches the execution\ncontext payload to the email message. The `http` attachment type enables\nyou to issue an HTTP request and attach the response to the email message. When\nconfiguring the `http` attachment type, you must specify the request URL. The\n`reporting` attachment type is a special type to include PDF rendered dashboards\nfrom kibana. This type is consistently polling the kibana app if the dashboard\nrendering is done, preventing long running HTTP connections, that are potentially\nkilled by firewalls or load balancers in-between.\n\n[source,js]\n--------------------------------------------------\n\"actions\" : {\n  \"email_admin\" : {\n    \"email\": {\n      \"to\": \"John Doe <john.doe@example.com>\",\n      \"attachments\" : {\n        \"my_image.png\" : { <1>\n          \"http\" : { <2>\n            \"content_type\" : \"image/png\",\n            \"request\" : {\n              \"url\": \"http://example.org/foo/my-image.png\" <3>\n            }\n          }\n        },\n        \"dashboard.pdf\" : {\n          \"reporting\" : {\n            \"url\": \"http://example.org:5601/api/reporting/generate/dashboard/Error-Monitoring\"\n          }\n        },\n        \"data.yml\" : {\n          \"data\" : {\n            \"format\" : \"yaml\" <4>\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> The ID of the attachment, which is used as the file name in the email\n    attachment.\n<2> The type of the attachment and its specific configuration.\n<3> The URL from which to retrieve the attachment.\n<4> Data attachments default to JSON if you don't specify the format.\n\n.`http` attachment type attributes\n[options=\"header\"]\n|=====\n| Name            | Description\n| `content_type`  | Sets the content type for the email attachment. By default,\n                    the content type is extracted from the response sent by the\n                    HTTP service. You can explicitly specify the content type to\n                    ensure that the type is set correctly in the email in case\n                    the response does not specify the content type or it's specified\n                    incorrectly. Optional.\n| `inline`        | Configures as an attachment to sent with disposition `inline`. This\n                    allows the use of embedded images in HTML bodies, which are displayed\n                    in certain email clients. Optional. Defaults to `false`.\n| `request`       | Contains the HTTP request attributes. At a minimum, you must\n                    specify the `url` attribute to configure the host and path to\n                    the service endpoint. See <<webhook-action-attributes>> for\n                    the full list of HTTP request attributes. Required.\n|=====\n\n.`data` attachment type attributes\n[options=\"header\"]\n|======\n| Name        | Description\n| `format`    | Attaches the watch data, equivalent to specifying `attach_data`\n                in the watch configuration. Possible values are `json` or `yaml`.\n                Defaults to `json` if not specified.\n|======\n\n\n.`reporting` attachment type attributes\n[options=\"header\"]\n|======\n| Name            | Description\n| `url`           | The URL to trigger the dashboard creation\n| `inline`        | Configures as an attachment to sent with disposition `inline`. This\n                    allows the use of embedded images in HTML bodies, which are displayed\n                    in certain email clients. Optional. Defaults to `false`.\n| `retries`       | The reporting attachment type tries to poll regularly to receive the\n                    created PDF. This configures the number of retries. Defaults to `40`.\n                    The setting `xpack.notification.reporting.retries` can be configured\n                    globally to change the default.\n| `interval`      | The time to wait between two polling tries. Defaults to `15s` (this\n                    means, by default watcher tries to download a dashboard for 10 minutes,\n                    forty times fifteen seconds). The setting `xpack.notification.reporting.interval`\n                    can be configured globally to change the default.\n| `auth`          | Additional auth configuration for the request, see \n                    {kibana-ref}/automating-report-generation.html#use-watcher[use watcher] for details\n| `proxy`         | Additional proxy configuration for the request. See <<http-input-attributes>> \n                    on how to configure the values.\n|======\n\n\n[[email-action-reports]]\n===== Attaching reports to an email\n\nYou can use the `reporting` attachment type in an `email` action to automatically\ngenerate a Kibana report and distribute it via email.\n\nSee {kibana-ref}/automating-report-generation.html[Automating report generation].\n\n[[email-action-attributes]]\n==== Email action attributes\n\n[cols=\",^,,\", options=\"header\"]\n|======\n| Name                  |Required   | Default             | Description\n\n| `account`             | no        | the default account | The <<configuring-email, email account>> to use to send the email.\n\n| `from`                | no        | -                   | The email <<email-address,address>> from which the email\n                                                            will be sent. The `from` field can contain Mustache\n                                                            <<templates, templates>> as long as it resolves to a\n                                                            valid email address.\n\n| `to`                  | yes       | -                   | The email <<email-address,addresses>> of the `to` recipients.\n                                                            The `to` field can contain Mustache <<templates, templates>>\n                                                            as long as it resolves to a valid email address.\n\n| `cc`                  | no        | -                   | The email <<email-address,addresses>> of the `cc` recipients.\n                                                            The `cc` field can contain Mustache <<templates, templates>>\n                                                            as long as it resolves to a valid email address.\n\n| `bcc`                 | no        | -                   | The email <<email-address,addresses>> of the `bcc` recipients.\n                                                            The `bcc` field can contain Mustache <<templates, templates>>\n                                                            as long as it resolves to a valid email address.\n\n| `reply_to`            | no        | -                   | The email <<email-address,addresses>> that will be set on the\n                                                            message's `Reply-To` header. The `reply_to` field can contain\n                                                            Mustache <<templates, templates>> as long as it resolves to\n                                                            a valid email address.\n\n| `subject`             | no        | -                   | The subject of the email. The subject can be static text or\n                                                            contain Mustache <<templates, templates>>.\n\n| `body`                | no        | -                   | The body of the email. When this field holds a string, it\n                                                            will default to the text body of the email. Set as an object\n                                                            to specify either the text or the html body or both (using\n                                                            the fields below)\n\n| `body.text`           | no       | -                   | The plain text body of the email. The body can be static text\n                                                            or contain Mustache <<templates, templates>>.\n\n| `body.html`           | no       | -                   | The html body of the email. The body can be static text or\n                                                            contain Mustache <<templates, templates>>. This body will be\n                                                            sanitized to remove dangerous content such as scripts. This\n                                                            behavior can be disabled by setting\n                                                            `xpack.notification.email.html.sanitization.enabled: false` in\n                                                            `elasticsearch.yaml`.\n\n| `priority`            | no        | -                   | The priority of this email. Valid values are: `lowest`, `low`,\n                                                            `normal`, `high` and `highest`. The priority can contain a\n                                                            Mustache <<templates, template>> as long as it resolves to\n                                                            one of the valid values.\n\n| `attachments`         | no        | -                   | Attaches the watch payload (`data` attachment) or a file\n                                                            retrieved from an HTTP service (`http` attachment) to the\n                                                            email. For more information, see\n                                                            <<configuring-email-attachments, Configuring Email Attachments>>.\n\n| `attach_data`         | no        | false               | Indicates whether the watch execution data should be attached\n                                                            to the email. You can specify a Boolean value or an object.\n                                                            If `attach_data` is set to  `true`, the data is attached as a\n                                                            YAML file. This attribute is deprecated, use the `attachments`\n                                                            attribute to add a `data` attachment to attach the watch payload.\n\n| `attach_data.format`  | no        | yaml                | When `attach_data` is specified as an object, this field\n                                                            controls the format of the attached data. The supported formats\n                                                            are `json` and `yaml`. This attribute is deprecated, use the\n                                                            `attachments` attribute to add a `data` attachment to attach\n                                                            the watch payload.\n|======\n\n[[email-address]]\nEmail Address::\nAn email address can contain two possible parts--the address itself and an\noptional personal name as described in http://www.ietf.org/rfc/rfc822.txt[RFC 822].\nThe address can be represented either as a string of the form `user@host.domain`\nor `Personal Name <user@host.domain>`. You can also specify an email address as\nan object that contains `name` and `address` fields.\n\n[[address-list]]\nAddress List::\nA list of addresses can be specified as a an\narray: `[ 'Personal Name <user1@host.domain>', 'user2@host.domain' ]`.\n\n[[configuring-email]]\n==== Configuring email accounts\n\n{watcher} can send email using any SMTP email service. Email\nmessages can contain basic HTML tags. You can control which groups of tags are\nallowed by <<email-html-sanitization, Configuring HTML Sanitization Options>>.\n\nYou configure the accounts {watcher} can use to send email in the\n`xpack.notification.email` namespace in `elasticsearch.yml`. \nThe password for the specified SMTP user is stored securely in the\n<<secure-settings, {es} keystore>>.\n\nIf your email account is configured to require two step verification, you need\nto generate and use a unique App Password to send email from {watcher}.\nAuthentication will fail if you use your primary password.\n\n[[email-profile]]\n{watcher} provides three email profiles that control how MIME messages are\nstructured: `standard` (default), `gmail`, and `outlook`. These profiles\naccommodate differences in how various email systems interpret the MIME\nstandard. If you are using Gmail or Outlook, we recommend using the\ncorresponding profile. Use the `standard` profile if you are using another\nemail system.\n\nFor more information about configuring {watcher} to work with different email\nsystems, see:\n\n* <<gmail>>\n* <<outlook>>\n* <<exchange>>\n* <<amazon-ses>>\n\nIf you configure multiple email accounts, you must either configure a default\naccount or specify which account the email should be sent with in the\n<<actions-email,`email`>> action.\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email:\n  default_account: team1\n  account:\n    team1:\n      ...\n    team2:\n      ...\n--------------------------------------------------\n\n[discrete]\n[[gmail]]\n===== Sending email from Gmail\n\nUse the following email account settings to send email from the\nhttps://mail.google.com[Gmail] SMTP service:\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.account:\n    gmail_account:\n        profile: gmail\n        smtp:\n            auth: true\n            starttls.enable: true\n            host: smtp.gmail.com\n            port: 587\n            user: <username>\n--------------------------------------------------\n\nTo store the account SMTP password, use the keystore command\n(see {ref}/secure-settings.html[secure settings])\n\n[source,yaml]\n--------------------------------------------------\nbin/elasticsearch-keystore add xpack.notification.email.account.gmail_account.smtp.secure_password\n--------------------------------------------------\n\nIf you get an authentication error that indicates that you need to continue the\nsign-in process from a web browser when {watcher} attempts to send email, you need\nto configure Gmail to https://support.google.com/accounts/answer/6010255?hl=en[Allow\nLess Secure Apps to access your account].\n\nIf two-step verification is enabled for your account, you must generate and use\na unique App Password to send email from {watcher}. See\nhttps://support.google.com/accounts/answer/185833?hl=en[Sign in using App Passwords]\nfor more information.\n\n[discrete]\n[[outlook]]\n===== Sending email from Outlook.com\n\nUse the following email account settings to send email action from the\nhttps://www.outlook.com/[Outlook.com] SMTP service:\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.account:\n    outlook_account:\n        profile: outlook\n        smtp:\n            auth: true\n            starttls.enable: true\n            host: smtp-mail.outlook.com\n            port: 587\n            user: <email.address>\n--------------------------------------------------\n\nTo store the account SMTP password, use the keystore command\n(see {ref}/secure-settings.html[secure settings])\n\n[source,yaml]\n--------------------------------------------------\nbin/elasticsearch-keystore add xpack.notification.email.account.outlook_account.smtp.secure_password\n--------------------------------------------------\n\n\nWhen sending emails, you have to provide a from address, either a default one\nin your account configuration or as part of the email action in the watch.\n\nNOTE:   You need to use a unique App Password if two-step verification is enabled.\n        See http://windows.microsoft.com/en-us/windows/app-passwords-two-step-verification[App\n        passwords and two-step verification] for more information.\n\n[discrete]\n[[amazon-ses]]\n===== Sending email from Amazon SES (Simple Email Service)\n\nUse the following email account settings to send email from the\nhttp://aws.amazon.com/ses[Amazon Simple Email Service] (SES) SMTP service:\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.account:\n    ses_account:\n        email_defaults:\n            from: <email address of service account> <1>\n        smtp:\n            auth: true\n            starttls.enable: true\n            starttls.required: true\n            host: email-smtp.us-east-1.amazonaws.com <2>\n            port: 587\n            user: <username>\n--------------------------------------------------\n<1> In certain cases `email_defaults.from` is validated by Amazon SES to ensure\nthat it is a valid local email account.\n<2> `smtp.host` varies depending on the region.\n\nTo store the account SMTP password, use the keystore command\n(see {ref}/secure-settings.html[secure settings])\n\n[source,yaml]\n--------------------------------------------------\nbin/elasticsearch-keystore add xpack.notification.email.account.ses_account.smtp.secure_password\n--------------------------------------------------\n\nNOTE:   You need to use your Amazon SES SMTP credentials to send email through\n        Amazon SES. For more information, see\n        http://docs.aws.amazon.com/ses/latest/DeveloperGuide/smtp-credentials.html[Obtaining\n        Your Amazon SES SMTP Credentials]. You might also need to verify\n        https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-email-addresses.html[your email address]\n        or https://docs.aws.amazon.com/ses/latest/DeveloperGuide/verify-domains.html[your whole domain]\n        at AWS.\n\n[discrete]\n[[exchange]]\n===== Sending email from Microsoft Exchange\n\nUse the following email account settings to send email action from Microsoft\nExchange:\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.account:\n    exchange_account:\n        profile: outlook\n        email_defaults:\n            from: <email address of service account> <1>\n        smtp:\n            auth: true\n            starttls.enable: true\n            host: <your exchange server>\n            port: 587\n            user: <email address of service account> <2>\n--------------------------------------------------\n<1> Some organizations configure Exchange to validate that the `from` field is a\n    valid local email account.\n<2> Many organizations support use of your email address as your username, though\n    it is a good idea to check with your system administrator if you receive\n    authentication-related failures.\n\nTo store the account SMTP password, use the keystore command\n(see {ref}/secure-settings.html[secure settings])\n\n[source,yaml]\n--------------------------------------------------\nbin/elasticsearch-keystore add xpack.notification.email.account.exchange_account.smtp.secure_password\n--------------------------------------------------\n\n[discrete]\n[[email-html-sanitization]]\n===== Configuring HTML sanitization options\n\nThe `email` action supports sending messages with an HTML body. However, for\nsecurity reasons, {watcher} {wikipedia}/HTML_sanitization[sanitizes]\nthe HTML.\n\nYou can control which HTML features are allowed or disallowed by configuring the\n`xpack.notification.email.html.sanitization.allow` and\n`xpack.notification.email.html.sanitization.disallow` settings in\n`elasticsearch.yml`. You can specify individual HTML elements and\n{ref}/notification-settings.html#html-feature-groups[HTML feature groups]. By default, {watcher} allows the following\nfeatures: `body`, `head`, `_tables`, `_links`, `_blocks`, `_formatting` and\n`img:embedded`.\n\nFor example, the following settings allow the HTML to contain tables and block\nelements, but disallow  `<h4>`, `<h5>` and `<h6>` tags.\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.html.sanitization:\n    allow: _tables, _blocks\n    disallow: h4, h5, h6\n--------------------------------------------------\n\nTo disable sanitization entirely, add the following setting to\n`elasticsearch.yml`:\n\n[source,yaml]\n--------------------------------------------------\nxpack.notification.email.html.sanitization.enabled: false\n--------------------------------------------------\n"
}