{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.796067",
        "size": 1327,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/null-value.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "null-value",
        "version": "8.15"
    },
    "doc": "[[null-value]]\n=== `null_value`\n\nA `null` value cannot be indexed or searched. When a field is set to `null`,\n(or an empty array or an array of `null` values)  it is treated as though that\nfield has no values.\n\nThe `null_value` parameter allows you to replace explicit `null` values with\nthe specified value so that it can be indexed and searched. For instance:\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\": {\n    \"properties\": {\n      \"status_code\": {\n        \"type\":       \"keyword\",\n        \"null_value\": \"NULL\" <1>\n      }\n    }\n  }\n}\n\nPUT my-index-000001/_doc/1\n{\n  \"status_code\": null\n}\n\nPUT my-index-000001/_doc/2\n{\n  \"status_code\": [] <2>\n}\n\nGET my-index-000001/_search\n{\n  \"query\": {\n    \"term\": {\n      \"status_code\": \"NULL\" <3>\n    }\n  }\n}\n--------------------------------------------------\n\n<1> Replace explicit `null` values with the term `NULL`.\n<2> An empty array does not contain an explicit `null`, and so won't be replaced with the `null_value`.\n<3> A query for `NULL` returns document 1, but not document 2.\n\nIMPORTANT: The `null_value` needs to be the same data type as the field. For\ninstance, a `long` field cannot have a string `null_value`.\n\nNOTE: The `null_value` only influences how data is indexed, it doesn't modify\nthe `_source` document.\n"
}