{
    "meta": {
        "size": 1424,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/painless-statements.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "painless-statements",
        "version": "8.15"
    },
    "doc": "[[painless-statements]]\n=== Statements\n\nPainless supports all of Java's https://docs.oracle.com/javase/tutorial/java/nutsandbolts/flow.html[\ncontrol flow statements] except the `switch` statement.\n\n==== Conditional statements\n\n===== If / Else\n\n[source,painless]\n---------------------------------------------------------\nif (doc[item].size() == 0) {\n  // do something if \"item\" is missing\n} else if (doc[item].value == 'something') {\n  // do something if \"item\" value is: something\n} else {\n  // do something else\n}\n---------------------------------------------------------\n\n==== Loop statements\n\n===== For\n\nPainless also supports the `for in` syntax:\n\n[source,painless]\n---------------------------------------------------------\nfor (def item : list) {\n  // do something\n}\n---------------------------------------------------------\n\n[source,painless]\n---------------------------------------------------------\nfor (item in list) {\n  // do something\n}\n---------------------------------------------------------\n\n===== While\n[source,painless]\n---------------------------------------------------------\nwhile (ctx._source.item < condition) {\n  // do something\n}\n---------------------------------------------------------\n\n===== Do-While\n[source,painless]\n---------------------------------------------------------\ndo {\n  // do something\n}\nwhile (ctx._source.item < condition)\n---------------------------------------------------------\n"
}