{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.030584",
        "size": 3976,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analyzer.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analyzer",
        "version": "8.15"
    },
    "doc": "[[analyzer]]\n=== `analyzer`\n\n[IMPORTANT]\n====\nOnly <<text,`text`>> fields support the `analyzer` mapping parameter.\n====\n\nThe `analyzer` parameter specifies the <<analyzer-anatomy,analyzer>> used for\n<<analysis,text analysis>> when indexing or searching a `text` field.\n\nUnless overridden with the <<search-analyzer,`search_analyzer`>> mapping\nparameter, this analyzer is used for both <<analysis-index-search-time,index and\nsearch analysis>>. See <<specify-analyzer>>.\n\n[TIP]\n====\nWe recommend testing analyzers before using them in production. See\n<<test-analyzer>>.\n====\n\nTIP: The `analyzer` setting can *not* be updated on existing fields\nusing the <<indices-put-mapping,update mapping API>>.\n\n[[search-quote-analyzer]]\n==== `search_quote_analyzer`\n\nThe `search_quote_analyzer` setting allows you to specify an analyzer for phrases, this is particularly useful when dealing with disabling\nstop words for phrase queries.\n\nTo disable stop words for phrases a field utilising three analyzer settings will be required:\n\n1. An `analyzer` setting for indexing all terms including stop words\n2. A `search_analyzer` setting for non-phrase queries that will remove stop words\n3. A `search_quote_analyzer` setting for phrase queries that will not remove stop words\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n   \"settings\":{\n      \"analysis\":{\n         \"analyzer\":{\n            \"my_analyzer\":{ <1>\n               \"type\":\"custom\",\n               \"tokenizer\":\"standard\",\n               \"filter\":[\n                  \"lowercase\"\n               ]\n            },\n            \"my_stop_analyzer\":{ <2>\n               \"type\":\"custom\",\n               \"tokenizer\":\"standard\",\n               \"filter\":[\n                  \"lowercase\",\n                  \"english_stop\"\n               ]\n            }\n         },\n         \"filter\":{\n            \"english_stop\":{\n               \"type\":\"stop\",\n               \"stopwords\":\"_english_\"\n            }\n         }\n      }\n   },\n   \"mappings\":{\n       \"properties\":{\n          \"title\": {\n             \"type\":\"text\",\n             \"analyzer\":\"my_analyzer\", <3>\n             \"search_analyzer\":\"my_stop_analyzer\", <4>\n             \"search_quote_analyzer\":\"my_analyzer\" <5>\n         }\n      }\n   }\n}\n\nPUT my-index-000001/_doc/1\n{\n   \"title\":\"The Quick Brown Fox\"\n}\n\nPUT my-index-000001/_doc/2\n{\n   \"title\":\"A Quick Brown Fox\"\n}\n\nGET my-index-000001/_search\n{\n   \"query\":{\n      \"query_string\":{\n         \"query\":\"\\\"the quick brown fox\\\"\" <6>\n      }\n   }\n}\n--------------------------------------------------\n\nTIP: The `search_quote_analyzer` setting can be updated on existing fields\nusing the <<indices-put-mapping,update mapping API>>.\n\n<1> `my_analyzer` analyzer which tokens all terms including stop words\n<2> `my_stop_analyzer` analyzer which removes stop words\n<3> `analyzer` setting that points to the `my_analyzer` analyzer which will be used at index time\n<4> `search_analyzer` setting that points to the `my_stop_analyzer` and removes stop words for non-phrase queries\n<5> `search_quote_analyzer` setting that points to the `my_analyzer` analyzer and ensures that stop words are not removed from phrase queries\n<6> Since the query is wrapped in quotes it is detected as a phrase query therefore the `search_quote_analyzer` kicks in and ensures the stop words\nare not removed from the query. The `my_analyzer` analyzer will then return the following tokens [`the`, `quick`, `brown`, `fox`] which will match one\nof the documents. Meanwhile term queries will be analyzed with the `my_stop_analyzer` analyzer which will filter out stop words. So a search for either\n`The quick brown fox` or `A quick brown fox` will return both documents since both documents contain the following tokens [`quick`, `brown`, `fox`].\nWithout the `search_quote_analyzer` it would not be possible to do exact matches for phrase queries as the stop words from phrase queries would be\nremoved resulting in both documents matching.\n"
}