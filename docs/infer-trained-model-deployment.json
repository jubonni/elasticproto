{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.796579",
        "size": 5471,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/infer-trained-model-deployment.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "infer-trained-model-deployment",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[infer-trained-model-deployment]]\n= Infer trained model deployment API\n[subs=\"attributes\"]\n++++\n<titleabbrev>Infer trained model deployment</titleabbrev>\n++++\n\nEvaluates a trained model.\n\ndeprecated::[8.3.0,Replaced by <<infer-trained-model>>.]\n\n[[infer-trained-model-deployment-request]]\n== {api-request-title}\n\n`POST _ml/trained_models/<model_id>/deployment/_infer`\n\n////\n[[infer-trained-model-deployment-prereq]]\n== {api-prereq-title}\n\n////\n////\n[[infer-trained-model-deployment-desc]]\n== {api-description-title}\n\n////\n\n[[infer-trained-model-deployment-path-params]]\n== {api-path-parms-title}\n\n`<model_id>`::\n(Required, string)\ninclude::{es-ref-dir}/ml/ml-shared.asciidoc[tag=model-id-or-alias]\n\n[[infer-trained-model-deployment-query-params]]\n== {api-query-parms-title}\n\n`timeout`::\n(Optional, time)\nControls the amount of time to wait for {infer} results. Defaults to 10 seconds.\n\n[[infer-trained-model-deployment-request-body]]\n== {api-request-body-title}\n\n`docs`::\n(Required, array)\nAn array of objects to pass to the model for inference. The objects should\ncontain a field matching your configured trained model input. Typically, the\nfield name is `text_field`.\n\n////\n[[infer-trained-model-deployment-results]]\n== {api-response-body-title}\n////\n////\n[[ml-get-trained-models-response-codes]]\n== {api-response-codes-title}\n\n////\n\n[[infer-trained-model-deployment-example]]\n== {api-examples-title}\n\nThe response depends on the task the model is trained for. If it is a text\nclassification task, the response is the score. For example:\n\n[source,console]\n--------------------------------------------------\nPOST _ml/trained_models/model2/deployment/_infer\n{\n\t\"docs\": [{\"text_field\": \"The movie was awesome!!\"}]\n}\n--------------------------------------------------\n// TEST[skip:TBD]\n\nThe API returns the predicted label and the confidence.\n\n[source,console-result]\n----\n{\n  \"predicted_value\" : \"POSITIVE\",\n  \"prediction_probability\" : 0.9998667964092964\n}\n----\n// NOTCONSOLE\n\nFor named entity recognition (NER) tasks, the response contains the annotated\ntext output and the recognized entities.\n\n[source,console]\n--------------------------------------------------\nPOST _ml/trained_models/model2/deployment/_infer\n{\n\t\"docs\": [{\"text_field\": \"Hi my name is Josh and I live in Berlin\"}]\n}\n--------------------------------------------------\n// TEST[skip:TBD]\n\nThe API returns in this case:\n\n[source,console-result]\n----\n{\n  \"predicted_value\" : \"Hi my name is [Josh](PER&Josh) and I live in [Berlin](LOC&Berlin)\",\n  \"entities\" : [\n    {\n      \"entity\" : \"Josh\",\n      \"class_name\" : \"PER\",\n      \"class_probability\" : 0.9977303419824,\n      \"start_pos\" : 14,\n      \"end_pos\" : 18\n    },\n    {\n      \"entity\" : \"Berlin\",\n      \"class_name\" : \"LOC\",\n      \"class_probability\" : 0.9992474323902818,\n      \"start_pos\" : 33,\n      \"end_pos\" : 39\n    }\n  ]\n}\n----\n// NOTCONSOLE\n\nZero-shot classification tasks require extra configuration defining the class\nlabels. These labels are passed in the zero-shot inference config.\n\n[source,console]\n--------------------------------------------------\nPOST _ml/trained_models/model2/deployment/_infer\n{\n  \"docs\": [\n    {\n      \"text_field\": \"This is a very happy person\"\n    }\n  ],\n  \"inference_config\": {\n    \"zero_shot_classification\": {\n      \"labels\": [\n        \"glad\",\n        \"sad\",\n        \"bad\",\n        \"rad\"\n      ],\n      \"multi_label\": false\n    }\n  }\n}\n--------------------------------------------------\n// TEST[skip:TBD]\n\nThe API returns the predicted label and the confidence, as well as the top\nclasses:\n\n[source,console-result]\n----\n{\n  \"predicted_value\" : \"glad\",\n  \"top_classes\" : [\n    {\n      \"class_name\" : \"glad\",\n      \"class_probability\" : 0.8061155063386439,\n      \"class_score\" : 0.8061155063386439\n    },\n    {\n      \"class_name\" : \"rad\",\n      \"class_probability\" : 0.18218006158387956,\n      \"class_score\" : 0.18218006158387956\n    },\n    {\n      \"class_name\" : \"bad\",\n      \"class_probability\" : 0.006325615787634201,\n      \"class_score\" : 0.006325615787634201\n    },\n    {\n      \"class_name\" : \"sad\",\n      \"class_probability\" : 0.0053788162898424545,\n      \"class_score\" : 0.0053788162898424545\n    }\n  ],\n  \"prediction_probability\" : 0.8061155063386439\n}\n----\n// NOTCONSOLE\n\n\nThe tokenization truncate option can be overridden when calling the API:\n\n[source,console]\n--------------------------------------------------\nPOST _ml/trained_models/model2/deployment/_infer\n{\n  \"docs\": [{\"text_field\": \"The Amazon rainforest covers most of the Amazon basin in South America\"}],\n  \"inference_config\": {\n    \"ner\": {\n      \"tokenization\": {\n        \"bert\": {\n          \"truncate\": \"first\"\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[skip:TBD]\n\nWhen the input has been truncated due to the limit imposed by the model's\n`max_sequence_length` the `is_truncated` field appears in the response.\n\n[source,console-result]\n----\n{\n  \"predicted_value\" : \"The [Amazon](LOC&Amazon) rainforest covers most of the [Amazon](LOC&Amazon) basin in [South America](LOC&South+America)\",\n  \"entities\" : [\n    {\n      \"entity\" : \"Amazon\",\n      \"class_name\" : \"LOC\",\n      \"class_probability\" : 0.9505460915724254,\n      \"start_pos\" : 4,\n      \"end_pos\" : 10\n    },\n    {\n      \"entity\" : \"Amazon\",\n      \"class_name\" : \"LOC\",\n      \"class_probability\" : 0.9969992804311777,\n      \"start_pos\" : 41,\n      \"end_pos\" : 47\n    }\n  ],\n  \"is_truncated\" : true\n}\n----\n// NOTCONSOLE\n"
}