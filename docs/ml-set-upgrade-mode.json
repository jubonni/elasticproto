{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.408067",
        "size": 3191,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ml-set-upgrade-mode.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ml-set-upgrade-mode",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ml-set-upgrade-mode]]\n= Set upgrade mode API\n++++\n<titleabbrev>Set upgrade mode</titleabbrev>\n++++\n\nSets a cluster wide upgrade_mode setting that prepares {ml} indices for an\nupgrade. \n\n[[ml-set-upgrade-mode-request]]\n== {api-request-title}\n//////////////////////////\n\n[source,console]\n--------------------------------------------------\nPOST /_ml/set_upgrade_mode?enabled=false&timeout=10m\n--------------------------------------------------\n// TEARDOWN\n\n//////////////////////////\n\n\n`POST _ml/set_upgrade_mode`\n\n[[ml-set-upgrade-mode-prereqs]]\n== {api-prereq-title}\n\nRequires the `manage_ml` cluster privilege. This privilege is included in the \n`machine_learning_admin` built-in role.\n\n[[ml-set-upgrade-mode-desc]]\n== {api-description-title}\n\nWhen upgrading your cluster, in some circumstances you must restart your nodes and\nreindex your {ml} indices. In those circumstances, there must be no {ml} jobs running. \nYou can close the {ml} jobs, do the upgrade, then open all the jobs again. \nAlternatively, you can use this API to temporarily halt tasks associated \nwith the jobs and {dfeeds} and prevent new jobs from opening. You can also use this \nAPI during upgrades that do not require you to reindex your {ml} indices, \nthough stopping jobs is not a requirement in that case.\n\nFor more information, see {stack-ref}/upgrading-elastic-stack.html[Upgrading the {stack}].\n\nWhen `enabled=true` this API temporarily halts all job and {dfeed} tasks and\nprohibits new job and {dfeed} tasks from starting.\n\nSubsequently, you can call the API with the enabled parameter set to false,\nwhich causes {ml} jobs and {dfeeds} to return to their desired states.\n\nYou can see the current value for the `upgrade_mode` setting by using the\n<<get-ml-info,get {ml} info API>>.\n\nIMPORTANT:  No new {ml} jobs can be opened while the `upgrade_mode` setting is\n`true`.\n\n[[ml-set-upgrade-mode-query-parms]]\n== {api-query-parms-title}\n\n`enabled`::\n  (Optional, Boolean) When `true`, this enables `upgrade_mode`. Defaults to\n  `false`.\n\n`timeout`::\n  (Optional, time) The time to wait for the request to be completed. The default\n  value is 30 seconds.\n\n[[ml-set-upgrade-mode-example]]\n== {api-examples-title}\n\nThe following example enables `upgrade_mode` for the cluster:\n\n[source,console]\n--------------------------------------------------\nPOST _ml/set_upgrade_mode?enabled=true&timeout=10m\n--------------------------------------------------\n\nWhen the call is successful, an acknowledged response is returned. For example:\n\n[source,console-result]\n----\n{\n  \"acknowledged\": true\n}\n----\n\nThe acknowledged response will only be returned once all {ml} jobs and {dfeeds} have\nfinished writing to the {ml} internal indices. This means it is safe to reindex those\ninternal indices without causing failures. You must wait for the acknowledged\nresponse before reindexing to ensure that all writes are completed.\n\nWhen the upgrade is complete, you must set `upgrade_mode` to `false` for\n{ml} jobs to start running again. For example:\n\n[source,console]\n--------------------------------------------------\nPOST _ml/set_upgrade_mode?enabled=false&timeout=10m\n--------------------------------------------------\n"
}