{
    "meta": {
        "size": 11113,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/get-snapshot-status-api.html",
        "type": "documentation",
        "role": [
            "child_attributes",
            "child_attributes"
        ],
        "has_code": false,
        "title": "get-snapshot-status-api",
        "version": "8.15"
    },
    "doc": "[[get-snapshot-status-api]]\n=== Get snapshot status API\n++++\n<titleabbrev>Get snapshot status</titleabbrev>\n++++\n\nRetrieves a detailed description of the current state for each shard participating in the snapshot. Note that this API should only be used to obtain detailed shard-level information for ongoing snapshots. If this detail is not needed, or you want to obtain information about one or more existing snapshots, use the <<get-snapshot-api,get snapshot API>>.\n\n////\n[source,console]\n----\nPUT /index_1\n\nPUT /index_1/_doc/1\n{\n  \"title\": \"Elastic, Vol.1\", \"category\": \"Non-Fiction\",\n  \"author\": {\n    \"first_name\": \"Elk\",\n    \"last_name\": \"Stack\"\n  }\n}\n\nPUT /index_1/_doc/2\n{\n  \"title\": \"Elastic, Vol.2\", \"category\": \"Non-Fiction\",\n  \"author\": {\n    \"first_name\": \"Elk\",\n    \"last_name\": \"Stack\"\n  }\n}\n\nPUT /index_1/_doc/3\n{\n  \"title\": \"Elastic, Vol.3\", \"category\": \"Non-Fiction\",\n  \"author\": {\n    \"first_name\": \"Elk\",\n    \"last_name\": \"Stack\"\n  }\n}\n\nPUT /index_1/_doc/4\n{\n  \"title\": \"Elastic, Vol.4\", \"category\": \"Non-Fiction\",\n  \"author\": {\n    \"first_name\": \"Elk\",\n    \"last_name\": \"Stack\"\n  }\n}\n\nPUT /_snapshot/my_repository\n{\n  \"type\": \"fs\",\n  \"settings\": {\n    \"location\": \"my_backup_location\"\n  }\n}\n\nPUT /_snapshot/my_repository/my_snapshot?wait_for_completion=true\n\nPUT _snapshot/my_repository/snapshot_2?wait_for_completion=true\n{\n  \"indices\": [\"index_1\"],\n  \"ignore_unavailable\": true,\n  \"include_global_state\": false,\n  \"metadata\": {\n    \"taken_by\": \"Elastic Machine\",\n    \"taken_because\": \"backup testing\"\n  }\n}\n----\n// TESTSETUP\n////\n\n[source,console]\n----\nGET _snapshot/_status\n----\n\n[[get-snapshot-status-api-request]]\n==== {api-request-title}\n\n`GET _snapshot/_status`\n\n`GET _snapshot/<repository>/_status`\n\n`GET _snapshot/<repository>/<snapshot>/_status`\n\n[[get-snapshot-status-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`monitor_snapshot`, `create_snapshot`, or `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[get-snapshot-status-api-desc]]\n==== {api-description-title}\n\nUse the get snapshot status API to get detailed information about the shards\nparticipating in a snapshot.\n\nIf you omit the `<snapshot>` request path parameter, the request only retrieves\ninformation for currently running snapshots. This usage is preferred.\n\nIf needed, you can specify `<repository>` and `<snapshot>` to retrieve\ninformation for specific snapshots, even if they're not currently running.\n\n[WARNING]\n====\nUsing the API to return the status of any snapshots other than currently running\nsnapshots can be expensive. The API requires a read from the repository for each\nshard in each snapshot. For example, if you have 100 snapshots with 1,000 shards\neach, an API request that includes all snapshots will require 100,000 reads (100\nsnapshots * 1,000 shards).\n\nDepending on the latency of your storage, such requests can take an extremely\nlong time to return results. These requests can also tax machine resources\nand, when using cloud storage, incur high processing costs.\n====\n\n[[get-snapshot-status-api-path-params]]\n==== {api-path-parms-title}\n\n`<repository>`::\n(Optional, string)\nSnapshot repository name used to limit the request. Supports wildcards (`*`) if\n`<snapshot>` isn't specified.\n\n`<snapshot>`::\n(Optional, string)\nComma-separated list of snapshots to retrieve status for. Defaults to\ncurrently running snapshots. Wildcards (`*`) are not supported.\n\n[role=\"child_attributes\"]\n[[get-snapshot-status-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\n`ignore_unavailable`::\n(Optional, Boolean)\nIf `false`, the request returns an error for any snapshots that are unavailable. Defaults to `false`.\n+\nIf `true`, the request ignores snapshots that are unavailable, such as those that are corrupted or temporarily cannot be returned.\n\n[role=\"child_attributes\"]\n[[get-snapshot-status-api-response-body]]\n==== {api-response-body-title}\n`repository`::\n(string)\nName of the repository that includes the snapshot.\n\n`snapshot`::\n(string)\nName of the snapshot.\n\n`uuid`::\n(string)\nUniversally unique identifier (UUID) of the snapshot.\n\n`state`::\n+\n--\n(string)\nIndicates the current snapshot state.\n\n.Values for `state`\n[%collapsible%open]\n====\n`FAILED`::\n  The snapshot finished with an error and failed to store any data.\n\n`STARTED`::\n  The snapshot is currently running.\n\n`SUCCESS`::\n  The snapshot completed.\n====\n--\n\n`include_global_state`::\n(Boolean)\nIndicates whether the current cluster state is included in the snapshot.\n\n[[get-snapshot-status-shards-stats]]\n`shards_stats`::\n(object)\nContains a count of shards in the snapshot.\n+\n.Properties of `shards_stats`\n[%collapsible%open]\n====\n`initializing`::\n(integer)\nNumber of shards that are still initializing.\n\n`started`::\n(integer)\nNumber of shards that have started but are not finalized.\n\n`finalizing`::\n(integer)\nNumber of shards that are finalizing but are not done.\n\n`done`::\n(integer)\nNumber of shards that initialized, started, and finalized successfully.\n\n`failed`::\n(integer)\nNumber of shards that failed to be included in the snapshot.\n\n`total`::\n(integer)\nTotal number of shards included in the snapshot.\n====\n\n[[get-snapshot-status-stats]]\n`stats`::\n(object)\nProvides details on the number (`file_count`) and size (`size_in_bytes`) of files included in the snapshot.\n+\n.Properties of `stats`\n[%collapsible%open]\n====\n`incremental`::\n(object)\nNumber and size of files that still need to be copied as part of the incremental snapshot.\n+\nFor completed snapshots, this property indicates the number and size\nof files that were not already in the repository and were copied as\npart of the incremental snapshot.\n\n`processed`::\n(object)\nNumber and size of files that have already been uploaded to the snapshot. After a file is uploaded, the processed `file_count` and `size_in_bytes` are incremented in `stats`.\n\n`total`::\n(object)\nTotal number and size of files that are referenced by the snapshot.\n\n[[get-snapshot-status-start-time]]\n`start_time_in_millis`::\n(long)\nThe time, in milliseconds, when the snapshot creation process started.\n\n[[get-snapshot-status-total-time]]\n`time_in_millis`::\n(long)\nThe total time, in milliseconds, that it took for the snapshot process\nto complete.\n====\n\n`<index>`::\n(list of objects)\nList of objects containing information about the\nindices included in the snapshot.\n+\n.Properties of `<index>`\n[%collapsible%open]\n====\n`shards_stats`::\n(object)\nSee <<get-snapshot-status-shards-stats,`shards_stats`>>.\n\n`stats`::\n(object)\nSee <<get-snapshot-status-stats,`stats`>>.\n\n`shards`::\n(list of objects)\nList of objects containing information about the\nshards that include the snapshot.\n+\n.Properties of `shards`\n[%collapsible%open]\n=====\n`stage`::\n(string)\nIndicates the current state of the shards that include the snapshot.\n+\n.Properties of `stage`\n[%collapsible%open]\n======\n`DONE`::\nNumber of shards in the snapshot that were successfully stored in the repository.\n\n`FAILURE`::\nNumber of shards in the snapshot that were not successfully stored in\nthe repository.\n\n`FINALIZE`::\nNumber of shards in the snapshot that are in the finalizing stage\nof being stored in the repository.\n\n`INIT`::\nNumber of shards in the snapshot that are in the initializing stage\nof being stored in the repository.\n\n`STARTED`::\nNumber of shards in the snapshot that are in the started stage\nof being stored in the repository.\n======\n`stats`::\n(object)\nSee <<get-snapshot-status-stats,`stats`>>.\n\n`total`::\n(object)\nTotal number and size of files that are referenced by the snapshot.\n\n`start_time_in_millis`::\n(long)\nSee <<get-snapshot-status-start-time,`start_time_in_millis`>>.\n\n`time_in_millis`::\n(long)\nSee <<get-snapshot-status-total-time,`time_in_millis`>>.\n=====\n====\n\n[[get-snapshot-status-api-example]]\n==== {api-example-title}\n\nThe following request returns detailed status information for `snapshot_2` in the `my_repository` repository. This response includes additional information beyond the <<get-snapshot-api,Get snapshot API>>, such as shard status and file statistics.\n\n[source,console]\n----\nGET _snapshot/my_repository/snapshot_2/_status\n----\n\n[source,console-result]\n----\n{\n  \"snapshots\" : [\n    {\n      \"snapshot\" : \"snapshot_2\",\n      \"repository\" : \"my_repository\",\n      \"uuid\" : \"lNeQD1SvTQCqqJUMQSwmGg\",\n      \"state\" : \"SUCCESS\",\n      \"include_global_state\" : false,\n      \"shards_stats\" : {\n        \"initializing\" : 0,\n        \"started\" : 0,\n        \"finalizing\" : 0,\n        \"done\" : 1,\n        \"failed\" : 0,\n        \"total\" : 1\n      },\n      \"stats\" : {\n        \"incremental\" : {\n          \"file_count\" : 3,\n          \"size_in_bytes\" : 5969\n        },\n        \"total\" : {\n          \"file_count\" : 4,\n          \"size_in_bytes\" : 6024\n        },\n        \"start_time_in_millis\" : 1594829326691,\n        \"time_in_millis\" : 205\n      },\n      \"indices\" : {\n        \"index_1\" : {\n          \"shards_stats\" : {\n            \"initializing\" : 0,\n            \"started\" : 0,\n            \"finalizing\" : 0,\n            \"done\" : 1,\n            \"failed\" : 0,\n            \"total\" : 1\n          },\n          \"stats\" : {\n            \"incremental\" : {\n              \"file_count\" : 3,\n              \"size_in_bytes\" : 5969\n            },\n            \"total\" : {\n              \"file_count\" : 4,\n              \"size_in_bytes\" : 6024\n            },\n            \"start_time_in_millis\" : 1594829326896,\n            \"time_in_millis\" : 0\n          },\n          \"shards\" : {\n            \"0\" : {\n              \"stage\" : \"DONE\",\n              \"stats\" : {\n                \"incremental\" : {\n                  \"file_count\" : 3,\n                  \"size_in_bytes\" : 5969\n                },\n                \"total\" : {\n                  \"file_count\" : 4,\n                  \"size_in_bytes\" : 6024\n                },\n                \"start_time_in_millis\" : 1594829326896,\n                \"time_in_millis\" : 0\n              }\n            }\n          }\n        }\n      }\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"uuid\" : \"lNeQD1SvTQCqqJUMQSwmGg\"/\"uuid\" : $body.snapshots.0.uuid/]\n// TESTRESPONSE[s/\"size_in_bytes\" : 6024/\"size_in_bytes\" : $body.snapshots.0.stats.total.size_in_bytes/]\n// TESTRESPONSE[s/\"done\" : 10/\"done\" : $body.snapshots.0.shards_stats.done/]\n// TESTRESPONSE[s/\"total\" : 10/\"total\" : $body.snapshots.0.shards_stats.total/]\n// TESTRESPONSE[s/\"start_time_in_millis\" : 1594829326691/\"start_time_in_millis\" : $body.snapshots.0.stats.start_time_in_millis/]\n// TESTRESPONSE[s/\"time_in_millis\" : 205/\"time_in_millis\" : $body.snapshots.0.stats.time_in_millis/]\n// TESTRESPONSE[s/\"time_in_millis\" : 0/\"time_in_millis\" : $body.$_path/]\n// TESTRESPONSE[s/\"file_count\" : 3/\"file_count\" : $body.snapshots.0.stats.incremental.file_count/]\n// TESTRESPONSE[s/\"file_count\" : 4/\"file_count\" : $body.snapshots.0.stats.total.file_count/]\n// TESTRESPONSE[s/\"size_in_bytes\" : 5969/\"size_in_bytes\" : $body.snapshots.0.stats.incremental.size_in_bytes/]\n// TESTRESPONSE[s/\"start_time_in_millis\" : 1594829326896/\"start_time_in_millis\" : $body.snapshots.0.indices.index_1.stats.start_time_in_millis/]\n"
}