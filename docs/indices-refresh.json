{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.076067",
        "size": 3002,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-refresh.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "indices-refresh",
        "version": "8.15"
    },
    "doc": "[[indices-refresh]]\n=== Refresh API\n++++\n<titleabbrev>Refresh</titleabbrev>\n++++\n\nA refresh makes recent operations performed on one or more indices available for\nsearch. For data streams, the API runs the refresh operation on the stream's\nbacking indices. For more information about the refresh operation, see\n<<near-real-time>>.\n\n[source,console]\n----\nPOST /my-index-000001/_refresh\n----\n// TEST[setup:my_index]\n\n\n[[refresh-api-request]]\n==== {api-request-title}\n\n`POST <target>/_refresh`\n\n`GET <target>/_refresh`\n\n`POST /_refresh`\n\n`GET /_refresh`\n\n[[refresh-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `maintenance`\nor `manage` <<privileges-list-indices,index privilege>> for the target data\nstream, index, or alias.\n\n[[refresh-api-desc]]\n==== {api-description-title}\n\nUse the refresh API to explicitly make all operations performed on one or more\nindices since the last refresh available for search.\nIf the request targets a data stream, it refreshes the stream's backing indices.\n\n// tag::refresh-interval-default[]\nBy default, Elasticsearch periodically refreshes indices every second, but only on\nindices that have received one search request or more in the last 30 seconds.\n// end::refresh-interval-default[]\nYou can change this default interval\nusing the <<index-refresh-interval-setting,`index.refresh_interval`>> setting.\n\nRefresh requests are synchronous and do not return a response until the\nrefresh operation completes.\n\n[IMPORTANT]\n====\nRefreshes are resource-intensive.\nTo ensure good cluster performance,\nwe recommend waiting for {es}'s periodic refresh\nrather than performing an explicit refresh\nwhen possible.\n\nIf your application workflow\nindexes documents and then runs a search\nto retrieve the indexed document,\nwe recommend using the <<docs-index_,index API>>'s\n`refresh=wait_for` query parameter option.\nThis option ensures the indexing operation waits\nfor a periodic refresh\nbefore running the search.\n====\n\n[[refresh-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Optional, string)\nComma-separated list of data streams, indices, and aliases used to limit\nthe request. Supports wildcards (`*`). To target all data streams and indices,\nomit this parameter or use `*` or `_all`.\n\n[[refresh-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+\nDefaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n+\nDefaults to `open`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n\n\n[[refresh-api-example]]\n==== {api-examples-title}\n\n\n[[refresh-api-multiple-ex]]\n===== Refresh several data streams and indices\n\n[source,console]\n----\nPOST /my-index-000001,my-index-000002/_refresh\n----\n// TEST[s/^/PUT my-index-000001\\nPUT my-index-000002\\n/]\n\n\n[[refresh-api-all-ex]]\n===== Refresh all data streams and indices in a cluster\n\n[source,console]\n----\nPOST /_refresh\n----\n"
}