{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.739580",
        "size": 3549,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-migrate.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "ilm-migrate",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-migrate]]\n=== Migrate\n\nPhases allowed: warm, cold.\n\nMoves the index to the <<data-tiers, data tier>> that corresponds\nto the current phase by updating the <<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>\nindex setting.\n{ilm-init} automatically injects the migrate action in the warm and cold\nphases. To prevent automatic migration, you\ncan explicitly include the migrate action and set the enabled option to\n`false`.\n\nIf the `cold` phase defines a <<ilm-searchable-snapshot, searchable snapshot action>> the `migrate`\naction will not be injected automatically in the `cold` phase because the managed index will be\nmounted directly on the target tier using the same <<tier-preference-allocation-filter, _tier_preference>>\ninfrastructure the `migrate` actions configures.\n\nIn the warm phase, the `migrate` action sets <<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>\nto `data_warm,data_hot`. This moves the index to nodes in the\n<<warm-tier, warm tier>>. If there are no nodes in the warm tier,  it falls back to the\n<<hot-tier, hot tier>>.\n\nIn the cold phase, the `migrate` action sets\n<<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>\nto `data_cold,data_warm,data_hot`. This moves the index to nodes in the\n<<cold-tier, cold tier>>. If there are no nodes in the cold tier, it falls back to the\n<<warm-tier, warm>> tier, or the <<hot-tier, hot>> tier if there are no warm nodes available.\n\nThe migrate action is not allowed in the frozen phase. The frozen phase directly\nmounts the searchable snapshot using a\n<<tier-preference-allocation-filter, `index.routing.allocation.include._tier_preference`>>\nof `data_frozen`. This moves the index to nodes in the\n<<frozen-tier, frozen tier>>.\n\nThe migrate action is not allowed in the hot phase.\nThe initial index allocation is performed <<data-tier-allocation, automatically>>,\nand can be configured manually or via <<index-templates, index templates>>.\n\n[[ilm-migrate-options]]\n==== Options\n\n`enabled`::\n(Optional, Boolean)\nControls whether {ilm-init} automatically migrates the index during this phase.\nDefaults to `true`.\n\n[[ilm-enabled-migrate-ex]]\n==== Example\n\nIn the following policy, the <<ilm-allocate, allocate>> action is specified to reduce the number of replicas before {ilm-init} migrates the index to warm nodes.\n\nNOTE: Explicitly specifying the migrate action is not required--{ilm-init} automatically performs the migrate action unless you disable migration.\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"migrate\" : {\n          },\n          \"allocate\": {\n            \"number_of_replicas\": 1\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n[[ilm-disable-migrate-ex]]\n==== Disable automatic migration\n\nThe migrate action in the following policy is disabled and\nthe allocate action assigns the index to nodes that have a\n`rack_id` of _one_ or _two_.\n\n[source,console]\n--------------------------------------------------\nPUT _ilm/policy/my_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"warm\": {\n        \"actions\": {\n          \"migrate\" : {\n           \"enabled\": false\n          },\n          \"allocate\": {\n            \"include\" : {\n              \"rack_id\": \"one,two\"\n            }\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n"
}