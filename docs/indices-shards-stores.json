{
    "meta": {
        "size": 5851,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/indices-shards-stores.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "indices-shards-stores",
        "version": "8.15"
    },
    "doc": "[[indices-shards-stores]]\n=== Index shard stores API\n++++\n<titleabbrev>Index shard stores</titleabbrev>\n++++\n\nRetrieves store information\nabout replica shards in one or more indices.\nFor data streams, the API retrieves store\ninformation for the stream's backing indices.\n\n[source,console]\n----\nGET /my-index-000001/_shard_stores\n----\n// TEST[setup:my_index]\n\n\n[[index-shard-stores-api-request]]\n==== {api-request-title}\n\n`GET /<target>/_shard_stores`\n\n`GET /_shard_stores`\n\n[[index-shard-stores-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `monitor` or\n`manage` <<privileges-list-indices,index privilege>> for the target data stream,\nindex, or alias.\n\n[[index-shard-stores-api-desc]]\n==== {api-description-title}\n\nThe index shard stores API returns the following information:\n\n* The node on which each replica shard exists\n* Allocation ID for each replica shard\n* Unique ID for each replica shard\n* Any errors encountered\n  while opening the shard index\n  or from an earlier failure\n\nBy default, the API only returns store information\nfor primary shards that are unassigned\nor have one or more unassigned replica shards.\n\n\n[[index-shard-stores-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Optional, string) Comma-separated list of data streams, indices, and aliases\nused to limit the request. Supports wildcards (`*`). To target all data streams\nand indices, omit this parameter or use `*` or `_all`.\n\n[[index-shard-stores-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+\nDefaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n+\nDefaults to `open`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n\n`status`::\n+\n--\n(Optional, string)\nComma-separated list of shard health statuses\nused to limit the request.\n\nValid values include:\n\n`green`::\nThe primary shard and all replica shards are assigned.\n\n`yellow`::\nOne or more replica shards are unassigned.\n\n`red`::\nThe primary shard is unassigned.\n\n`all`::\nReturn all shards,\nregardless of health status.\n\nDefaults to `yellow,red`.\n--\n\n`max_concurrent_shard_requests`::\n+\n--\n(Optional, integer)\nMaximum number of concurrent shard-level requests sent by the coordinating\nnode. Defaults to `100`. Larger values may yield a quicker response to requests\nthat target many shards, but may also cause a larger impact on other cluster\noperations.\n--\n\n[[index-shard-stores-api-example]]\n==== {api-examples-title}\n\n\n[[index-shard-stores-api-single-ex]]\n===== Get shard store information for a specific data stream or index\n\n[source,console]\n----\nGET /test/_shard_stores\n----\n// TEST[s/^/PUT test\\n/]\n\n\n[[index-shard-stores-api-multi-ex]]\n===== Get shard store information for several data streams and indices\n\n[source,console]\n----\nGET /test1,test2/_shard_stores\n----\n// TEST[s/^/PUT test1\\nPUT test2\\n/]\n\n\n[[index-shard-stores-api-all-ex]]\n===== Get shard store information for all data streams and indices\n\n[source,console]\n----\nGET /_shard_stores\n----\n// TEST[continued]\n\n\n[[index-shard-stores-api-health-ex]]\n===== Get shard store information based on cluster health\n\nYou can use the `status` query parameter\nto limit returned information based on shard health.\n\nThe following request only returns information\nfor assigned primary and replica shards.\n\n[source,console]\n--------------------------------------------------\nGET /_shard_stores?status=green\n--------------------------------------------------\n// TEST[setup:node]\n// TEST[s/^/PUT my-index-000001\\n{\"settings\":{\"number_of_shards\":1, \"number_of_replicas\": 0}}\\nPOST my-index-000001\\/_doc\\?refresh\\n{\"test\": \"test\"}\\n/]\n\nThe API returns the following response:\n\n[source,console-result]\n--------------------------------------------------\n{\n   \"indices\": {\n       \"my-index-000001\": {\n           \"shards\": {\n              \"0\": { <1>\n                \"stores\": [ <2>\n                    {\n                        \"sPa3OgxLSYGvQ4oPs-Tajw\": { <3>\n                            \"name\": \"node_t0\",\n                            \"ephemeral_id\" : \"9NlXRFGCT1m8tkvYCMK-8A\",\n                            \"transport_address\": \"local[1]\",\n                            \"external_id\": \"node_t0\",\n                            \"attributes\": {},\n                            \"roles\": [...],\n                            \"version\": \"8.10.0\",\n                            \"min_index_version\": 7000099,\n                            \"max_index_version\": 8100099\n                        },\n                        \"allocation_id\": \"2iNySv_OQVePRX-yaRH_lQ\", <4>\n                        \"allocation\" : \"primary|replica|unused\" <5>\n                        \"store_exception\": ... <6>\n                    }\n                ]\n              }\n           }\n       }\n   }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"store_exception\": \\.\\.\\.//]\n// TESTRESPONSE[s/\"sPa3OgxLSYGvQ4oPs-Tajw\"/\\$node_name/]\n// TESTRESPONSE[s/: \"[^\"]*\"/: $body.$_path/]\n// TESTRESPONSE[s/\"attributes\": \\{[^}]*\\}/\"attributes\": $body.$_path/]\n// TESTRESPONSE[s/\"roles\": \\[[^]]*\\]/\"roles\": $body.$_path/]\n// TESTRESPONSE[s/\"8.10.0\"/\\$node_version/]\n// TESTRESPONSE[s/\"min_index_version\": 7000099/\"min_index_version\": $body.$_path/]\n// TESTRESPONSE[s/\"max_index_version\": 8100099/\"max_index_version\": $body.$_path/]\n\n\n\n<1> The key is the corresponding shard id for the store information\n<2> A list of store information for all copies of the shard\n<3> The node information that hosts a copy of the store, the key\n    is the unique node id.\n<4> The allocation id of the store copy\n<5> The status of the store copy, whether it is used as a\n    primary, replica or not used at all\n<6> Any exception encountered while opening the shard index or\n    from earlier engine failure\n"
}