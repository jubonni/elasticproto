{
    "meta": {
        "timestamp": "2024-11-01T02:49:26.424066",
        "size": 4334,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/shard-tool.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "shard-tool",
        "version": "8.15"
    },
    "doc": "[[shard-tool]]\n== elasticsearch-shard\n\nIn some cases the Lucene index or translog of a shard copy can become corrupted.\nThe `elasticsearch-shard` command enables you to remove corrupted parts of the\nshard if a good copy of the shard cannot be recovered automatically or restored\nfrom backup.\n\n[WARNING]\nYou will lose the corrupted data when you run `elasticsearch-shard`. This tool\nshould only be used as a last resort if there is no way to recover from another\ncopy of the shard or restore a snapshot.\n\n[discrete]\n=== Synopsis\n\n[source,shell]\n--------------------------------------------------\nbin/elasticsearch-shard remove-corrupted-data\n  ([--index <Index>] [--shard-id <ShardId>] | [--dir <IndexPath>])\n  [--truncate-clean-translog]\n  [-E <KeyValuePair>]\n  [-h, --help] ([-s, --silent] | [-v, --verbose])\n--------------------------------------------------\n\n[discrete]\n=== Description\n\nWhen {es} detects that a shard's data is corrupted, it fails that shard copy and\nrefuses to use it. Under normal conditions, the shard is automatically recovered\nfrom another copy. If no good copy of the shard is available and you cannot\nrestore one from a snapshot, you can use `elasticsearch-shard` to remove the\ncorrupted data and restore access to any remaining data in unaffected segments.\n\n[WARNING]\nStop Elasticsearch before running `elasticsearch-shard`.\n\nTo remove corrupted shard data use the `remove-corrupted-data` subcommand.\n\nThere are two ways to specify the path:\n\n* Specify the index name and shard name with the `--index` and `--shard-id`\n  options.\n* Use the `--dir` option to specify the full path to the corrupted index or\n  translog files.\n\n:tool-name: shard\ninclude::cli-jvm-options.asciidoc[]\n:!tool-name:\n\n[discrete]\n==== Removing corrupted data\n\n`elasticsearch-shard` analyses the shard copy and provides an overview of the\ncorruption found. To proceed you must then confirm that you want to remove the\ncorrupted data.\n\n[WARNING]\nBack up your data before running `elasticsearch-shard`. This is a destructive\noperation that removes corrupted data from the shard.\n\n[source,txt]\n--------------------------------------------------\n$ bin/elasticsearch-shard remove-corrupted-data --index my-index-000001 --shard-id 0\n\n\n    WARNING: Elasticsearch MUST be stopped before running this tool.\n\n  Please make a complete backup of your index before using this tool.\n\n\nOpening Lucene index at /var/lib/elasticsearchdata/indices/P45vf_YQRhqjfwLMUvSqDw/0/index/\n\n >> Lucene index is corrupted at /var/lib/elasticsearchdata/indices/P45vf_YQRhqjfwLMUvSqDw/0/index/\n\nOpening translog at /var/lib/elasticsearchdata/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/\n\n\n >> Translog is clean at /var/lib/elasticsearchdata/indices/P45vf_YQRhqjfwLMUvSqDw/0/translog/\n\n\n  Corrupted Lucene index segments found - 32 documents will be lost.\n\n            WARNING:              YOU WILL LOSE DATA.\n\nContinue and remove docs from the index ? Y\n\nWARNING: 1 broken segments (containing 32 documents) detected\nTook 0.056 sec total.\nWriting...\nOK\nWrote new segments file \"segments_c\"\nMarking index with the new history uuid : 0pIBd9VTSOeMfzYT6p0AsA\nChanging allocation id V8QXk-QXSZinZMT-NvEq4w to tjm9Ve6uTBewVFAlfUMWjA\n\nYou should run the following command to allocate this shard:\n\nPOST /_cluster/reroute\n{\n  \"commands\" : [\n    {\n      \"allocate_stale_primary\" : {\n        \"index\" : \"index42\",\n        \"shard\" : 0,\n        \"node\" : \"II47uXW2QvqzHBnMcl2o_Q\",\n        \"accept_data_loss\" : false\n      }\n    }\n  ]\n}\n\nYou must accept the possibility of data loss by changing the `accept_data_loss` parameter to `true`.\n\nDeleted corrupt marker corrupted_FzTSBSuxT7i3Tls_TgwEag from /var/lib/elasticsearchdata/indices/P45vf_YQRhqjfwLMUvSqDw/0/index/\n\n--------------------------------------------------\n\nWhen you use `elasticsearch-shard` to drop the corrupted data, the shard's\nallocation ID changes. After restarting the node, you must use the\n<<cluster-reroute,cluster reroute API>> to tell Elasticsearch to use the new ID.\nThe `elasticsearch-shard` command shows the request that you need to submit.\n\nYou can also use the `-h` option to get a list of all options and parameters\nthat the `elasticsearch-shard` tool supports.\n\nFinally, you can use the `--truncate-clean-translog` option to truncate the\nshard's translog even if it does not appear to be corrupt.\n"
}