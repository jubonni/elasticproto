{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.203579",
        "size": 1887,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/completion.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "completion",
        "version": "8.15"
    },
    "doc": "[[completion]]\n=== Completion field type\n++++\n<titleabbrev>Completion</titleabbrev>\n++++\n// tag::completion-mapping[]\nTo use the <<completion-suggester,`completion` suggester>>, map the field from\nwhich you want to generate suggestions as type `completion`. This indexes the \nfield values for fast completions.\n\n[source,console]\n--------------------------------------------------\nPUT music\n{\n  \"mappings\": {\n    \"properties\": {\n      \"suggest\": {\n        \"type\": \"completion\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\n==== Parameters for `completion` fields\n\nThe following parameters are accepted by `completion` fields:\n\n[horizontal]\n<<analyzer,`analyzer`>>::\n\n    The index analyzer to use, defaults to `simple`.\n\n<<search-analyzer,`search_analyzer`>>::\n\n    The search analyzer to use, defaults to value of `analyzer`.\n\n`preserve_separators`::\n\n    Preserves the separators, defaults to `true`.\n    If disabled, you could find a field starting with `Foo Fighters`, if you\n    suggest for `foof`.\n\n`preserve_position_increments`::\n\n    Enables position increments, defaults to `true`.\n    If disabled and using stopwords analyzer, you could get a\n    field starting with `The Beatles`, if you suggest for `b`. *Note*: You\n    could also achieve this by indexing two inputs, `Beatles` and\n    `The Beatles`, no need to change a simple analyzer, if you are able to\n    enrich your data.\n\n`max_input_length`::\n\n    Limits the length of a single input, defaults to `50` UTF-16 code points.\n    This limit is only used at index time to reduce the total number of\n    characters per input string in order to prevent massive inputs from\n    bloating the underlying datastructure. Most use cases won't be influenced\n    by the default value since prefix completions seldom grow beyond prefixes longer\n    than a handful of characters.\n// end::completion-mapping[]"
}