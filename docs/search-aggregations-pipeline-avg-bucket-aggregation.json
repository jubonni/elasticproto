{
    "meta": {
        "timestamp": "2024-11-01T03:07:08.787275",
        "size": 3304,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-avg-bucket-aggregation.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "search-aggregations-pipeline-avg-bucket-aggregation",
        "version": "8.15"
    },
    "doc": "[[search-aggregations-pipeline-avg-bucket-aggregation]]\n=== Average bucket aggregation\n++++\n<titleabbrev>Average bucket</titleabbrev>\n++++\n\nA sibling pipeline aggregation which calculates the mean value of a specified\nmetric in a sibling aggregation. The specified metric must be numeric and the\nsibling aggregation must be a multi-bucket aggregation.\n\n[[avg-bucket-agg-syntax]]\n==== Syntax\n\n[source,js,indent=0]\n----\ninclude::avg-bucket-aggregation.asciidoc[tag=avg-bucket-agg-syntax]\n----\n// NOTCONSOLE\n\n[[avg-bucket-params]]\n==== Parameters\n\n`buckets_path`::\n(Required, string)\nPath to the buckets to average. For syntax, see <<buckets-path-syntax>>.\n\n`gap_policy`::\n(Optional, string)\nPolicy to apply when gaps are found in the data. For valid values, see\n<<gap-policy>>. Defaults to `skip`.\n\n`format`::\n(Optional, string)\n{javadoc}/java.base/java/text/DecimalFormat.html[DecimalFormat pattern] for the\noutput value. If specified, the formatted value is returned in the aggregation's\n`value_as_string` property.\n\n[[avg-bucket-agg-response]]\n==== Response body\n\n`value`::\n(float)\nMean average value for the metric specified in `buckets_path`.\n\n`value_as_string`::\n(string)\nFormatted output value for the aggregation. This property is only provided if\na `format` is specified in the request.\n\n[[avg-bucket-agg-ex]]\n==== Example\n\nThe following `avg_monthly_sales` aggregation uses `avg_bucket` to calculate\naverage sales per month:\n\n[source,console,subs=\"specialchars+\"]\n----\nPOST _search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"sales_per_month\": {\n      \"date_histogram\": {\n        \"field\": \"date\",\n        \"calendar_interval\": \"month\"\n      },\n      \"aggs\": {\n        \"sales\": {\n          \"sum\": {\n            \"field\": \"price\"\n          }\n        }\n      }\n    },\n    \"avg_monthly_sales\": {\n// tag::avg-bucket-agg-syntax[]               <1>\n      \"avg_bucket\": {\n        \"buckets_path\": \"sales_per_month>sales\",\n        \"gap_policy\": \"skip\",\n        \"format\": \"#,##0.00;(#,##0.00)\"\n      }\n// end::avg-bucket-agg-syntax[]               <2>\n    }\n  }\n}\n----\n// TEST[setup:sales]\n\n<1> Start of the `avg_bucket` configuration. Comment is not part of the example.\n<2> End of the `avg_bucket` configuration. Comment is not part of the example.\n\nThe request returns the following response:\n\n[source,console-result]\n----\n{\n  \"took\": 11,\n  \"timed_out\": false,\n  \"_shards\": ...,\n  \"hits\": ...,\n  \"aggregations\": {\n    \"sales_per_month\": {\n      \"buckets\": [\n        {\n          \"key_as_string\": \"2015/01/01 00:00:00\",\n          \"key\": 1420070400000,\n          \"doc_count\": 3,\n          \"sales\": {\n            \"value\": 550.0\n          }\n        },\n        {\n          \"key_as_string\": \"2015/02/01 00:00:00\",\n          \"key\": 1422748800000,\n          \"doc_count\": 2,\n          \"sales\": {\n            \"value\": 60.0\n          }\n        },\n        {\n          \"key_as_string\": \"2015/03/01 00:00:00\",\n          \"key\": 1425168000000,\n          \"doc_count\": 2,\n          \"sales\": {\n            \"value\": 375.0\n          }\n        }\n      ]\n    },\n    \"avg_monthly_sales\": {\n      \"value\": 328.33333333333333,\n      \"value_as_string\": \"328.33\"\n    }\n  }\n}\n----\n// TESTRESPONSE[s/\"took\": 11/\"took\": $body.took/]\n// TESTRESPONSE[s/\"_shards\": \\.\\.\\./\"_shards\": $body._shards/]\n// TESTRESPONSE[s/\"hits\": \\.\\.\\./\"hits\": $body.hits/]\n"
}