{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.408274",
        "size": 6347,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/histogram.html",
        "type": "documentation",
        "role": [
            "xpack",
            "child_attributes"
        ],
        "has_code": true,
        "title": "histogram",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[histogram]]\n=== Histogram field type\n++++\n<titleabbrev>Histogram</titleabbrev>\n++++\n\nA field to store pre-aggregated numerical data representing a histogram.\nThis data is defined using two paired arrays:\n\n* A `values` array of <<number, `double`>> numbers, representing the buckets for\nthe histogram. These values must be provided in ascending order.\n* A corresponding `counts` array of <<number, `long`>> numbers, representing how\nmany values fall into each bucket. These numbers must be positive or zero.\n\nBecause the elements in the `values` array correspond to the elements in the\nsame position of the `count` array, these two arrays must have the same length.\n\n[IMPORTANT]\n========\n* A `histogram` field can only store a single pair of `values` and `count` arrays\nper document. Nested arrays are not supported.\n* `histogram` fields do not support sorting.\n========\n\n[role=\"child_attributes\"]\n[[histogram-uses]]\n==== Uses\n\n`histogram` fields are primarily intended for use with aggregations. To make it\nmore readily accessible for aggregations, `histogram` field data is stored as a\nbinary <<doc-values,doc values>> and not indexed. Its size in bytes is at most\n`13 * numValues`, where `numValues` is the length of the provided arrays.\n\nBecause the data is not indexed, you only can use `histogram` fields for the\nfollowing aggregations and queries:\n\n* <<search-aggregations-metrics-min-aggregation-histogram-fields,min>> aggregation\n* <<search-aggregations-metrics-max-aggregation-histogram-fields,max>> aggregation\n* <<search-aggregations-metrics-sum-aggregation-histogram-fields,sum>> aggregation\n* <<search-aggregations-metrics-valuecount-aggregation-histogram-fields,value_count>> aggregation\n* <<search-aggregations-metrics-avg-aggregation-histogram-fields,avg>> aggregation\n* <<search-aggregations-metrics-percentile-aggregation,percentiles>> aggregation\n* <<search-aggregations-metrics-percentile-rank-aggregation,percentile ranks>> aggregation\n* <<search-aggregations-metrics-boxplot-aggregation,boxplot>> aggregation\n* <<search-aggregations-bucket-histogram-aggregation-histogram-fields,histogram>> aggregation\n* <<search-aggregations-bucket-range-aggregation-histogram-fields,range>> aggregation\n* <<query-dsl-exists-query,exists>> query\n\n[[mapping-types-histogram-building-histogram]]\n==== Building a histogram\n\nWhen using a histogram as part of an aggregation, the accuracy of the results will depend on how the\nhistogram was constructed. It is important to consider the percentiles aggregation mode that will be used\nto build it. Some possibilities include:\n\n- For the <<search-aggregations-metrics-percentile-aggregation, T-Digest>> mode, the `values` array represents\nthe mean centroid positions and the `counts` array represents the number of values that are attributed to each\ncentroid. If the algorithm has already started to approximate the percentiles, this inaccuracy is\ncarried over in the histogram.\n\n- For the <<_hdr_histogram,High Dynamic Range (HDR)>> histogram mode, the `values` array represents fixed upper\nlimits of each bucket interval, and the `counts` array represents the number of values that are attributed to each\ninterval. This implementation maintains a fixed worse-case percentage error (specified as a number of significant digits),\ntherefore the value used when generating the histogram would be the maximum accuracy you can achieve at aggregation time.\n\nThe histogram field is \"algorithm agnostic\" and does not store data specific to either T-Digest or HDRHistogram. While this\nmeans the field can technically be aggregated with either algorithm, in practice the user should chose one algorithm and\nindex data in that manner (e.g. centroids for T-Digest or intervals for HDRHistogram) to ensure best accuracy.\n\n[[histogram-synthetic-source]]\n==== Synthetic `_source`\n\nIMPORTANT: Synthetic `_source` is Generally Available only for TSDB indices\n(indices that have `index.mode` set to `time_series`). For other indices\nsynthetic `_source` is in technical preview. Features in technical preview may\nbe changed or removed in a future release. Elastic will work to fix\nany issues, but features in technical preview are not subject to the support SLA\nof official GA features.\n\n`histogram` fields support <<synthetic-source,synthetic `_source`>> in their\ndefault configuration.\n\nNOTE: To save space, zero-count buckets are not stored in the histogram doc values.\nAs a result, when indexing a histogram field in an index with synthetic source enabled,\nindexing a histogram including zero-count buckets will result in missing buckets when\nfetching back the histogram.\n\n[[histogram-ex]]\n==== Examples\n\nThe following <<indices-create-index, create index>> API request creates a new index with two field mappings:\n\n* `my_histogram`, a `histogram` field used to store percentile data\n* `my_text`, a `keyword` field used to store a title for the histogram\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001\n{\n  \"mappings\" : {\n    \"properties\" : {\n      \"my_histogram\" : {\n        \"type\" : \"histogram\"\n      },\n      \"my_text\" : {\n        \"type\" : \"keyword\"\n      }\n    }\n  }\n}\n--------------------------------------------------\n\nThe following <<docs-index_,index>> API requests store pre-aggregated for\ntwo histograms: `histogram_1` and `histogram_2`.\n\n[source,console]\n--------------------------------------------------\nPUT my-index-000001/_doc/1\n{\n  \"my_text\" : \"histogram_1\",\n  \"my_histogram\" : {\n      \"values\" : [0.1, 0.2, 0.3, 0.4, 0.5], <1>\n      \"counts\" : [3, 7, 23, 12, 6] <2>\n   }\n}\n\nPUT my-index-000001/_doc/2\n{\n  \"my_text\" : \"histogram_2\",\n  \"my_histogram\" : {\n      \"values\" : [0.1, 0.25, 0.35, 0.4, 0.45, 0.5], <1>\n      \"counts\" : [8, 17, 8, 7, 6, 2] <2>\n   }\n}\n--------------------------------------------------\n<1> Values for each bucket. Values in the array are treated as doubles and must be given in\nincreasing order. For <<search-aggregations-metrics-percentile-aggregation-approximation, T-Digest>>\nhistograms this value represents the mean value. In case of HDR histograms this represents the value iterated to.\n<2> Count for each bucket. Values in the arrays are treated as long integers and must be positive or zero.\nNegative values will be rejected. The relation between a bucket and a count is given by the position in the array.\n"
}