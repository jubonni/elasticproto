{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.447270",
        "size": 4250,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/ilm-settings.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "ilm-settings",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[ilm-settings]]\n=== {ilm-cap} settings in {es}\n[subs=\"attributes\"]\n++++\n<titleabbrev>{ilm-cap} settings</titleabbrev>\n++++\n\nThese are the settings available for configuring <<index-lifecycle-management, {ilm}>> ({ilm-init}).\n\n==== Cluster level settings\n\n`xpack.ilm.enabled`::\n(<<static-cluster-setting,Static>>, Boolean)\ndeprecated:[7.8.0,Basic License features are always enabled] +\nThis deprecated setting has no effect and will be removed in Elasticsearch 8.0.\n\n`indices.lifecycle.history_index_enabled`::\n(<<dynamic-cluster-setting,Dynamic>>, Boolean)\nWhether ILM's history index is enabled. If enabled, ILM will record the\nhistory of actions taken as part of ILM policies to the `ilm-history-*`\nindices. Defaults to `true`.\n\n[[indices-lifecycle-poll-interval]]\n`indices.lifecycle.poll_interval`::\n(<<dynamic-cluster-setting,Dynamic>>, <<time-units, time unit value>>)\nHow often {ilm} checks for indices that meet policy criteria. Defaults to `10m`.\n\n[[indices-lifecycle-rollover-only-if-has-documents]]\n`indices.lifecycle.rollover.only_if_has_documents`::\n(<<dynamic-cluster-setting,Dynamic>>, Boolean)\nWhether ILM will only roll over non-empty indices. If enabled, ILM will only roll over indices\nas long as they contain at least one document. Defaults to `true`.\n\n==== Index level settings\nThese index-level {ilm-init} settings are typically configured through index\ntemplates. For more information, see <<ilm-gs-create-policy>>.\n\n`index.lifecycle.indexing_complete`::\n(<<indices-update-settings,Dynamic>>, Boolean)\nIndicates whether or not the index has been rolled over.\nAutomatically set to `true` when {ilm-init} completes the rollover action.\nYou can explicitly set it to <<skipping-rollover, skip rollover>>.\nDefaults to `false`.\n\n[[index-lifecycle-name]]\n`index.lifecycle.name`::\n(<<indices-update-settings, Dynamic>>, string)\nThe name of the policy to use to manage the index. For information about how\n{es} applies policy changes, see <<update-lifecycle-policy>>.\nIf you are restoring an index from snapshot that was previously managed by {ilm},\nyou can override this setting to null during the restore operation to disable\nfurther management of the index. See also <<index-lifecycle-rollover-alias>>.\n\n[[index-lifecycle-origination-date]]\n`index.lifecycle.origination_date`::\n(<<indices-update-settings,Dynamic>>, long)\nIf specified, this is the timestamp used to calculate the index age for its phase transitions.\nUse this setting if you create a new index that contains old data and\nwant to use the original creation date to calculate the index age.\nSpecified as a Unix epoch value in milliseconds.\n\n[[index-lifecycle-parse-origination-date]]\n`index.lifecycle.parse_origination_date`::\n(<<indices-update-settings,Dynamic>>, Boolean)\nSet to `true` to parse the origination date from the index name.\nThis origination date is used to calculate the index age for its phase transitions.\nThe index name must match the pattern `^.*-{date_format}-\\\\d+`,\nwhere the `date_format` is `yyyy.MM.dd` and the trailing digits are optional.\nAn index that was rolled over would normally match the full format,\nfor example `logs-2016.10.31-000002`).\nIf the index name doesn't match the pattern, index creation fails.\n\n[[index-lifecycle-step-wait-time-threshold]]\n`index.lifecycle.step.wait_time_threshold`::\n(<<indices-update-settings,Dynamic>>, <<time-units,time value>>)\nTime to wait for the cluster to resolve allocation issues during an {ilm-init}\n<<ilm-shrink,`shrink`>> action. Must be greater than `1h` (1 hour). Defaults to\n`12h` (12 hours). See <<ilm-shrink-shard-allocation>>.\n\n[[index-lifecycle-rollover-alias]]\n`index.lifecycle.rollover_alias`::\n(<<indices-update-settings,Dynamic>>, string)\nThe index alias to update when the index rolls over. Specify when using a\npolicy that contains a rollover action. When the index rolls over, the alias is\nupdated to reflect that the index is no longer the write index. For more\ninformation about rolling indices, see <<index-rollover, Rollover>>.\nIf you are restoring an index from snapshot that was previously managed by {ilm},\nyou can override this setting to null during the restore operation to disable\nfurther management of future indices. See also <<index-lifecycle-name>>.\n"
}