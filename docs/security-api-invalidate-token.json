{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.816579",
        "size": 7852,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-invalidate-token.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-api-invalidate-token",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-invalidate-token]]\n=== Invalidate token API\n++++\n<titleabbrev>Invalidate token</titleabbrev>\n++++\n\nInvalidates one or more access tokens or refresh tokens.\n\n[[security-api-invalidate-token-request]]\n==== {api-request-title}\n\n`DELETE /_security/oauth2/token`\n\n[[security-api-invalidate-token-desc]]\n==== {api-description-title}\n\nThe access tokens returned by the <<security-api-get-token,get token API>> have a\nfinite period of time for which they are valid and after that time period, they\ncan no longer be used. That time period is defined by the\n`xpack.security.authc.token.timeout` setting. For more information, see\n<<token-service-settings>>.\n\nThe refresh tokens returned by the <<security-api-get-token,get token API>> are\nonly valid for 24 hours. They can also be used exactly once.\n\nIf you want to invalidate one or more access or refresh tokens immediately, use\nthis invalidate token API.\n\n[[security-api-invalidate-token-request-body]]\n==== {api-request-body-title}\n\nThe following parameters can be specified in the body of a DELETE request and\npertain to invalidating tokens:\n\n`token`::\n(Optional, string) An access token. This parameter cannot be used any of\n`refresh_token`, `realm_name` or `username` are used.\n\n`refresh_token`::\n(Optional, string) A refresh token. This parameter cannot be used any of\n`refresh_token`, `realm_name` or `username` are used.\n\n`realm_name`::\n(Optional, string) The name of an authentication realm. This parameter cannot be\nused with either `refresh_token` or `token`.\n\n`username`::\n(Optional, string) The username of a user. This parameter cannot be used with\neither `refresh_token` or `token`\n\nNOTE: While all parameters are optional, at least one of them is required. More\nspecifically, either one of `token` or `refresh_token` parameters is required.\nIf none of these two are specified, then `realm_name` and/or `username` need to\nbe specified.\n\n\n[[security-api-invalidate-token-response-body]]\n==== {api-response-body-title}\n\nA successful call returns a JSON structure that contains the number of tokens\nthat were invalidated, the number of tokens that had already been invalidated,\nand potentially a list of errors encountered while invalidating specific tokens.\n\n[[security-api-invalidate-token-example]]\n==== {api-examples-title}\n\nFor example, if you create a token using the `client_credentials` grant type as\nfollows:\n\n[source,console]\n--------------------------------------------------\nPOST /_security/oauth2/token\n{\n  \"grant_type\" : \"client_credentials\"\n}\n--------------------------------------------------\n\nThe get token API returns the following information about the access token:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"access_token\" : \"dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==\",\n  \"type\" : \"Bearer\",\n  \"expires_in\" : 1200,\n  \"authentication\" : {\n    \"username\" : \"test_admin\",\n    \"roles\" : [\n      \"superuser\"\n      ],\n    \"full_name\" : null,\n    \"email\" : null,\n    \"metadata\" : { },\n    \"enabled\" : true,\n    \"authentication_realm\" : {\n      \"name\" : \"file\",\n      \"type\" : \"file\"\n      },\n    \"lookup_realm\" : {\n      \"name\" : \"file\",\n      \"type\" : \"file\"\n      },\n    \"authentication_type\" : \"realm\"\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==/$body.access_token/]\n// TESTRESPONSE[s/superuser/_es_test_root/]\n\nThis access token can now be immediately invalidated, as shown in the following\nexample:\n\n[source,console]\n--------------------------------------------------\nDELETE /_security/oauth2/token\n{\n  \"token\" : \"dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==\"\n}\n--------------------------------------------------\n// TEST[s/dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==/$body.access_token/]\n// TEST[continued]\n\nIf you used the `password` grant type to obtain a token for a user, the response\nmight also contain a refresh token. For example:\n\n[source,console]\n--------------------------------------------------\nPOST /_security/oauth2/token\n{\n  \"grant_type\" : \"password\",\n  \"username\" : \"test_admin\",\n  \"password\" : \"x-pack-test-password\"\n}\n--------------------------------------------------\n\nThe get token API returns the following information:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"access_token\" : \"dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==\",\n  \"type\" : \"Bearer\",\n  \"expires_in\" : 1200,\n  \"refresh_token\": \"vLBPvmAB6KvwvJZr27cS\",\n  \"authentication\" : {\n    \"username\" : \"test_admin\",\n    \"roles\" : [\n      \"superuser\"\n      ],\n    \"full_name\" : null,\n    \"email\" : null,\n    \"metadata\" : { },\n    \"enabled\" : true,\n    \"authentication_realm\" : {\n      \"name\" : \"file\",\n      \"type\" : \"file\"\n      },\n    \"lookup_realm\" : {\n      \"name\" : \"file\",\n      \"type\" : \"file\"\n      },\n    \"authentication_type\" : \"realm\"\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/dGhpcyBpcyBub3QgYSByZWFsIHRva2VuIGJ1dCBpdCBpcyBvbmx5IHRlc3QgZGF0YS4gZG8gbm90IHRyeSB0byByZWFkIHRva2VuIQ==/$body.access_token/]\n// TESTRESPONSE[s/vLBPvmAB6KvwvJZr27cS/$body.refresh_token/]\n// TESTRESPONSE[s/superuser/_es_test_root/]\n\nThe refresh token can now also be immediately invalidated as shown\nin the following example:\n\n[source,console]\n--------------------------------------------------\nDELETE /_security/oauth2/token\n{\n  \"refresh_token\" : \"vLBPvmAB6KvwvJZr27cS\"\n}\n--------------------------------------------------\n// TEST[s/vLBPvmAB6KvwvJZr27cS/$body.refresh_token/]\n// TEST[continued]\n\nThe following example invalidates all access tokens and refresh tokens for the\n`saml1` realm immediately:\n\n[source,console]\n--------------------------------------------------\nDELETE /_security/oauth2/token\n{\n  \"realm_name\" : \"saml1\"\n}\n--------------------------------------------------\n\nThe following example invalidates all access tokens and refresh tokens for the\nuser `myuser` in all realms immediately:\n\n[source,console]\n--------------------------------------------------\nDELETE /_security/oauth2/token\n{\n  \"username\" : \"myuser\"\n}\n--------------------------------------------------\n\nFinally, the following example invalidates all access tokens and refresh tokens\nfor the user `myuser` in the `saml1` realm immediately:\n\n[source,console]\n--------------------------------------------------\nDELETE /_security/oauth2/token\n{\n  \"username\" : \"myuser\",\n  \"realm_name\" : \"saml1\"\n}\n--------------------------------------------------\n\n[source,js]\n--------------------------------------------------\n{\n  \"invalidated_tokens\":9, <1>\n  \"previously_invalidated_tokens\":15, <2>\n  \"error_count\":2, <3>\n  \"error_details\":[ <4>\n    {\n      \"type\":\"exception\",\n      \"reason\":\"Elasticsearch exception [type=exception, reason=foo]\",\n      \"caused_by\":{\n        \"type\":\"exception\",\n        \"reason\":\"Elasticsearch exception [type=illegal_argument_exception, reason=bar]\"\n      }\n    },\n    {\n      \"type\":\"exception\",\n      \"reason\":\"Elasticsearch exception [type=exception, reason=boo]\",\n      \"caused_by\":{\n        \"type\":\"exception\",\n        \"reason\":\"Elasticsearch exception [type=illegal_argument_exception, reason=far]\"\n      }\n    }\n  ]\n}\n--------------------------------------------------\n// NOTCONSOLE\n\n<1> The number of the tokens that were invalidated as part of this request.\n<2> The number of tokens that were already invalidated.\n<3> The number of errors that were encountered when invalidating the tokens.\n<4> Details about these errors. This field is not present in the response when\n    `error_count` is 0.\n"
}