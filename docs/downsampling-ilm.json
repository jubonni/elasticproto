{
    "meta": {
        "timestamp": "2024-11-01T03:07:09.138270",
        "size": 23472,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/downsampling-ilm.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "downsampling-ilm",
        "version": "8.15"
    },
    "doc": "[[downsampling-ilm]]\n=== Run downsampling with ILM\n++++\n<titleabbrev>Run downsampling with ILM</titleabbrev>\n++++\n\nThis is a simplified example that allows you to see quickly how\n<<downsampling,downsampling>> works as part of an ILM policy to reduce the\nstorage size of a sampled set of metrics. The example uses typical Kubernetes\ncluster monitoring data. To test out downsampling with ILM, follow these steps:\n\n. Check the <<downsampling-ilm-prereqs,prerequisites>>.\n. <<downsampling-ilm-policy>>.\n. <<downsampling-ilm-create-index-template>>.\n. <<downsampling-ilm-ingest-data>>.\n. <<downsampling-ilm-view-results>>.\n\n[discrete]\n[[downsampling-ilm-prereqs]]\n==== Prerequisites\n\nRefer to <<tsds-prereqs,time series data stream prerequisites>>.\n\nBefore running this example you may want to try the\n<<downsampling-manual,Run downsampling manually>> example.\n\n[discrete]\n[[downsampling-ilm-policy]]\n==== Create an index lifecycle policy\n\nCreate an ILM policy for your time series data. While not required, an ILM\npolicy is recommended to automate the management of your time series data stream\nindices.\n\nTo enable downsampling, add a <<ilm-downsample,Downsample action>> and set\n<<ilm-downsample-options,`fixed_interval`>> to the downsampling interval at\nwhich you want to aggregate the original time series data.\n\nIn this example, an ILM policy is configured for the `hot` phase. The downsample\ntakes place after the index is rolled over and the <<index-time-series-end-time, index time series end time>>\nhas lapsed as the source index is still expected to receive major writes until then.\n{ilm-cap} will not proceed with any action that expects the index to not receive\nwrites anymore until the <<index-time-series-end-time, index's end time>> has \npassed. The {ilm-cap} actions that wait on the end time before proceeding are:\n- <<ilm-delete>>\n- <<ilm-downsample>>\n- <<ilm-forcemerge>>\n- <<ilm-readonly>>\n- <<ilm-searchable-snapshot>>\n- <<ilm-shrink>>\n\n[source,console]\n----\nPUT _ilm/policy/datastream_policy\n{\n  \"policy\": {\n    \"phases\": {\n      \"hot\": {\n        \"actions\": {\n          \"rollover\" : {\n            \"max_age\": \"5m\"\n          },\n          \"downsample\": {\n  \t        \"fixed_interval\": \"1h\"\n  \t      }\n        }\n      }\n    }\n  }\n}\n----\n\n[discrete]\n[[downsampling-ilm-create-index-template]]\n==== Create an index template\n\nThis creates an index template for a basic data stream. The available parameters\nfor an index template are described in detail in <<set-up-a-data-stream,Set up a\ntime series data stream>>.\n\nFor simplicity, in the time series mapping all `time_series_metric` parameters\nare set to type `gauge`, but the `counter` metric type may also be used. The\n`time_series_metric` values determine the kind of statistical representations\nthat are used during downsampling.\n\nThe index template includes a set of static <<time-series-dimension,time series\ndimensions>>: `host`, `namespace`, `node`, and `pod`. The time series dimensions\nare not changed by the downsampling process.\n\n[source,console]\n----\nPUT _index_template/datastream_template\n{\n    \"index_patterns\": [\n        \"datastream*\"\n    ],\n    \"data_stream\": {},\n    \"template\": {\n        \"settings\": {\n            \"index\": {\n                \"mode\": \"time_series\",\n                \"number_of_replicas\": 0,\n                \"number_of_shards\": 2\n            },\n            \"index.lifecycle.name\": \"datastream_policy\"\n        },\n        \"mappings\": {\n            \"properties\": {\n                \"@timestamp\": {\n                    \"type\": \"date\"\n                },\n                \"kubernetes\": {\n                    \"properties\": {\n                        \"container\": {\n                            \"properties\": {\n                                \"cpu\": {\n                                    \"properties\": {\n                                        \"usage\": {\n                                            \"properties\": {\n                                                \"core\": {\n                                                    \"properties\": {\n                                                        \"ns\": {\n                                                            \"type\": \"long\"\n                                                        }\n                                                    }\n                                                },\n                                                \"limit\": {\n                                                    \"properties\": {\n                                                        \"pct\": {\n                                                            \"type\": \"float\"\n                                                        }\n                                                    }\n                                                },\n                                                \"nanocores\": {\n                                                    \"type\": \"long\",\n                                                    \"time_series_metric\": \"gauge\"\n                                                },\n                                                \"node\": {\n                                                    \"properties\": {\n                                                        \"pct\": {\n                                                            \"type\": \"float\"\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                \"memory\": {\n                                    \"properties\": {\n                                        \"available\": {\n                                            \"properties\": {\n                                                \"bytes\": {\n                                                    \"type\": \"long\",\n                                                    \"time_series_metric\": \"gauge\"\n                                                }\n                                            }\n                                        },\n                                        \"majorpagefaults\": {\n                                            \"type\": \"long\"\n                                        },\n                                        \"pagefaults\": {\n                                            \"type\": \"long\",\n                                            \"time_series_metric\": \"gauge\"\n                                        },\n                                        \"rss\": {\n                                            \"properties\": {\n                                                \"bytes\": {\n                                                    \"type\": \"long\",\n                                                    \"time_series_metric\": \"gauge\"\n                                                }\n                                            }\n                                        },\n                                        \"usage\": {\n                                            \"properties\": {\n                                                \"bytes\": {\n                                                    \"type\": \"long\",\n                                                    \"time_series_metric\": \"gauge\"\n                                                },\n                                                \"limit\": {\n                                                    \"properties\": {\n                                                        \"pct\": {\n                                                            \"type\": \"float\"\n                                                        }\n                                                    }\n                                                },\n                                                \"node\": {\n                                                    \"properties\": {\n                                                        \"pct\": {\n                                                            \"type\": \"float\"\n                                                        }\n                                                    }\n                                                }\n                                            }\n                                        },\n                                        \"workingset\": {\n                                            \"properties\": {\n                                                \"bytes\": {\n                                                    \"type\": \"long\",\n                                                    \"time_series_metric\": \"gauge\"\n                                                }\n                                            }\n                                        }\n                                    }\n                                },\n                                \"name\": {\n                                    \"type\": \"keyword\"\n                                },\n                                \"start_time\": {\n                                    \"type\": \"date\"\n                                }\n                            }\n                        },\n                        \"host\": {\n                            \"type\": \"keyword\",\n                            \"time_series_dimension\": true\n                        },\n                        \"namespace\": {\n                            \"type\": \"keyword\",\n                            \"time_series_dimension\": true\n                        },\n                        \"node\": {\n                            \"type\": \"keyword\",\n                            \"time_series_dimension\": true\n                        },\n                        \"pod\": {\n                            \"type\": \"keyword\",\n                            \"time_series_dimension\": true\n                        }\n                    }\n                }\n            }\n        }\n    }\n}\n----\n// TEST[continued]\n\n////\n[source,console]\n----\nDELETE _index_template/*\n----\n// TEST[continued]\n////\n\n[discrete]\n[[downsampling-ilm-ingest-data]]\n==== Ingest time series data\n\nUse a bulk API request to automatically create your TSDS and index a set of ten\ndocuments.\n\n**Important:** Before running this bulk request you need to update the\ntimestamps to within three to five hours after your current time. That is,\nsearch `2022-06-21T15` and replace with your present date, and adjust the hour\nto your current time plus three hours.\n\n[source,console]\n----\nPUT /datastream/_bulk?refresh\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:49:00Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":91153,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":463314616},\"usage\":{\"bytes\":307007078,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":585236},\"rss\":{\"bytes\":102728},\"pagefaults\":120901,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:45:50Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":124501,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":982546514},\"usage\":{\"bytes\":360035574,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":1339884},\"rss\":{\"bytes\":381174},\"pagefaults\":178473,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:44:50Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":38907,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":862723768},\"usage\":{\"bytes\":379572388,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":431227},\"rss\":{\"bytes\":386580},\"pagefaults\":233166,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:44:40Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":86706,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":567160996},\"usage\":{\"bytes\":103266017,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":1724908},\"rss\":{\"bytes\":105431},\"pagefaults\":233166,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:44:00Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":150069,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":639054643},\"usage\":{\"bytes\":265142477,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":1786511},\"rss\":{\"bytes\":189235},\"pagefaults\":138172,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:42:40Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":82260,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":854735585},\"usage\":{\"bytes\":309798052,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":924058},\"rss\":{\"bytes\":110838},\"pagefaults\":259073,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:42:10Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":153404,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":279586406},\"usage\":{\"bytes\":214904955,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":1047265},\"rss\":{\"bytes\":91914},\"pagefaults\":302252,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:40:20Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":125613,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":822782853},\"usage\":{\"bytes\":100475044,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":2109932},\"rss\":{\"bytes\":278446},\"pagefaults\":74843,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:40:10Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":100046,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":567160996},\"usage\":{\"bytes\":362826547,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":1986724},\"rss\":{\"bytes\":402801},\"pagefaults\":296495,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n{\"create\": {}}\n{\"@timestamp\":\"2022-06-21T15:38:30Z\",\"kubernetes\":{\"host\":\"gke-apps-0\",\"node\":\"gke-apps-0-0\",\"pod\":\"gke-apps-0-0-0\",\"container\":{\"cpu\":{\"usage\":{\"nanocores\":40018,\"core\":{\"ns\":12828317850},\"node\":{\"pct\":2.77905e-05},\"limit\":{\"pct\":2.77905e-05}}},\"memory\":{\"available\":{\"bytes\":1062428344},\"usage\":{\"bytes\":265142477,\"node\":{\"pct\":0.01770037710617187},\"limit\":{\"pct\":9.923134671484496e-05}},\"workingset\":{\"bytes\":2294743},\"rss\":{\"bytes\":340623},\"pagefaults\":224530,\"majorpagefaults\":0},\"start_time\":\"2021-03-30T07:59:06Z\",\"name\":\"container-name-44\"},\"namespace\":\"namespace26\"}}\n\n----\n// TEST[skip: The @timestamp value won't match an accepted range in the TSDS]\n\n[discrete]\n[[downsampling-ilm-view-results]]\n==== View the results\n\nNow that you've created and added documents to the data stream, check to confirm\nthe current state of the new index.\n\n[source,console]\n----\nGET _data_stream\n----\n// TEST[skip: The @timestamp value won't match an accepted range in the TSDS]\n\nIf the ILM policy has not yet been applied, your results will be like the\nfollowing. Note the original `index_name`: `.ds-datastream-<timestamp>-000001`.\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"datastream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \".ds-datastream-2022.08.26-000001\",\n          \"index_uuid\": \"5g-3HrfETga-5EFKBM6R-w\"\n        },\n        {\n          \"index_name\": \".ds-datastream-2022.08.26-000002\",\n          \"index_uuid\": \"o0yRTdhWSo2pY8XMvfwy7Q\"\n        }\n      ],\n      \"generation\": 2,\n      \"status\": \"GREEN\",\n      \"template\": \"datastream_template\",\n      \"ilm_policy\": \"datastream_policy\",\n      \"hidden\": false,\n      \"system\": false,\n      \"allow_custom_routing\": false,\n      \"replicated\": false,\n      \"rollover_on_write\": false,\n      \"time_series\": {\n        \"temporal_ranges\": [\n          {\n            \"start\": \"2022-08-26T13:29:07.000Z\",\n            \"end\": \"2022-08-26T19:29:07.000Z\"\n          }\n        ]\n      }\n    }\n  ]\n}\n----\n// TEST[skip:todo]\n// TEST[continued]\n\nNext, run a search query:\n\n[source,console]\n----\nGET datastream/_search\n----\n// TEST[skip: The @timestamp value won't match an accepted range in the TSDS]\n\nThe query returns your ten newly added documents.\n\n[source,console-result]\n----\n{\n  \"took\": 17,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 4,\n    \"successful\": 4,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": {\n      \"value\": 10,\n      \"relation\": \"eq\"\n    },\n...\n----\n// TEST[skip:todo]\n// TEST[continued]\n\nBy default, index lifecycle management checks every ten minutes for indices that\nmeet policy criteria. Wait for about ten minutes (maybe brew up a quick coffee\nor tea &#9749; ) and then re-run the `GET _data_stream` request.\n\n[source,console]\n----\nGET _data_stream\n----\n// TEST[skip: The @timestamp value won't match an accepted range in the TSDS]\n\nAfter the ILM policy has taken effect, the original\n`.ds-datastream-2022.08.26-000001` index is replaced with a new, downsampled\nindex, in this case `downsample-6tkn-.ds-datastream-2022.08.26-000001`.\n\n[source,console-result]\n----\n{\n  \"data_streams\": [\n    {\n      \"name\": \"datastream\",\n      \"timestamp_field\": {\n        \"name\": \"@timestamp\"\n      },\n      \"indices\": [\n        {\n          \"index_name\": \"downsample-6tkn-.ds-datastream-2022.08.26-000001\",\n          \"index_uuid\": \"qRane1fQQDCNgKQhXmTIvg\"\n        },\n        {\n          \"index_name\": \".ds-datastream-2022.08.26-000002\",\n          \"index_uuid\": \"o0yRTdhWSo2pY8XMvfwy7Q\"\n        }\n      ],\n...\n----\n// TEST[skip:todo]\n// TEST[continued]\n\nRun a search query on the datastream (note that when querying downsampled indices there are <<querying-downsampled-indices-notes,a few nuances to be aware of>>).\n\n[source,console]\n----\nGET datastream/_search\n----\n// TEST[continued]\n\nThe new downsampled index contains just one document that includes the `min`,\n`max`, `sum`, and `value_count` statistics based off of the original sampled\nmetrics.\n\n[source,console-result]\n----\n{\n  \"took\": 6,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 4,\n    \"successful\": 4,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": {\n      \"value\": 1,\n      \"relation\": \"eq\"\n    },\n    \"max_score\": 1,\n    \"hits\": [\n      {\n        \"_index\": \"downsample-6tkn-.ds-datastream-2022.08.26-000001\",\n        \"_id\": \"0eL0wC_4-45SnTNFAAABgtpz0wA\",\n        \"_score\": 1,\n        \"_source\": {\n          \"@timestamp\": \"2022-08-26T14:00:00.000Z\",\n          \"_doc_count\": 10,\n          \"kubernetes.host\": \"gke-apps-0\",\n          \"kubernetes.namespace\": \"namespace26\",\n          \"kubernetes.node\": \"gke-apps-0-0\",\n          \"kubernetes.pod\": \"gke-apps-0-0-0\",\n          \"kubernetes.container.cpu.usage.nanocores\": {\n            \"min\": 38907,\n            \"max\": 153404,\n            \"sum\": 992677,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.memory.available.bytes\": {\n            \"min\": 279586406,\n            \"max\": 1062428344,\n            \"sum\": 7101494721,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.memory.pagefaults\": {\n            \"min\": 74843,\n            \"max\": 302252,\n            \"sum\": 2061071,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.memory.rss.bytes\": {\n            \"min\": 91914,\n            \"max\": 402801,\n            \"sum\": 2389770,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.memory.usage.bytes\": {\n            \"min\": 100475044,\n            \"max\": 379572388,\n            \"sum\": 2668170609,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.memory.workingset.bytes\": {\n            \"min\": 431227,\n            \"max\": 2294743,\n            \"sum\": 14230488,\n            \"value_count\": 10\n          },\n          \"kubernetes.container.cpu.usage.core.ns\": 12828317850,\n          \"kubernetes.container.cpu.usage.limit.pct\": 0.000027790500098490156,\n          \"kubernetes.container.cpu.usage.node.pct\": 0.000027790500098490156,\n          \"kubernetes.container.memory.majorpagefaults\": 0,\n          \"kubernetes.container.memory.usage.limit.pct\": 0.00009923134348355234,\n          \"kubernetes.container.memory.usage.node.pct\": 0.017700377851724625,\n          \"kubernetes.container.name\": \"container-name-44\",\n          \"kubernetes.container.start_time\": \"2021-03-30T07:59:06.000Z\"\n        }\n      }\n    ]\n  }\n}\n----\n// TEST[skip:todo]\n// TEST[continued]\n\nUse the <<data-stream-stats-api,data stream stats API>> to get statistics for\nthe data stream, including the storage size.\n\n[source,console]\n----\nGET /_data_stream/datastream/_stats?human=true\n----\n// TEST[continued]\n\n[source,console-result]\n----\n{\n  \"_shards\": {\n    \"total\": 4,\n    \"successful\": 4,\n    \"failed\": 0\n  },\n  \"data_stream_count\": 1,\n  \"backing_indices\": 2,\n  \"total_store_size\": \"16.6kb\",\n  \"total_store_size_bytes\": 17059,\n  \"data_streams\": [\n    {\n      \"data_stream\": \"datastream\",\n      \"backing_indices\": 2,\n      \"store_size\": \"16.6kb\",\n      \"store_size_bytes\": 17059,\n      \"maximum_timestamp\": 1661522400000\n    }\n  ]\n}\n----\n// TEST[skip:todo]\n// TEST[continued]\n\nThis example demonstrates how downsampling works as part of an ILM policy to\nreduce the storage size of metrics data as it becomes less current and less\nfrequently queried.\n\nYou can also try our <<downsampling-manual,Run downsampling manually>>\nexample to learn how downsampling can work outside of an ILM policy.\n\n////\n[source,console]\n----\nDELETE _data_stream/*\nDELETE _index_template/*\nDELETE _ilm/policy/datastream_policy\n----\n// TEST[continued]\n////\n"
}