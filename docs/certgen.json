{
    "meta": {
        "timestamp": "2024-11-01T02:49:24.606065",
        "size": 6418,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/certgen.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "certgen",
        "version": "8.15"
    },
    "doc": "[[certgen]]\n== elasticsearch-certgen\n\ndeprecated[6.1,\"Replaced by <<certutil,`elasticsearch-certutil`>>.\"]\n\nThe `elasticsearch-certgen` command simplifies the creation of certificate\nauthorities (CA), certificate signing requests (CSR), and signed certificates\nfor use with the Elastic Stack. Though this command is deprecated, you do not\nneed to replace CAs, CSRs, or certificates that it created.\n\n[discrete]\n=== Synopsis\n\n[source,shell]\n--------------------------------------------------\nbin/elasticsearch-certgen\n(([--cert <cert_file>] [--days <n>] [--dn <name>] [--key <key_file>]\n[--keysize <bits>] [--pass <password>] [--p12 <password>])\n| [--csr])\n[-E <KeyValuePair>] [-h, --help] [--in <input_file>] [--out <output_file>]\n([-s, --silent] | [-v, --verbose])\n--------------------------------------------------\n\n[discrete]\n=== Description\n\nBy default, the command runs in interactive mode and you are prompted for\ninformation about each instance. An instance is any piece of the Elastic Stack\nthat requires a Transport Layer Security (TLS) or SSL certificate. Depending on\nyour configuration, {es}, Logstash, {kib}, and Beats might all require a\ncertificate and private key.\n\nThe minimum required value for each instance is a name. This can simply be the\nhostname, which is used as the Common Name of the certificate. You can also use\na full distinguished name. IP addresses and DNS names are optional. Multiple\nvalues can be specified as a comma separated string. If no IP addresses or DNS\nnames are provided, you might disable hostname verification in your TLS or SSL\nconfiguration.\n\nDepending on the parameters that you specify, you are also prompted for\nnecessary information such as the path for the output file and the CA private\nkey password.\n\nThe `elasticsearch-certgen` command also supports a silent mode of operation to\nenable easier batch operations. For more information, see <<certgen-silent>>.\n\nThe output file is a zip file that contains the signed certificates and private\nkeys for each instance. If you chose to generate a CA, which is the default\nbehavior, the certificate and private key are included in the output file. If\nyou chose to generate CSRs, you should provide them to your commercial or\norganization-specific certificate authority to obtain signed certificates. The\nsigned certificates must be in PEM format to work with the {stack}\n{security-features}.\n\n[discrete]\n[[certgen-parameters]]\n=== Parameters\n\n`--cert <cert_file>`:: Specifies to generate new instance certificates and keys\nusing an existing CA certificate, which is provided in the `<cert_file>` argument.\nThis parameter cannot be used with the `-csr` parameter.\n\n`--csr`:: Specifies to operate in certificate signing request mode.\n\n`--days <n>`::\nSpecifies an integer value that represents the number of days the generated keys\nare valid. The default value is `1095`. This parameter cannot be used with the\n`-csr` parameter.\n\n`--dn <name>`::\nDefines the _Distinguished Name_ that is used for the generated CA certificate.\nThe default value is `CN=Elastic Certificate Tool Autogenerated CA`.\nThis parameter cannot be used with the `-csr` parameter.\n\n`-E <KeyValuePair>`:: Configures a setting.\n\n`-h, --help`:: Returns all of the command parameters.\n\n`--in <input_file>`:: Specifies the file that is used to run in silent mode. The\ninput file must be a YAML file, as described in <<certgen-silent>>.\n\n`--key <key_file>`:: Specifies the _private-key_ file for the CA certificate.\nThis parameter is required whenever the `-cert` parameter is used.\n\n`--keysize <bits>`::\nDefines the number of bits that are used in generated RSA keys. The default\nvalue is `2048`.\n\n`--out <output_file>`:: Specifies a path for the output file.\n\n`--pass <password>`:: Specifies the password for the CA private key.\nIf the `-key` parameter is provided, then this is the password for the existing\nprivate key file. Otherwise, it is the password that should be applied to the\ngenerated CA key. This parameter cannot be used with the `-csr` parameter.\n\n`--p12 <password>`::\nGenerate a PKCS#12 (`.p12` or `.pfx`) container file for each of the instance\ncertificates and keys. The generated file is protected by the supplied password,\nwhich can be blank. This parameter cannot be used with the `-csr` parameter.\n\n`-s, --silent`:: Shows minimal output.\n\n`-v, --verbose`:: Shows verbose output.\n\n[discrete]\n=== Examples\n\n[discrete]\n[[certgen-silent]]\n==== Using `elasticsearch-certgen` in Silent Mode\n\nTo use the silent mode of operation, you must create a YAML file that contains\ninformation about the instances. It must match the following format:\n\n[source, yaml]\n--------------------------------------------------\ninstances:\n  - name: \"node1\" <1>\n    ip: <2>\n      - \"192.0.2.1\"\n    dns: <3>\n      - \"node1.mydomain.com\"\n  - name: \"node2\"\n    ip:\n      - \"192.0.2.2\"\n      - \"198.51.100.1\"\n  - name: \"node3\"\n  - name: \"node4\"\n    dns:\n      - \"node4.mydomain.com\"\n      - \"node4.internal\"\n  - name: \"CN=node5,OU=IT,DC=mydomain,DC=com\"\n    filename: \"node5\" <4>\n--------------------------------------------------\n<1> The name of the instance. This can be a simple string value or can be a\nDistinguished Name (DN). This is the only required field.\n<2> An optional array of strings that represent IP Addresses for this instance.\nBoth IPv4 and IPv6 values are allowed. The values are added as Subject\nAlternative Names.\n<3> An optional array of strings that represent DNS names for this instance.\nThe values are added as Subject Alternative Names.\n<4> The filename to use for this instance. This name is used as the name of the\ndirectory that contains the instance's files in the output. It is also used in\nthe names of the files within the directory. This filename should not have an\nextension. Note: If the `name` provided for the instance does not represent a\nvalid filename, then the `filename` field must be present.\n\nWhen your YAML file is ready, you can use the `elasticsearch-certgen` command to\ngenerate certificates or certificate signing requests. Simply use the `-in`\nparameter to specify the location of the file. For example:\n\n[source, sh]\n--------------------------------------------------\nbin/elasticsearch-certgen -in instances.yml\n--------------------------------------------------\n\nThis command generates a CA certificate and private key as well as certificates\nand private keys for the instances that are listed in the YAML file.\n"
}