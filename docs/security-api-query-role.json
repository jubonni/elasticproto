{
    "meta": {
        "size": 7882,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-query-role.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "security-api-query-role",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-query-role]]\n=== Query Role API\n\n++++\n<titleabbrev>Query Role</titleabbrev>\n++++\n\nRetrieves roles with <<query-dsl,Query DSL>> in a <<paginate-search-results,paginated>> fashion.\n\n[[security-api-query-role-request]]\n==== {api-request-title}\n\n`GET /_security/_query/role`\n\n`POST /_security/_query/role`\n\n[[security-api-query-role-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have at least the  `read_security` cluster privilege.\n\n[[security-api-query-role-desc]]\n==== {api-description-title}\n\nThe role management APIs are generally the preferred way to manage roles, rather than using\n<<roles-management-file,file-based role management>>.\nThe query roles API does not retrieve roles that are defined in roles files, nor <<built-in-roles,built-in>> ones.\nYou can optionally filter the results with a query. Also, the results can be paginated and sorted.\n\n[[security-api-query-role-request-body]]\n==== {api-request-body-title}\n\nYou can specify the following parameters in the request body:\n\n`query`::\n(Optional, string) A <<query-dsl,query>> to filter which roles to return.\nThe query supports a subset of query types, including\n<<query-dsl-match-all-query,`match_all`>>, <<query-dsl-bool-query,`bool`>>,\n<<query-dsl-term-query,`term`>>, <<query-dsl-terms-query,`terms`>>,\n<<query-dsl-match-query,`match`>>, <<query-dsl-ids-query,`ids`>>,\n<<query-dsl-prefix-query,`prefix`>>, <<query-dsl-wildcard-query,`wildcard`>>,\n<<query-dsl-exists-query,`exists`>>, <<query-dsl-range-query,`range`>>,\nand <<query-dsl-simple-query-string-query,`simple query string`>>.\n+\nYou can query the following values associated with a role.\n+\n.Valid values for `query`\n[%collapsible%open]\n====\n`name`::\n(keyword) The <<security-api-put-role-path-params,name>> of the role.\n\n`description`::\n(text) The <<defining-roles,description>> of the role.\n\n`metadata`::\n(flattened) Metadata field associated with the <<defining-roles,role>>, such as `metadata.app_tag`.\nNote that metadata is internally indexed as a <<flattened,flattened>> field type.\nThis means that all sub-fields act like `keyword` fields when querying and sorting.\nIt also implies that it is not possible to refer to a subset of metadata fields using wildcard patterns,\ne.g. `metadata.field*`, even for query types that support field name patterns.\nLastly, all the metadata fields can be searched together when simply mentioning the\n`metadata` field (i.e. not followed by any dot and sub-field name).\n\n`applications`::\nThe list of <<roles-application-priv,application privileges>> that the role grants.\n\n`application`:::\n(keyword) The name of the application associated to the privileges and resources.\n\n`privileges`:::\n(keyword) The names of the privileges that the role grants.\n\n`resources`:::\n(keyword) The resources to which the privileges apply.\n\n====\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=from]\n+\nBy default, you cannot page through more than 10,000 hits using the `from` and\n`size` parameters. To page through more hits, use the\n<<search-after,`search_after`>> parameter.\n\n`size`::\n(Optional, integer) The number of hits to return. Must not be negative and defaults to `10`.\n+\nBy default, you cannot page through more than 10,000 hits using the `from` and\n`size` parameters. To page through more hits, use the\n<<search-after,`search_after`>> parameter.\n\n`sort`::\n(Optional, object) <<sort-search-results,Sort definition>>. You can sort on `username`, `roles` or `enabled`.\nIn addition, sort can also be applied to the `_doc` field to sort by index order.\n\n`search_after`::\n(Optional, array) <<search-after,Search after>> definition.\n\n\n[[security-api-query-role-response-body]]\n==== {api-response-body-title}\n\nThis API returns the following top level fields:\n\n`total`::\nThe total number of roles found.\n\n`count`::\nThe number of roles returned in the response.\n\n`roles`::\nA list of roles that match the query.\nThe returned role format is an extension of the <<defining-roles,role definition>> format.\nIt adds the `transient_metadata.enabled` and the `_sort` fields.\n`transient_metadata.enabled` is set to `false` in case the role is automatically disabled,\nfor example when the role grants privileges that are not allowed by the installed license.\n`_sort` is present when the search query sorts on some field.\nIt contains the array of values that have been used for sorting.\n\n[[security-api-query-role-example]]\n==== {api-examples-title}\n\nThe following request lists all roles, sorted by the role name:\n\n[source,console]\n----\nPOST /_security/_query/role\n{\n    \"sort\": [\"name\"]\n}\n----\n// TEST[setup:admin_role,user_role]\n\nA successful call returns a JSON structure that contains the information\nretrieved for one or more roles:\n\n[source,console-result]\n----\n{\n    \"total\": 2,\n    \"count\": 2,\n    \"roles\": [ <1>\n        {\n          \"name\" : \"my_admin_role\",\n          \"cluster\" : [\n            \"all\"\n          ],\n          \"indices\" : [\n            {\n              \"names\" : [\n                \"index1\",\n                \"index2\"\n              ],\n              \"privileges\" : [\n                \"all\"\n              ],\n              \"field_security\" : {\n                \"grant\" : [\n                  \"title\",\n                  \"body\"\n                ]\n              },\n              \"allow_restricted_indices\" : false\n            }\n          ],\n          \"applications\" : [ ],\n          \"run_as\" : [\n            \"other_user\"\n          ],\n          \"metadata\" : {\n            \"version\" : 1\n          },\n          \"transient_metadata\" : {\n            \"enabled\" : true\n          },\n          \"description\" : \"Grants full access to all management features within the cluster.\",\n          \"_sort\" : [\n            \"my_admin_role\"\n          ]\n        },\n        {\n          \"name\" : \"my_user_role\",\n          \"cluster\" : [ ],\n          \"indices\" : [\n            {\n              \"names\" : [\n                \"index1\",\n                \"index2\"\n              ],\n              \"privileges\" : [\n                \"all\"\n              ],\n              \"field_security\" : {\n                \"grant\" : [\n                  \"title\",\n                  \"body\"\n                ]\n              },\n              \"allow_restricted_indices\" : false\n            }\n          ],\n          \"applications\" : [ ],\n          \"run_as\" : [ ],\n          \"metadata\" : {\n            \"version\" : 1\n          },\n          \"transient_metadata\" : {\n            \"enabled\" : true\n          },\n          \"description\" : \"Grants user access to some indicies.\",\n          \"_sort\" : [\n            \"my_user_role\"\n          ]\n        }\n    ]\n}\n----\n// TEST[continued]\n\n<1> The list of roles that were retrieved for this request\n\nSimilarly, the following request can be used to query only the user access role,\ngiven its description:\n\n[source,console]\n----\nPOST /_security/_query/role\n{\n  \"query\": {\n    \"match\": {\n      \"description\": {\n        \"query\": \"user access\"\n      }\n    }\n  },\n  \"size\": 1 <1>\n}\n----\n// TEST[continued]\n\n<1> Return only the best matching role\n\n[source,console-result]\n----\n{\n    \"total\": 2,\n    \"count\": 1,\n    \"roles\": [\n        {\n          \"name\" : \"my_user_role\",\n          \"cluster\" : [ ],\n          \"indices\" : [\n            {\n              \"names\" : [\n                \"index1\",\n                \"index2\"\n              ],\n              \"privileges\" : [\n                \"all\"\n              ],\n              \"field_security\" : {\n                \"grant\" : [\n                  \"title\",\n                  \"body\"\n                ]\n              },\n              \"allow_restricted_indices\" : false\n            }\n          ],\n          \"applications\" : [ ],\n          \"run_as\" : [ ],\n          \"metadata\" : {\n            \"version\" : 1\n          },\n          \"transient_metadata\" : {\n            \"enabled\" : true\n          },\n          \"description\" : \"Grants user access to some indicies.\"\n        }\n    ]\n}\n----\n"
}