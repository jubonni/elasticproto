{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.820593",
        "size": 4461,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-bucket-iprange-aggregation.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "search-aggregations-bucket-iprange-aggregation",
        "version": "8.15"
    },
    "doc": "[[search-aggregations-bucket-iprange-aggregation]]\n=== IP range aggregation\n++++\n<titleabbrev>IP range</titleabbrev>\n++++\n\nJust like the dedicated <<search-aggregations-bucket-daterange-aggregation,date>> range aggregation, there is also a dedicated range aggregation for IP typed fields:\n\nExample:\n\n[source,console,id=ip-range-example]\n--------------------------------------------------\nGET /ip_addresses/_search\n{\n  \"size\": 10,\n  \"aggs\": {\n    \"ip_ranges\": {\n      \"ip_range\": {\n        \"field\": \"ip\",\n        \"ranges\": [\n          { \"to\": \"10.0.0.5\" },\n          { \"from\": \"10.0.0.5\" }\n        ]\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:iprange]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ip_ranges\": {\n      \"buckets\": [\n        {\n          \"key\": \"*-10.0.0.5\",\n          \"to\": \"10.0.0.5\",\n          \"doc_count\": 10\n        },\n        {\n          \"key\": \"10.0.0.5-*\",\n          \"from\": \"10.0.0.5\",\n          \"doc_count\": 260\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\nIP ranges can also be defined as CIDR masks:\n\n[source,console,id=ip-range-cidr-example]\n--------------------------------------------------\nGET /ip_addresses/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ip_ranges\": {\n      \"ip_range\": {\n        \"field\": \"ip\",\n        \"ranges\": [\n          { \"mask\": \"10.0.0.0/25\" },\n          { \"mask\": \"10.0.0.127/25\" }\n        ]\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:iprange]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ip_ranges\": {\n      \"buckets\": [\n        {\n          \"key\": \"10.0.0.0/25\",\n          \"from\": \"10.0.0.0\",\n          \"to\": \"10.0.0.128\",\n          \"doc_count\": 128\n        },\n        {\n          \"key\": \"10.0.0.127/25\",\n          \"from\": \"10.0.0.0\",\n          \"to\": \"10.0.0.128\",\n          \"doc_count\": 128\n        }\n      ]\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\n==== Keyed Response\n\nSetting the `keyed` flag to `true` will associate a unique string key with each bucket and return the ranges as a hash rather than an array:\n\n[source,console,id=ip-range-keyed-example]\n--------------------------------------------------\nGET /ip_addresses/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ip_ranges\": {\n      \"ip_range\": {\n        \"field\": \"ip\",\n        \"ranges\": [\n          { \"to\": \"10.0.0.5\" },\n          { \"from\": \"10.0.0.5\" }\n        ],\n        \"keyed\": true\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:iprange]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ip_ranges\": {\n      \"buckets\": {\n        \"*-10.0.0.5\": {\n          \"to\": \"10.0.0.5\",\n          \"doc_count\": 10\n        },\n        \"10.0.0.5-*\": {\n          \"from\": \"10.0.0.5\",\n          \"doc_count\": 260\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n\nIt is also possible to customize the key for each range:\n\n[source,console,id=ip-range-keyed-customized-keys-example]\n--------------------------------------------------\nGET /ip_addresses/_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"ip_ranges\": {\n      \"ip_range\": {\n        \"field\": \"ip\",\n        \"ranges\": [\n          { \"key\": \"infinity\", \"to\": \"10.0.0.5\" },\n          { \"key\": \"and-beyond\", \"from\": \"10.0.0.5\" }\n        ],\n        \"keyed\": true\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:iprange]\n\nResponse:\n\n[source,console-result]\n--------------------------------------------------\n{\n  ...\n\n  \"aggregations\": {\n    \"ip_ranges\": {\n      \"buckets\": {\n        \"infinity\": {\n          \"to\": \"10.0.0.5\",\n          \"doc_count\": 10\n        },\n        \"and-beyond\": {\n          \"from\": \"10.0.0.5\",\n          \"doc_count\": 260\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\\.\\.\\./\"took\": $body.took,\"timed_out\": false,\"_shards\": $body._shards,\"hits\": $body.hits,/]\n"
}