{
    "meta": {
        "size": 6461,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/data-streams.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "data-streams",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[data-streams]]\n= Data streams\n++++\n<titleabbrev>Data streams</titleabbrev>\n++++\n\nA data stream lets you store append-only time series\ndata across multiple indices while giving you a single named resource for\nrequests. Data streams are well-suited for logs, events, metrics, and other\ncontinuously generated data.\n\nYou can submit indexing and search requests directly to a data stream. The\nstream automatically routes the request to backing indices that store the\nstream's data. You can use <<index-lifecycle-management,{ilm} ({ilm-init})>> to\nautomate the management of these backing indices. For example, you can use\n{ilm-init} to automatically move older backing indices to less expensive\nhardware and delete unneeded indices. {ilm-init} can help you reduce costs and\noverhead as your data grows.\n\n\n[discrete]\n[[should-you-use-a-data-stream]]\n== Should you use a data stream?\n\nTo determine whether you should use a data stream for your data, you should consider the format of\nthe data, and your expected interaction. A good candidate for using a data stream will match the\nfollowing criteria:\n\n* Your data contains a timestamp field, or one could be automatically generated.\n* You mostly perform indexing requests, with occasional updates and deletes.\n* You index documents without an `_id`, or when indexing documents with an explicit `_id` you expect first-write-wins behavior.\n\nFor most time series data use-cases, a data stream will be a good fit. However, if you find that\nyour data doesn't fit into these categories (for example, if you frequently send multiple documents\nusing the same `_id` expecting last-write-wins), you may want to use an index alias with a write\nindex instead. See documentation for <<manage-time-series-data-without-data-streams,managing time\nseries data without a data stream>> for more information.\n\nKeep in mind that some features such as <<tsds,Time Series Data Streams (TSDS)>> and\n<<data-stream-lifecycle,data stream lifecycles>> require a data stream.\n\n[discrete]\n[[backing-indices]]\n== Backing indices\n\nA data stream consists of one or more <<index-hidden,hidden>>, auto-generated\nbacking indices.\n\nimage::images/data-streams/data-streams-diagram.svg[align=\"center\"]\n\nA data stream requires a matching <<index-templates,index template>>. The\ntemplate contains the mappings and settings used to configure the stream's\nbacking indices.\n\n// tag::timestamp-reqs[]\nEvery document indexed to a data stream must contain a `@timestamp` field,\nmapped as a <<date,`date`>> or <<date_nanos,`date_nanos`>> field type. If the\nindex template doesn't specify a mapping for the `@timestamp` field, {es} maps\n`@timestamp` as a `date` field with default options.\n// end::timestamp-reqs[]\n\nThe same index template can be used for multiple data streams. You cannot\ndelete an index template in use by a data stream.\n\nThe name pattern for the backing indices is an implementation detail and no\nintelligence should be derived from it. The only invariant the holds is that\neach data stream generation index will have a unique name.\n\n[discrete]\n[[data-stream-read-requests]]\n== Read requests\n\nWhen you submit a read request to a data stream, the stream routes the request\nto all its backing indices.\n\nimage::images/data-streams/data-streams-search-request.svg[align=\"center\"]\n\n[discrete]\n[[data-stream-write-index]]\n== Write index\n\nThe most recently created backing index is the data stream\u2019s write index.\nThe stream adds new documents to this index only.\n\nimage::images/data-streams/data-streams-index-request.svg[align=\"center\"]\n\nYou cannot add new documents to other backing indices, even by sending requests\ndirectly to the index.\n\nYou also cannot perform operations on a write index that may hinder indexing,\nsuch as:\n\n* <<indices-clone-index,Clone>>\n* <<indices-delete-index,Delete>>\n* <<indices-shrink-index,Shrink>>\n* <<indices-split-index,Split>>\n\n[discrete]\n[[data-streams-rollover]]\n== Rollover\n\nA <<indices-rollover-index,rollover>> creates a new backing index that becomes\nthe stream's new write index.\n\nWe recommend using <<index-lifecycle-management,{ilm-init}>> to automatically\nroll over data streams when the write index reaches a specified age or size.\nIf needed, you can also <<manually-roll-over-a-data-stream,manually roll over>>\na data stream.\n\n[discrete]\n[[data-streams-generation]]\n== Generation\n\nEach data stream tracks its generation: a six-digit, zero-padded integer starting at `000001`.\n\nWhen a backing index is created, the index is named using the following\nconvention:\n\n[source,text]\n----\n.ds-<data-stream>-<yyyy.MM.dd>-<generation>\n----\n\n`<yyyy.MM.dd>` is the backing index's creation date. Backing indices with a\nhigher generation contain more recent data. For example, the `web-server-logs`\ndata stream has a generation of `34`. The stream's most recent backing index,\ncreated on 7 March 2099, is named `.ds-web-server-logs-2099.03.07-000034`.\n\nSome operations, such as a <<indices-shrink-index,shrink>> or\n<<snapshots-restore-snapshot,restore>>, can change a backing index's name.\nThese name changes do not remove a backing index from its data stream.\n\nThe generation of the data stream can change without a new index being added to\nthe data stream (e.g. when an existing backing index is shrunk). This means the\nbacking indices for some generations will never exist.\nYou should not derive any intelligence from the backing indices names.\n\n[discrete]\n[[data-streams-append-only]]\n== Append-only (mostly)\n\nData streams are designed for use cases where existing data is rarely updated. You cannot send\nupdate or deletion requests for existing documents directly to a data stream. However, you can still\n<<update-delete-docs-in-a-backing-index,update or delete documents>> in a data stream by submitting\nrequests directly to the document's backing index.\n\nIf you need to update a larger number of documents in a data stream, you can use the\n<<update-docs-in-a-data-stream-by-query,update by query>> and\n<<delete-docs-in-a-data-stream-by-query,delete by query>> APIs.\n\nTIP: If you frequently send multiple documents using the same `_id` expecting last-write-wins, you\nmay want to use an index alias with a write index instead. See\n<<manage-time-series-data-without-data-streams>>.\n\ninclude::set-up-a-data-stream.asciidoc[]\ninclude::use-a-data-stream.asciidoc[]\ninclude::change-mappings-and-settings.asciidoc[]\ninclude::tsds.asciidoc[]\ninclude::logs.asciidoc[]\ninclude::lifecycle/index.asciidoc[]\n"
}