{
    "meta": {
        "timestamp": "2024-11-01T03:07:08.998271",
        "size": 3771,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-count.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "search-count",
        "version": "8.15"
    },
    "doc": "[[search-count]]\n=== Count API\n++++\n<titleabbrev>Count</titleabbrev>\n++++\n\nGets the number of matches for a search query.\n\n[source,console]\n--------------------------------------------------\nGET /my-index-000001/_count?q=user:kimchy\n--------------------------------------------------\n// TEST[setup:my_index]\n\nNOTE: The query being sent in the body must be nested in a `query` key, same as\nthe <<search-search,search API>> works.\n\n\n[[search-count-api-request]]\n==== {api-request-title}\n\n`GET /<target>/_count`\n\n[[search-count-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the `read`\n<<privileges-list-indices,index privilege>> for the target data stream, index,\nor alias.\n\n\n[[search-count-api-desc]]\n==== {api-description-title}\n\nThe count API allows you to execute a query and get the number of matches for\nthat query. The query can either\nbe provided using a simple query string as a parameter, or using the\n<<query-dsl,Query DSL>> defined within the request body.\n\nThe count API supports <<api-multi-index,multi-target syntax>>. You can run a single\ncount API search across multiple data streams and indices.\n\nThe operation is broadcast across all shards. For each shard id group, a replica\nis chosen and executed against it. This means that replicas increase the\nscalability of count.\n\n\n[[search-count-api-path-params]]\n==== {api-path-parms-title}\n\n`<target>`::\n(Optional, string) Comma-separated list of data streams, indices, and aliases to\nsearch. Supports wildcards (`*`). To search all data streams and indices, omit\nthis parameter or use `*` or `_all`.\n\n[[search-count-api-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=allow-no-indices]\n+\nDefaults to `true`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=analyzer]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=analyze_wildcard]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=default_operator]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=df]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=expand-wildcards]\n+\nDefaults to `open`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=ignore_throttled]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=index-ignore-unavailable]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=lenient]\n\n`min_score`::\n(Optional, float)\n  Sets the minimum `_score` value that documents must have to be included in the\n  result.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=preference]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=search-q]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=routing]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=terminate_after]\n\n\n[[search-count-request-body]]\n==== {api-request-body-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=query]\n\n\n[[search-count-api-example]]\n==== {api-examples-title}\n\n[source,console]\n--------------------------------------------------\nPUT /my-index-000001/_doc/1?refresh\n{\n  \"user.id\": \"kimchy\"\n}\n\nGET /my-index-000001/_count?q=user:kimchy\n\nGET /my-index-000001/_count\n{\n  \"query\" : {\n    \"term\" : { \"user.id\" : \"kimchy\" }\n  }\n}\n--------------------------------------------------\n\nBoth examples above do the same: count the number of documents in\n`my-index-000001` with a `user.id` of `kimchy`. The API returns the following response:\n\n[source,console-result]\n--------------------------------------------------\n{\n  \"count\": 1,\n  \"_shards\": {\n    \"total\": 1,\n    \"successful\": 1,\n    \"skipped\": 0,\n    \"failed\": 0\n  }\n}\n--------------------------------------------------\n\nThe query is optional, and when not provided, it will use `match_all` to\ncount all the docs.\n"
}