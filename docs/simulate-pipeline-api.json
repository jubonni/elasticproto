{
    "meta": {
        "size": 9367,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/simulate-pipeline-api.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": false,
        "title": "simulate-pipeline-api",
        "version": "8.15"
    },
    "doc": "\n[[simulate-pipeline-api]]\n=== Simulate pipeline API\n++++\n<titleabbrev>Simulate pipeline</titleabbrev>\n++++\n\nExecutes an ingest pipeline against\na set of provided documents.\n\n////\n[source,console]\n----\nPUT /_ingest/pipeline/my-pipeline-id\n{\n  \"description\" : \"example pipeline to simulate\",\n      \"processors\": [\n      {\n        \"set\" : {\n          \"field\" : \"field2\",\n          \"value\" : \"_value\"\n        }\n      }\n    ]\n}\n----\n// TESTSETUP\n////\n\n[source,console]\n----\nPOST /_ingest/pipeline/my-pipeline-id/_simulate\n{\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"bar\"\n      }\n    },\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"rab\"\n      }\n    }\n  ]\n}\n----\n\n\n[[simulate-pipeline-api-request]]\n==== {api-request-title}\n\n`POST /_ingest/pipeline/<pipeline>/_simulate`\n\n`GET /_ingest/pipeline/<pipeline>/_simulate`\n\n`POST /_ingest/pipeline/_simulate`\n\n`GET /_ingest/pipeline/_simulate`\n\n[[simulate-pipeline-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`read_pipeline`, `manage_pipeline`, `manage_ingest_pipelines`, or `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API.\n\n[[simulate-pipeline-api-desc]]\n==== {api-description-title}\n\nThe simulate pipeline API executes a specific pipeline\nagainst a set of documents provided in the body of the request.\n\nYou can either specify an existing pipeline\nto execute against the provided documents\nor supply a pipeline definition in the body of the request.\n\n\n[[simulate-pipeline-api-path-params]]\n==== {api-path-parms-title}\n\n`<pipeline>`::\n(Required*, string)\nPipeline to test. If you don't specify a `pipeline` in the request body, this\nparameter is required.\n\n[[simulate-pipeline-api-query-params]]\n==== {api-query-parms-title}\n\n`verbose`::\n(Optional, Boolean)\nIf `true`,\nthe response includes output data\nfor each processor in the executed pipeline.\n\n\n[role=\"child_attributes\"]\n[[simulate-pipeline-api-request-body]]\n==== {api-request-body-title}\n\n`pipeline`::\n(Required*, object)\nPipeline to test. If you don't specify the `<pipeline>` request path parameter,\nthis parameter is required. If you specify both this and the request path\nparameter, the API only uses the request path parameter.\n+\n.Properties of `pipeline`\n[%collapsible%open]\n====\ninclude::put-pipeline.asciidoc[tag=pipeline-object]\n====\n\n`docs`::\n(Required, array of objects)\nSample documents to test in the pipeline.\n+\n.Properties of `docs` objects\n[%collapsible%open]\n====\n`_id`::\n(Optional, string)\nUnique identifier for the document. This ID must be unique within the `_index`.\n\n`_index`::\n(Optional, string)\nName of the index containing the document.\n\n`_routing`::\n(Optional, string)\nValue used to send the document to a specific primary shard. See the\n<<mapping-routing-field,`_routing`>> field.\n\n`_source`::\n(Required, object)\nJSON body for the document.\n====\n\n[[simulate-pipeline-api-example]]\n==== {api-examples-title}\n\n\n[[simulate-pipeline-api-path-parm-ex]]\n===== Specify a pipeline as a path parameter\n\n[source,console]\n----\nPOST /_ingest/pipeline/my-pipeline-id/_simulate\n{\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"bar\"\n      }\n    },\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"rab\"\n      }\n    }\n  ]\n}\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n   \"docs\": [\n      {\n         \"doc\": {\n            \"_id\": \"id\",\n            \"_index\": \"index\",\n            \"_version\": \"-3\",\n            \"_source\": {\n               \"field2\": \"_value\",\n               \"foo\": \"bar\"\n            },\n            \"_ingest\": {\n               \"timestamp\": \"2017-05-04T22:30:03.187Z\"\n            }\n         }\n      },\n      {\n         \"doc\": {\n            \"_id\": \"id\",\n            \"_index\": \"index\",\n            \"_version\": \"-3\",\n            \"_source\": {\n               \"field2\": \"_value\",\n               \"foo\": \"rab\"\n            },\n            \"_ingest\": {\n               \"timestamp\": \"2017-05-04T22:30:03.188Z\"\n            }\n         }\n      }\n   ]\n}\n----\n// TESTRESPONSE[s/\"2017-05-04T22:30:03.187Z\"/$body.docs.0.doc._ingest.timestamp/]\n// TESTRESPONSE[s/\"2017-05-04T22:30:03.188Z\"/$body.docs.1.doc._ingest.timestamp/]\n\n\n[[simulate-pipeline-api-request-body-ex]]\n===== Specify a pipeline in the request body\n\n[source,console]\n----\nPOST /_ingest/pipeline/_simulate\n{\n  \"pipeline\" :\n  {\n    \"description\": \"_description\",\n    \"processors\": [\n      {\n        \"set\" : {\n          \"field\" : \"field2\",\n          \"value\" : \"_value\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"bar\"\n      }\n    },\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"rab\"\n      }\n    }\n  ]\n}\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n   \"docs\": [\n      {\n         \"doc\": {\n            \"_id\": \"id\",\n            \"_index\": \"index\",\n            \"_version\": \"-3\",\n            \"_source\": {\n               \"field2\": \"_value\",\n               \"foo\": \"bar\"\n            },\n            \"_ingest\": {\n               \"timestamp\": \"2017-05-04T22:30:03.187Z\"\n            }\n         }\n      },\n      {\n         \"doc\": {\n            \"_id\": \"id\",\n            \"_index\": \"index\",\n            \"_version\": \"-3\",\n            \"_source\": {\n               \"field2\": \"_value\",\n               \"foo\": \"rab\"\n            },\n            \"_ingest\": {\n               \"timestamp\": \"2017-05-04T22:30:03.188Z\"\n            }\n         }\n      }\n   ]\n}\n----\n// TESTRESPONSE[s/\"2017-05-04T22:30:03.187Z\"/$body.docs.0.doc._ingest.timestamp/]\n// TESTRESPONSE[s/\"2017-05-04T22:30:03.188Z\"/$body.docs.1.doc._ingest.timestamp/]\n\n\n[[ingest-verbose-param]]\n===== View verbose results\n\nYou can use the simulate pipeline API\nto see how each processor affects the ingest document\nas it passes through the pipeline.\nTo see the intermediate results\nof each processor in the simulate request,\nyou can add the `verbose` parameter to the request.\n\n[source,console]\n----\nPOST /_ingest/pipeline/_simulate?verbose=true\n{\n  \"pipeline\" :\n  {\n    \"description\": \"_description\",\n    \"processors\": [\n      {\n        \"set\" : {\n          \"field\" : \"field2\",\n          \"value\" : \"_value2\"\n        }\n      },\n      {\n        \"set\" : {\n          \"field\" : \"field3\",\n          \"value\" : \"_value3\"\n        }\n      }\n    ]\n  },\n  \"docs\": [\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"bar\"\n      }\n    },\n    {\n      \"_index\": \"index\",\n      \"_id\": \"id\",\n      \"_source\": {\n        \"foo\": \"rab\"\n      }\n    }\n  ]\n}\n----\n\nThe API returns the following response:\n\n[source,console-result]\n----\n{\n  \"docs\" : [\n    {\n      \"processor_results\" : [\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_version\": \"-3\",\n            \"_source\" : {\n              \"field2\" : \"_value2\",\n              \"foo\" : \"bar\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:21:24.251836Z\"\n            }\n          }\n        },\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_version\": \"-3\",\n            \"_source\" : {\n              \"field3\" : \"_value3\",\n              \"field2\" : \"_value2\",\n              \"foo\" : \"bar\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:21:24.251836Z\"\n            }\n          }\n        }\n      ]\n    },\n    {\n      \"processor_results\" : [\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_version\": \"-3\",\n            \"_source\" : {\n              \"field2\" : \"_value2\",\n              \"foo\" : \"rab\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:21:24.251863Z\"\n            }\n          }\n        },\n        {\n          \"processor_type\" : \"set\",\n          \"status\" : \"success\",\n          \"doc\" : {\n            \"_index\" : \"index\",\n            \"_id\" : \"id\",\n            \"_version\": \"-3\",\n            \"_source\" : {\n              \"field3\" : \"_value3\",\n              \"field2\" : \"_value2\",\n              \"foo\" : \"rab\"\n            },\n            \"_ingest\" : {\n              \"pipeline\" : \"_simulate_pipeline\",\n              \"timestamp\" : \"2020-07-30T01:21:24.251863Z\"\n            }\n          }\n        }\n      ]\n    }\n  ]\n}\n----\n// TESTRESPONSE[s/\"2020-07-30T01:21:24.251836Z\"/$body.docs.0.processor_results.0.doc._ingest.timestamp/]\n// TESTRESPONSE[s/\"2020-07-30T01:21:24.251836Z\"/$body.docs.0.processor_results.1.doc._ingest.timestamp/]\n// TESTRESPONSE[s/\"2020-07-30T01:21:24.251863Z\"/$body.docs.1.processor_results.0.doc._ingest.timestamp/]\n// TESTRESPONSE[s/\"2020-07-30T01:21:24.251863Z\"/$body.docs.1.processor_results.1.doc._ingest.timestamp/]\n\n////\n[source,console]\n----\nDELETE /_ingest/pipeline/*\n----\n\n[source,console-result]\n----\n{\n\"acknowledged\": true\n}\n----\n////\n"
}