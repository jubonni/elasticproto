{
    "meta": {
        "size": 8353,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/sql-jdbc.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "sql-jdbc",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[sql-jdbc]]\n== SQL JDBC\n\n{es}'s SQL jdbc driver is a rich, fully featured JDBC driver for {es}.\nIt is Type 4 driver, meaning it is a platform independent, stand-alone, Direct to Database,\npure Java driver that converts JDBC calls to {es-sql}.\n\n[[sql-jdbc-installation]]\n[discrete]\n=== Installation\n\nThe JDBC driver can be obtained from:\n\nDedicated page::\nhttps://www.elastic.co/downloads/jdbc-client[elastic.co] provides links, typically for manual downloads.\nMaven dependency::\nhttps://maven.apache.org/[Maven]-compatible tools can retrieve it automatically as a dependency:\n\n[\"source\",\"xml\",subs=\"attributes\"]\n----\n<dependency>\n  <groupId>org.elasticsearch.plugin</groupId>\n  <artifactId>x-pack-sql-jdbc</artifactId>\n  <version>{version}</version>\n</dependency>\n----\n\nfrom https://search.maven.org/artifact/org.elasticsearch.plugin/x-pack-sql-jdbc[Maven Central Repository],\nor from `artifacts.elastic.co/maven` by adding it to the repositories list:\n\n[\"source\",\"xml\",subs=\"attributes\"]\n----\n<repositories>\n  <repository>\n    <id>elastic.co</id>\n    <url>https://artifacts.elastic.co/maven</url>\n  </repository>\n</repositories>\n----\n\n[[jdbc-compatibility]]\n[discrete]\n=== Version compatibility\n\ninclude::version-compat.asciidoc[]\n\n[[jdbc-setup]]\n[discrete]\n=== Setup\n\nThe driver main class is `org.elasticsearch.xpack.sql.jdbc.EsDriver`.\nNote the driver implements the JDBC 4.0 +Service Provider+ mechanism meaning it is registered automatically\nas long as it is available in the classpath.\n\nOnce registered, the driver understands the following syntax as an URL:\n\n[\"source\",\"text\",subs=\"attributes\"]\n----\njdbc:[es|elasticsearch]://[[http|https]://]?[host[:port]]?/[prefix]?[\\?[option=value]&]*\n----\n`jdbc:[es|elasticsearch]://`:: Prefix. Mandatory.\n\n`[[http|https]://]`:: Type of HTTP connection to make. Possible values are\n`http` (default) or `https`. Optional.\n\n`[host[:port]]`:: Host (`localhost` by default) and port (`9200` by default).\nOptional.\n\n`[prefix]`:: Prefix (empty by default). Typically used when hosting {es} under\na certain path. Optional.\n\n`[option=value]`:: Properties for the JDBC driver. Empty by default.\nOptional.\n\nThe driver recognized the following properties:\n\n[[jdbc-cfg]]\n[discrete]\n===== Essential\n[[jdbc-cfg-timezone]]\n`timezone` (default JVM timezone)::\nTimezone used by the driver _per connection_ indicated by its `ID`.\n*Highly* recommended to set it (to, say, `UTC`) as the JVM timezone can vary, is global for the entire JVM and can't be changed easily when running under a security manager.\n\n[[jdbc-cfg-network]]\n[discrete]\n===== Network\n\n`connect.timeout` (default `30000`)::\nConnection timeout (in milliseconds). That is the maximum amount of time waiting to make a connection to the server.\n\n`network.timeout` (default `60000`)::\nNetwork timeout (in milliseconds). That is the maximum amount of time waiting for the network.\n\n`page.size` (default `1000`)::\nPage size (in entries). The number of results returned per page by the server.\n\n`page.timeout` (default `45000`)::\nPage timeout (in milliseconds). Minimum retention period for the scroll cursor on the server. Queries that require\na stateful scroll cursor on the server side might fail after this timeout. Hence, when scrolling through large result sets,\nprocessing `page.size` records should not take longer than `page.timeout` milliseconds.\n\n`query.timeout` (default `90000`)::\nQuery timeout (in milliseconds). That is the maximum amount of time waiting for a query to return.\n\n[[jdbc-cfg-auth]]\n[discrete]\n==== Basic Authentication\n\n`user`:: Basic Authentication user name\n\n`password`:: Basic Authentication password\n\n[[jdbc-cfg-ssl]]\n[discrete]\n==== SSL\n\n`ssl` (default `false`):: Enable SSL\n\n`ssl.keystore.location`:: key store (if used) location\n\n`ssl.keystore.pass`:: key store password\n\n`ssl.keystore.type` (default `JKS`):: key store type. `PKCS12` is a common, alternative format\n\n`ssl.truststore.location`:: trust store location\n\n`ssl.truststore.pass`:: trust store password\n\n`ssl.truststore.type` (default `JKS`):: trust store type. `PKCS12` is a common, alternative format\n\n`ssl.protocol`(default `TLS`):: SSL protocol to be used\n\n[discrete]\n==== Proxy\n\n`proxy.http`:: Http proxy host name\n\n`proxy.socks`:: SOCKS proxy host name\n\n[discrete]\n==== Mapping\n`field.multi.value.leniency` (default `true`):: Whether to be lenient and return the first value (without any guarantees of what that\nwill be - typically the first in natural ascending order) for fields with multiple values (true) or throw an exception.\n\n[discrete]\n==== Index\n`index.include.frozen` (default `false`):: Whether to include frozen indices in the query execution or not (default).\n\n[discrete]\n==== Cluster\n`catalog`:: Default catalog (cluster) for queries. If unspecified, the\nqueries execute on the data in the local cluster only.\n+\nexperimental:[] See <<modules-cross-cluster-search,{ccs}>>.\n\n[discrete]\n==== Error handling\n\n`allow.partial.search.results` (default `false`):: Whether to return partial results in case of shard failure or fail the query throwing\nthe underlying exception (default).\n\n[discrete]\n==== Troubleshooting\n\n`debug` (default `false`):: Setting it to `true` will enable the debug logging.\n\n`debug.output` (default `err`):: The destination of the debug logs. By default, they are sent to standard error. Value `out` will redirect the logging to standard output. A file path can also be specified.\n\n[discrete]\n==== Additional\n\n`validate.properties` (default `true`):: If disabled, it will ignore any misspellings or unrecognizable properties. When enabled, an exception\nwill be thrown if the provided property cannot be recognized.\n\n\nTo put all of it together, the following URL:\n\n[\"source\",\"text\"]\n----\njdbc:es://http://server:3456/?timezone=UTC&page.size=250\n----\n\nopens up a {es-sql} connection to `server` on port `3456`, setting the JDBC connection timezone to `UTC` and its pagesize to `250` entries.\n\n=== API usage\n\nOne can use JDBC through the official `java.sql` and `javax.sql` packages:\n\n[[java-sql]]\n==== `java.sql`\nThe former through `java.sql.Driver` and `DriverManager`:\n\n[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\ninclude-tagged::{jdbc-tests}/JdbcIntegrationTestCase.java[connect-dm]\n--------------------------------------------------\n<1> The server and port on which Elasticsearch is listening for\nHTTP traffic. The port is by default 9200.\n<2> Properties for connecting to Elasticsearch. An empty `Properties`\ninstance is fine for unsecured Elasticsearch.\n\n[[javax-sql]]\n==== `javax.sql`\n\nAccessible through the `javax.sql.DataSource` API:\n[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\ninclude-tagged::{jdbc-tests}/JdbcIntegrationTestCase.java[connect-ds]\n--------------------------------------------------\n<1> The server and port on which Elasticsearch is listening for\nHTTP traffic. By default 9200.\n<2> Properties for connecting to Elasticsearch. An empty `Properties`\ninstance is fine for unsecured Elasticsearch.\n\nWhich one to use? Typically client applications that provide most\nconfiguration properties in the URL rely on the `DriverManager`-style\nwhile `DataSource` is preferred when being _passed_ around since it can be\nconfigured in one place and the consumer only has to call `getConnection`\nwithout having to worry about any other properties.\n\nTo connect to a secured Elasticsearch server the `Properties`\nshould look like:\n\n[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\ninclude-tagged::{security-tests}/JdbcSecurityIT.java[admin_properties]\n--------------------------------------------------\n\nOnce you have the connection you can use it like any other JDBC\nconnection. For example:\n\n[\"source\",\"java\",subs=\"attributes,callouts,macros\"]\n--------------------------------------------------\ninclude-tagged::{jdbc-tests}/SimpleExampleTestCase.java[simple_example]\n--------------------------------------------------\n\n[NOTE]\n{es-sql} doesn't provide a connection pooling mechanism, thus the connections\nthe JDBC driver creates are not pooled. In order to achieve pooled connections,\na third-party connection pooling mechanism is required. Configuring and setting up the\nthird-party provider is outside the scope of this documentation.\n"
}