{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.058586",
        "size": 2559,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/archived-settings.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "archived-settings",
        "version": "8.15"
    },
    "doc": "[[archived-settings]]\n== Archived settings\n\nIf you upgrade a cluster with a deprecated persistent cluster setting to a\nversion that no longer supports the setting, {es} automatically archives that\nsetting. Similarly, if you upgrade a cluster that contains an index with an\nunsupported index setting, {es} archives the index setting.\n\nWe recommend you remove any archived settings after upgrading. Archived\nsettings are considered invalid and can interfere with your ability to configure\nother settings.\n\nArchived settings start with the `archived.` prefix.\n\n[discrete]\n[[archived-cluster-settings]]\n=== Archived cluster settings\n\nUse the following <<cluster-update-settings,cluster update settings>> request to\ncheck for archived cluster settings. If the request returns an empty object\n(`{ }`), there are no archived cluster settings.\n\n[source,console]\n----\nGET _cluster/settings?flat_settings=true&filter_path=persistent.archived*\n----\n\nTo remove any archived cluster settings, use the following\n<<cluster-update-settings,cluster update settings>> request.\n\n[source,console]\n----\nPUT _cluster/settings\n{\n  \"persistent\": {\n    \"archived.*\": null\n  }\n}\n----\n\n{es} doesn't archive transient cluster settings or settings in\n`elasticsearch.yml`. If a node includes an unsupported setting in\n`elasticsearch.yml`, it will return an error at startup.\n\n[discrete]\n[[archived-index-settings]]\n=== Archived index settings\n\nIMPORTANT: Before you upgrade, remove any unsupported index settings from index\nand component templates. {es} doesn't archive unsupported index settings in\ntemplates during an upgrade. Attempts to use a template that contains an\nunsupported index setting will fail and return an error. This includes automated\noperations, such the {ilm-init} rollover action.\n\nArchived index settings don't affect an index's configuration or most index\noperations, such as indexing or search. However, you'll need to remove them\nbefore you can configure other settings for the index, such as `index.hidden`.\n\nUse the following <<indices-get-settings,get index settings>> request to get a\nlist indices with archived settings. If the request returns an empty object \n(`{ }`), there are no archived index settings.\n\n[source,console]\n----\nGET */_settings?flat_settings=true&filter_path=**.settings.archived*\n----\n// TEST[s/^/PUT my-index\\n/]\n\nTo remove any archived index settings, use the following\n<<indices-update-settings,indices update settings>> request.\n\n[source,console]\n----\nPUT /my-index/_settings\n{\n  \"archived.*\": null\n}\n----\n// TEST[s/^/PUT my-index\\n/]"
}