{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.489579",
        "size": 11473,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-kibana.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "esql-kibana",
        "version": "8.15"
    },
    "doc": "[[esql-kibana]]\n=== Using {esql} in {kib}\n\n++++\n<titleabbrev>Using {esql} in {kib}</titleabbrev>\n++++\n\nYou can use {esql} in {kib} to query and aggregate your data, create\nvisualizations, and set up alerts.\n\nThis guide shows you how to use {esql} in Kibana. To follow along with the\nqueries, load the \"Sample web logs\" sample data set by clicking *Try sample\ndata* from the {kib} Home, selecting *Other sample data sets*, and clicking *Add\ndata* on the *Sample web logs* card.\n\n[discrete]\n[[esql-kibana-enable]]\n=== Enable or disable {esql}\n\n{esql} is enabled by default in {kib}. It can be\ndisabled using the `enableESQL` setting from the\n{kibana-ref}/advanced-options.html[Advanced Settings].\n\nThis will hide the {esql} user interface from various applications.\nHowever, users will be able to access existing {esql} artifacts like saved searches and visualizations.\n\n[discrete]\n[[esql-kibana-get-started]]\n=== Get started with {esql}\n\n// tag::esql-mode[]\nTo get started with {esql} in Discover, open the main menu and select\n*Discover*. Next, from the Data views menu, select *Language: ES|QL*.\n\nimage::images/esql/esql-data-view-menu.png[align=\"center\",width=33%]\n// end::esql-mode[]\n\n[discrete]\n[[esql-kibana-query-bar]]\n=== The query bar\n\nAfter switching to {esql} mode, the query bar shows a sample query. For example:\n\n[source,esql]\n----\nfrom kibana_sample_data_logs | limit 10\n----\n\nEvery query starts with a <<esql-commands,source command>>. In this query, the\nsource command is <<esql-from>>. `FROM` retrieves data from data streams, indices, or\naliases. In this example, the data is retrieved from `kibana_sample_data_logs`.\n\nA source command can be followed by one or more <<esql-commands,processing\ncommands>>. In this query, the processing command is <<esql-limit>>. `LIMIT`\nlimits the number of rows that are retrieved.\n\nTIP: Click the help icon (image:images/esql/esql-icon-help.svg[Static,20]) to open the\nin-product reference documentation for all commands and functions.\n\n// tag::autocomplete[]\nTo make it easier to write queries, auto-complete offers suggestions with\npossible commands and functions:\n\nimage::images/esql/esql-kibana-auto-complete.png[align=\"center\"]\n// end::autocomplete[]\n\n[NOTE]\n====\n{esql} keywords are case-insensitive. The following query is identical to the\nprevious one:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs | LIMIT 10\n----\n====\n\n[discrete]\n==== Expand the query bar\n\nFor readability, you can put each processing command on a new line. The\nfollowing query is identical to the previous one:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| LIMIT 10\n----\n\n// tag::compact[]\nTo make it easier to write multi-line queries, click the double-headed arrow\nbutton (image:images/esql/esql-icon-expand-query-bar.svg[]) to expand the query\nbar:\n\nimage::images/esql/esql-expanded-query-bar.png[align=\"center\"]\n\nTo return to a compact query bar, click the minimize editor button\n(image:images/esql/esql-icon-minimize-query-bar.svg[]).\n// end::compact[]\n\n[discrete]\n==== Warnings\n\nA query may result in warnings, for example when querying an unsupported field\ntype. When that happens, a warning symbol is shown in the query bar. To see the\ndetailed warning, expand the query bar, and click *warnings*.\n\n[discrete]\n[[esql-kibana-query-history]]\n==== Query history\n\nYou can reuse your recent {esql} queries in the query bar.\nIn the query bar click *Show recent queries*:\n\nimage::images/esql/esql-discover-show-recent-query.png[align=\"center\",size=\"50%\"]\n\nYou can then scroll through your recent queries:\n\nimage::images/esql/esql-discover-query-history.png[align=\"center\",size=\"50%\"]\n\n[discrete]\n[[esql-kibana-results-table]]\n=== The results table\n\nFor the example query, the results table shows 10 rows. Omitting the `LIMIT`\ncommand, the results table defaults to up to 1000 rows. Using `LIMIT`, you can\nincrease the limit to up to 10,000 rows.\n\nNOTE: the 10,000 row limit only applies to the number of rows that are retrieved\nby the query and displayed in Discover. Any query or aggregation runs on the\nfull data set.\n\nEach row shows two columns for the example query: a column with the `@timestamp`\nfield and a column with the full document. To display specific fields from the\ndocuments, use the <<esql-keep>> command:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| KEEP @timestamp, bytes, geo.dest\n----\n\nTo display all fields as separate columns, use `KEEP *`:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| KEEP *\n----\n\nNOTE: The maximum number of columns in Discover is 50. If a query returns more\nthan 50 columns, Discover only shows the first 50.\n\n[discrete]\n==== Sorting\n\nTo sort on one of the columns, click the column name you want to sort on and\nselect the sort order. Note that this performs client-side sorting. It only\nsorts the rows that were retrieved by the query, which may not be the full\ndataset because of the (implicit) limit. To sort the full data set, use the\n<<esql-sort>> command:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| KEEP @timestamp, bytes, geo.dest\n| SORT bytes DESC\n----\n\n[discrete]\n[[esql-kibana-time-filter]]\n=== Time filtering\n\nTo display data within a specified time range, you can use the standard time filter, \ncustom time parameters, or a WHERE command.\n\n[discrete]\n==== Standard time filter\nThe standard {kibana-ref}/set-time-filter.html[time filter] is enabled\nwhen the indices you're querying have a field named `@timestamp`.\n\n[discrete]\n==== Custom time parameters\nIf your indices do not have a field named `@timestamp`, you can use\nthe `?_tstart` and `?_tend` parameters to specify a time range. These parameters \nwork with any timestamp field and automatically sync with the {kibana-ref}/set-time-filter.html[time filter].\n\n[source,esql]\n----\nFROM my_index\n| WHERE custom_timestamp >= ?_tstart AND custom_timestamp < ?_tend\n----\n\nYou can also use the `?_tstart` and `?_tend` parameters with the <<esql-bucket>> function \nto create auto-incrementing time buckets in {esql} <<esql-kibana-visualizations,visualizations>>. \nFor example:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| STATS average_bytes = AVG(bytes) BY BUCKET(@timestamp, 50, ?_tstart, ?_tend)\n----\n\nThis example uses `50` buckets, which is the maximum number of buckets.\n\n[discrete]\n==== WHERE command\nYou can also limit the time range using the <<esql-where>> command and the <<esql-now>> function.\nFor example, if the timestamp field is called `timestamp`, to query the last 15\nminutes of data:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| WHERE timestamp > NOW() - 15minutes\n----\n\n[discrete]\n[[esql-kibana-visualizations]]\n=== Analyze and visualize data\n\nBetween the query bar and the results table, Discover shows a date histogram\nvisualization. If the indices you're querying do not contain a `@timestamp`\nfield, the histogram is not shown.\n\nThe visualization adapts to the query. A query's nature determines the type of\nvisualization. For example, this query aggregates the total number of bytes per\ndestination country:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| STATS total_bytes = SUM(bytes) BY geo.dest\n| SORT total_bytes DESC\n| LIMIT 3\n----\n\nThe resulting visualization is a bar chart showing the top 3 countries:\n\nimage::images/esql/esql-kibana-bar-chart.png[align=\"center\"]\n\nTo make changes to the visualization, like changing the visualization type, axes and colors, click the\npencil button (image:images/esql/esql-icon-edit-visualization.svg[]). This opens\nan in-line editor:\n\nimage::images/esql/esql-kibana-in-line-editor.png[align=\"center\",width=66%]\n\nYou can save the visualization to a new or existing dashboard by clicking the\nsave button (image:images/esql/esql-icon-save-visualization.svg[]). Once saved\nto a dashboard, you'll be taken to the Dashboards page. You can continue to \nmake changes to the visualization. Click the\noptions button in the top-right (image:images/esql/esql-icon-options.svg[]) and\nselect *Edit ESQL visualization* to open the in-line editor:\n\nimage::images/esql/esql-kibana-edit-on-dashboard.png[align=\"center\",width=66%]\n\n[discrete]\n[[esql-kibana-dashboard-panel]]\n==== Add a panel to a dashboard\n\nYou can use {esql} queries to create panels on your dashboards.\nTo add a panel to a dashboard, under *Dashboards*, click the *Add panel* button and select {esql}.\n\nimage::images/esql/esql-dashboard-panel.png[align=\"center\",width=50%]\n\nCheck the {esql} query by clicking the Panel filters button (image:images/esql/dashboard_panel_filter_button.png[Panel filters button on panel header]):\n\nimage::images/esql/esql-dashboard-panel-query.png[align=\"center\",width=50%]\n\nYou can also edit the {esql} visualization from here.\nClick the options button in the top-right (image:images/esql/esql-icon-options.svg[]) and\nselect *Edit ESQL visualization* to open the in-line editor.\n\nimage::images/esql/esql-dashboard-panel-edit-visualization.png[align=\"center\",width=50%]\n\n[discrete]\n[[esql-kibana-enrich]]\n=== Create an enrich policy\n\nThe {esql} <<esql-enrich>> command enables you to <<esql-enrich-data,enrich>>\nyour query dataset with fields from another dataset. Before you can use\n`ENRICH`, you need to <<esql-set-up-enrich-policy,create and execute an enrich\npolicy>>. If a policy exists, it will be suggested by auto-complete. If not,\nclick *Click to create* to create one.\n\nimage::images/esql/esql-kibana-enrich-autocomplete.png[align=\"center\"]\n\nNext, you can enter a policy name, the policy type, source indices, and\noptionally a query:\n\nimage::images/esql/esql-kibana-enrich-step-1.png[align=\"center\",width=\"50%\"]\n\nClick *Next* to select the match field and enrich fields:\n\nimage::images/esql/esql-kibana-enrich-step-2.png[align=\"center\",width=\"50%\"]\n\nFinally, click *Create and execute*.\n\nNow, you can use the enrich policy in an {esql} query:\n\n[source,esql]\n----\nFROM kibana_sample_data_logs\n| STATS total_bytes = SUM(bytes) BY geo.dest\n| SORT total_bytes DESC\n| LIMIT 3\n| ENRICH countries\n----\n\n[discrete]\n[[esql-kibana-alerting-rule]]\n=== Create an alerting rule\n\nYou can use {esql} queries to create alerts. From Discover, click *Alerts* and\nselect *Create search threshold rule*. This opens a panel that enables you to\ncreate a rule using an {esql} query. Next, you can test the query, add a\nconnector, and save the rule.\n\nimage::images/esql/esql-kibana-create-rule.png[align=\"center\",width=50%]\n\n[discrete]\n[[esql-kibana-limitations]]\n=== Limitations\n\n// tag::limitations[]\n* The user interface to filter data is not enabled when Discover is in {esql}\nmode. To filter data, write a query that uses the <<esql-where>> command\ninstead.\n* Discover shows no more than 10,000 rows. This limit only applies to the number\nof rows that are retrieved by the query and displayed in Discover. Queries and\naggregations run on the full data set.\n* Discover shows no more than 50 columns. If a query returns\nmore than 50 columns, Discover only shows the first 50.\n* CSV export from Discover shows no more than 10,000 rows. This limit only applies to the number\nof rows that are retrieved by the query and displayed in Discover. Queries and\naggregations run on the full data set.\n* Querying many indices at once without any filters can cause an error in\nkibana which looks like `[esql] > Unexpected error from Elasticsearch: The\ncontent length (536885793) is bigger than the maximum allowed string\n(536870888)`. The response from {esql} is too long. Use <<esql-drop>> or\n<<esql-keep>> to limit the number of fields returned.\n// end::limitations[]\n"
}