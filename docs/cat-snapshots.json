{
    "meta": {
        "timestamp": "2024-11-01T03:02:53.573579",
        "size": 4856,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/cat-snapshots.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "cat-snapshots",
        "version": "8.15"
    },
    "doc": "[[cat-snapshots]]\n=== cat snapshots API\n++++\n<titleabbrev>cat snapshots</titleabbrev>\n++++\n\n[IMPORTANT]\n====\ncat APIs are only intended for human consumption using the command line or {kib} \nconsole. They are _not_ intended for use by applications. For application \nconsumption, use the <<get-snapshot-api,get snapshot API>>.\n====\n\nReturns information about the <<snapshot-restore,snapshots>> stored in one or\nmore repositories. A snapshot is a backup of an index or running {es} cluster.\n\n\n[[cat-snapshots-api-request]]\n==== {api-request-title}\n\n`GET /_cat/snapshots/<repository>`\n\n`GET /_cat/snapshots`\n\n[[cat-snapshots-api-prereqs]]\n==== {api-prereq-title}\n\n* If the {es} {security-features} are enabled, you must have the\n`monitor_snapshot`, `create_snapshot`, or `manage`\n<<privileges-list-cluster,cluster privilege>> to use this API.\n\n\n[[cat-snapshots-path-params]]\n==== {api-path-parms-title}\n\n`<repository>`::\n+\n--\n(Optional, string) Comma-separated list of snapshot repositories used to limit\nthe request. Accepts wildcard expressions. `_all` returns all repositories.\n\nIf any repository fails during the request, {es} returns an error.\n--\n\n\n[[cat-snapshots-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=http-format]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-h]\n+\n--\nIf you do not specify which columns to include, the API returns the default\ncolumns in the order listed below. If you explicitly specify one or more\ncolumns, it only returns the specified columns.\n\nValid columns are:\n\n`id`, `snapshot`::\n(Default) ID of the snapshot, such as `snap1`.\n\n`repository`, `re`, `repo`::\n(Default) Name of the repository, such as `repo1`.\n\n`status`, `s`::\n(Default) State of the snapshot process. Returned values are:\n+\n* `FAILED`: The snapshot process failed.\n* `INCOMPATIBLE`: The snapshot process is incompatible with the current cluster\nversion.\n* `IN_PROGRESS`: The snapshot process started but has not completed.\n* `PARTIAL`: The snapshot process completed with a partial success.\n* `SUCCESS`: The snapshot process completed with a full success.\n\n`start_epoch`, `ste`, `startEpoch`::\n(Default) {wikipedia}/Unix_time[Unix `epoch` time] at which\nthe snapshot process started.\n\n`start_time`, `sti`, `startTime`::\n(Default) `HH:MM:SS` time at which the snapshot process started.\n\n`end_epoch`, `ete`, `endEpoch`::\n(Default) {wikipedia}/Unix_time[Unix `epoch` time] at which\nthe snapshot process ended.\n\n`end_time`, `eti`, `endTime`::\n(Default) `HH:MM:SS` time at which the snapshot process ended.\n\n`duration`, `dur`::\n(Default) Time it took the snapshot process to complete in <<time-units,time\nunits>>.\n\n`indices`, `i`::\n(Default) Number of indices in the snapshot.\n\n`successful_shards`, `ss`::\n(Default) Number of successful shards in the snapshot.\n\n`failed_shards`, `fs`::\n(Default) Number of failed shards in the snapshot.\n\n`total_shards`, `ts`::\n(Default) Total number of shards in the snapshot.\n\n`reason`, `r`::\nReason for any snapshot failures.\n--\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=help]\n\n`ignore_unavailable`::\n(Optional, Boolean) If `true`, the response does not include information from\nunavailable snapshots. Defaults to `false`.\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=master-timeout]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-s]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=time]\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=cat-v]\n\n\n[[cat-snapshots-api-example]]\n==== {api-examples-title}\n\n[source,console]\n--------------------------------------------------\nGET /_cat/snapshots/repo1?v=true&s=id\n--------------------------------------------------\n// TEST[s/^/PUT \\/_snapshot\\/repo1\\/snap1?wait_for_completion=true\\n/]\n// TEST[s/^/PUT \\/_snapshot\\/repo1\\/snap2?wait_for_completion=true\\n/]\n// TEST[s/^/PUT \\/_snapshot\\/repo1\\n{\"type\": \"fs\", \"settings\": {\"location\": \"repo\\/1\"}}\\n/]\n\nThe API returns the following response:\n\n[source,txt]\n--------------------------------------------------\nid     repository status start_epoch start_time end_epoch  end_time duration indices successful_shards failed_shards total_shards\nsnap1  repo1      FAILED 1445616705  18:11:45   1445616978 18:16:18     4.6m       1                 4             1            5\nsnap2  repo1      SUCCESS 1445634298  23:04:58   1445634672 23:11:12     6.2m       2                10             0           10\n--------------------------------------------------\n// TESTRESPONSE[s/FAILED/SUCCESS/ s/14456\\d+/\\\\d+/ s/\\d+(\\.\\d+)?(m|s|ms)/\\\\d+(\\\\.\\\\d+)?(m|s|ms)/]\n// TESTRESPONSE[s/\\d+:\\d+:\\d+/\\\\d+:\\\\d+:\\\\d+/]\n// TESTRESPONSE[s/1                 4             1            5/\\\\d+ \\\\d+ \\\\d+ \\\\d+/]\n// TESTRESPONSE[s/2                10             0           10/\\\\d+ \\\\d+ \\\\d+ \\\\d+/]\n// TESTRESPONSE[non_json]\n\n"
}