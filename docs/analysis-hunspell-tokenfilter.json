{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.344067",
        "size": 6735,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-hunspell-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "analysis-hunspell-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-hunspell-tokenfilter]]\n=== Hunspell token filter\n++++\n<titleabbrev>Hunspell</titleabbrev>\n++++\n\nProvides <<dictionary-stemmers,dictionary stemming>> based on a provided\n{wikipedia}/Hunspell[Hunspell dictionary]. The `hunspell`\nfilter requires\n<<analysis-hunspell-tokenfilter-dictionary-config,configuration>> of one or more\nlanguage-specific Hunspell dictionaries.\n\nThis filter uses Lucene's\n{lucene-analysis-docs}/hunspell/HunspellStemFilter.html[HunspellStemFilter].\n\n[TIP]\n====\nIf available, we recommend trying an algorithmic stemmer for your language\nbefore using the <<analysis-hunspell-tokenfilter,`hunspell`>> token filter.\nIn practice, algorithmic stemmers typically outperform dictionary stemmers.\nSee <<dictionary-stemmers>>.\n====\n\n[[analysis-hunspell-tokenfilter-dictionary-config]]\n==== Configure Hunspell dictionaries\n\nHunspell dictionaries are stored and detected on a dedicated\n`hunspell` directory on the filesystem: `<$ES_PATH_CONF>/hunspell`. Each dictionary\nis expected to have its own directory, named after its associated language and\nlocale (e.g., `pt_BR`, `en_GB`). This dictionary directory is expected to hold a\nsingle `.aff` and one or more `.dic` files, all of which will automatically be\npicked up. For example, the following directory layout will define the `en_US` dictionary:\n\n[source,txt]\n--------------------------------------------------\n- config\n    |-- hunspell\n    |    |-- en_US\n    |    |    |-- en_US.dic\n    |    |    |-- en_US.aff\n--------------------------------------------------\n\nEach dictionary can be configured with one setting:\n\n[[analysis-hunspell-ignore-case-settings]]\n`ignore_case`::\n(Static, Boolean)\nIf true, dictionary matching will be case insensitive. Defaults to `false`.\n+\nThis setting can be configured globally in `elasticsearch.yml` using\n`indices.analysis.hunspell.dictionary.ignore_case`.\n+\nTo configure the setting for a specific locale, use the\n`indices.analysis.hunspell.dictionary.<locale>.ignore_case` setting (e.g., for\nthe `en_US` (American English) locale, the setting is\n`indices.analysis.hunspell.dictionary.en_US.ignore_case`).\n+\nYou can also add a `settings.yml` file under the dictionary\ndirectory which holds these settings. This overrides any other `ignore_case`\nsettings defined in `elasticsearch.yml`.\n\n[[analysis-hunspell-tokenfilter-analyze-ex]]\n==== Example\n\nThe following analyze API request uses the `hunspell` filter to stem \n`the foxes jumping quickly` to `the fox jump quick`.\n\nThe request specifies the `en_US` locale, meaning that the\n`.aff` and `.dic` files in the `<$ES_PATH_CONF>/hunspell/en_US` directory are used\nfor the Hunspell dictionary.\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"standard\",\n  \"filter\": [\n    {\n      \"type\": \"hunspell\",\n      \"locale\": \"en_US\"\n    }\n  ],\n  \"text\": \"the foxes jumping quickly\"\n}\n----\n\nThe filter produces the following tokens:\n\n[source,text]\n----\n[ the, fox, jump, quick ]\n----\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"the\",\n      \"start_offset\": 0,\n      \"end_offset\": 3,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"fox\",\n      \"start_offset\": 4,\n      \"end_offset\": 9,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"jump\",\n      \"start_offset\": 10,\n      \"end_offset\": 17,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"quick\",\n      \"start_offset\": 18,\n      \"end_offset\": 25,\n      \"type\": \"<ALPHANUM>\",\n      \"position\": 3\n    }\n  ]\n}\n----\n////\n\n[[analysis-hunspell-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n[[analysis-hunspell-tokenfilter-dictionary-param]]\n`dictionary`::\n(Optional, string or array of strings)\nOne or more `.dic` files (e.g, `en_US.dic, my_custom.dic`) to use for the\nHunspell dictionary.\n+\nBy default, the `hunspell` filter uses all `.dic` files in the\n`<$ES_PATH_CONF>/hunspell/<locale>` directory specified using the\n`lang`, `language`, or `locale` parameter.\n\n`dedup`::\n(Optional, Boolean)\nIf `true`, duplicate tokens are removed from the filter's output. Defaults to\n`true`.\n\n`lang`::\n(Required*, string)\nAn alias for the <<analysis-hunspell-tokenfilter-locale-param,`locale`\nparameter>>.\n+\nIf this parameter is not specified, the `language` or `locale` parameter is\nrequired.\n\n`language`::\n(Required*, string)\nAn alias for the <<analysis-hunspell-tokenfilter-locale-param,`locale`\nparameter>>.\n+\nIf this parameter is not specified, the `lang` or `locale` parameter is\nrequired.\n\n[[analysis-hunspell-tokenfilter-locale-param]]\n`locale`::\n(Required*, string)\nLocale directory used to specify the `.aff` and `.dic` files for a Hunspell\ndictionary. See <<analysis-hunspell-tokenfilter-dictionary-config>>.\n+\nIf this parameter is not specified, the `lang` or `language` parameter is\nrequired.\n\n`longest_only`::\n(Optional, Boolean)\nIf `true`, only the longest stemmed version of each token is\nincluded in the output. If `false`, all stemmed versions of the token are\nincluded. Defaults to `false`.\n\n[[analysis-hunspell-tokenfilter-analyzer-ex]]\n==== Customize and add to an analyzer\n\nTo customize the `hunspell` filter, duplicate it to create the\nbasis for a new custom token filter. You can modify the filter using its\nconfigurable parameters.\n\nFor example, the following <<indices-create-index,create index API>> request\nuses a custom `hunspell` filter, `my_en_US_dict_stemmer`, to configure a new\n<<analysis-custom-analyzer,custom analyzer>>.\n\nThe `my_en_US_dict_stemmer` filter uses a `locale` of `en_US`, meaning that the\n`.aff` and `.dic` files in the `<$ES_PATH_CONF>/hunspell/en_US` directory are\nused. The filter also includes a `dedup` argument of `false`, meaning that\nduplicate tokens added from the dictionary are not removed from the filter's\noutput.\n\n[source,console]\n----\nPUT /my-index-000001\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"en\": {\n          \"tokenizer\": \"standard\",\n          \"filter\": [ \"my_en_US_dict_stemmer\" ]\n        }\n      },\n      \"filter\": {\n        \"my_en_US_dict_stemmer\": {\n          \"type\": \"hunspell\",\n          \"locale\": \"en_US\",\n          \"dedup\": false\n        }\n      }\n    }\n  }\n}\n----\n\n[[analysis-hunspell-tokenfilter-settings]]\n==== Settings\n\nIn addition to the <<analysis-hunspell-ignore-case-settings,`ignore_case`\nsettings>>, you can configure the following global settings for the `hunspell`\nfilter using `elasticsearch.yml`:\n\n`indices.analysis.hunspell.dictionary.lazy`::\n(Static, Boolean)\nIf `true`, the loading of Hunspell dictionaries is deferred until a dictionary\nis used. If `false`, the dictionary directory is checked for dictionaries when\nthe node starts, and any dictionaries are automatically loaded. Defaults to\n`false`.\n"
}