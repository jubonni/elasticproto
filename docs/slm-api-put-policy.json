{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.273270",
        "size": 5166,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/slm-api-put-policy.html",
        "type": "documentation",
        "role": [
            "child_attributes"
        ],
        "has_code": true,
        "title": "slm-api-put-policy",
        "version": "8.15"
    },
    "doc": "[[slm-api-put-policy]]\n=== Create or update snapshot lifecycle policy API\n++++\n<titleabbrev>Create or update policy</titleabbrev>\n++++\n\nCreates or updates a snapshot lifecycle policy.\n\n\n[[slm-api-put-request]]\n==== {api-request-title}\n\n`PUT /_slm/policy/<snapshot-lifecycle-policy-id>`\n\n[[slm-api-put-prereqs]]\n==== {api-prereq-title}\n\nIf the {es} {security-features} are enabled, you must have the\n`manage_slm` cluster privilege and the `manage` index privilege\nfor any included indices to use this API.\nFor more information, see <<security-privileges>>.\n\n[[slm-api-put-desc]]\n==== {api-description-title}\n\nUse the create or update snapshot lifecycle policy API\nto create or update a snapshot lifecycle policy.\n\nIf the policy already exists,\nthis request increments the policy's version.\nOnly the latest version of a policy is stored.\n\n[[slm-api-put-path-params]]\n==== {api-path-parms-title}\n\n`<snapshot-lifecycle-policy-id>`::\n(Required, string)\nID for the snapshot lifecycle policy\nyou want to create or update.\n\n[[slm-api-put-query-params]]\n==== {api-query-parms-title}\n\ninclude::{es-ref-dir}/rest-api/common-parms.asciidoc[tag=timeoutparms]\n\n[role=\"child_attributes\"]\n[[slm-api-put-request-body]]\n==== {api-request-body-title}\n\n`config`::\n(Required, object)\nConfiguration for each snapshot created by the policy.\n+\n.Properties of `config`\n[%collapsible%open]\n====\n:page-id: put-slm-api\ninclude::{es-ref-dir}/snapshot-restore/apis/create-snapshot-api.asciidoc[tag=snapshot-config]\n:!page-id:\n====\n\n`name`::\n(Required, string)\nName automatically assigned to each snapshot created by the policy.\n<<api-date-math-index-names,Date math>> is supported.\nTo prevent conflicting snapshot names, a UUID is automatically appended to each\nsnapshot name.\n\n`repository`::\n(Required, string)\nRepository used to store snapshots created by this policy. This repository must\nexist prior to the policy's creation. You can create a repository using the\n<<snapshot-restore,snapshot repository API>>.\n\n[[slm-api-put-retention]]\n`retention`::\n(Optional, object)\nRetention rules used to retain and delete snapshots created by the policy.\n+\n.Properties of `retention`\n[%collapsible%open]\n====\n`expire_after`::\n(Optional, <<time-units, time units>>)\nTime period after which a snapshot is considered expired and eligible for\ndeletion. {slm-init} deletes expired snapshots based on the\n<<slm-retention-schedule,`slm.retention_schedule`>>.\n\n`max_count`::\n(Optional, integer)\nMaximum number of snapshots to retain, even if the snapshots have not yet\nexpired. If the number of snapshots in the repository exceeds this limit, the\npolicy retains the most recent snapshots and deletes older snapshots. This limit\nonly includes snapshots with a <<get-snapshot-api-response-state,`state`>> of\n`SUCCESS`.\n\n`min_count`::\n(Optional, integer)\nMinimum number of snapshots to retain, even if the snapshots have expired.\n====\n\n`schedule`::\n(Required, <<api-cron-expressions,Cron syntax>> or <<time-units, time units>>)\nPeriodic or absolute schedule at which the policy creates snapshots. {slm-init}\napplies `schedule` changes immediately.\nSchedule may be either a Cron schedule or a time unit describing the interval between snapshots.\nWhen using a time unit interval, the first snapshot is scheduled one interval after the policy modification time, and then again every interval after.\n\n\n[[slm-api-put-example]]\n==== {api-examples-title}\n\n\n[[slm-api-put-daily-policy]]\n===== Create a policy\nCreate a `daily-snapshots` lifecycle policy:\n\n[source,console]\n--------------------------------------------------\nPUT /_slm/policy/daily-snapshots\n{\n  \"schedule\": \"0 30 1 * * ?\", <1>\n  \"name\": \"<daily-snap-{now/d}>\", <2>\n  \"repository\": \"my_repository\", <3>\n  \"config\": { <4>\n    \"indices\": [\"data-*\", \"important\"], <5>\n    \"ignore_unavailable\": false,\n    \"include_global_state\": false\n  },\n  \"retention\": { <6>\n    \"expire_after\": \"30d\", <7>\n    \"min_count\": 5, <8>\n    \"max_count\": 50 <9>\n  }\n}\n--------------------------------------------------\n// TEST[setup:setup-repository]\n\n<1> When the snapshot should be taken, in this case, 1:30am daily\n<2> The name each snapshot should be given\n<3> Which repository to take the snapshot in\n<4> Any extra snapshot configuration\n<5> Data streams and indices the snapshot should contain\n<6> Optional retention configuration\n<7> Keep snapshots for 30 days\n<8> Always keep at least 5 successful snapshots, even if they're more than 30 days old\n<9> Keep no more than 50 successful snapshots, even if they're less than 30 days old\n\n\n[[slm-api-put-hourly-policy]]\n===== Use Interval Scheduling\nCreate an `hourly-snapshots` lifecycle policy using interval scheduling:\n\n[source,console]\n--------------------------------------------------\nPUT /_slm/policy/hourly-snapshots\n{\n  \"schedule\": \"1h\",\n  \"name\": \"<hourly-snap-{now/d}>\",\n  \"repository\": \"my_repository\",\n  \"config\": {\n    \"indices\": [\"data-*\", \"important\"]\n  }\n}\n--------------------------------------------------\n// TEST[setup:setup-repository]\nCreates a snapshot once every hour. The first snapshot will be created one hour after the policy is modified,\nwith subsequent snapshots being created every hour afterward.\n"
}