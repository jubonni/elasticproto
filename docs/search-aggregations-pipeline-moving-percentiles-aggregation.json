{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.723066",
        "size": 5700,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-aggregations-pipeline-moving-percentiles-aggregation.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "search-aggregations-pipeline-moving-percentiles-aggregation",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[search-aggregations-pipeline-moving-percentiles-aggregation]]\n=== Moving percentiles aggregation\n++++\n<titleabbrev>Moving percentiles</titleabbrev>\n++++\n\nGiven an ordered series of <<search-aggregations-metrics-percentile-aggregation, percentiles>>, the Moving Percentile aggregation\nwill slide a window across those percentiles and allow the user to compute the cumulative percentile.\n\nThis is conceptually very similar to the <<search-aggregations-pipeline-movfn-aggregation, Moving Function>> pipeline aggregation,\nexcept it works on the percentiles sketches instead of the actual buckets values.\n\n==== Syntax\n\nA `moving_percentiles` aggregation looks like this in isolation:\n\n[source,js]\n--------------------------------------------------\n{\n  \"moving_percentiles\": {\n    \"buckets_path\": \"the_percentile\",\n    \"window\": 10\n  }\n}\n--------------------------------------------------\n// NOTCONSOLE\n\n[[moving-percentiles-params]]\n.`moving_percentiles` Parameters\n[options=\"header\"]\n|===\n|Parameter Name |Description |Required |Default Value\n|`buckets_path` |Path to the percentile of interest (see <<buckets-path-syntax, `buckets_path` Syntax>> for more details |Required |\n|`window` |The size of window to \"slide\" across the histogram. |Required |\n|`shift` |<<shift-parameter, Shift>> of window position. |Optional | 0\n|===\n\n`moving_percentiles` aggregations must be embedded inside of a `histogram` or `date_histogram` aggregation. They can be\nembedded like any other metric aggregation:\n\n[source,console]\n--------------------------------------------------\nPOST /_search\n{\n  \"size\": 0,\n  \"aggs\": {\n    \"my_date_histo\": {                          <1>\n        \"date_histogram\": {\n        \"field\": \"date\",\n        \"calendar_interval\": \"1M\"\n      },\n      \"aggs\": {\n        \"the_percentile\": {                     <2>\n            \"percentiles\": {\n            \"field\": \"price\",\n            \"percents\": [ 1.0, 99.0 ]\n          }\n        },\n        \"the_movperc\": {\n          \"moving_percentiles\": {\n            \"buckets_path\": \"the_percentile\",   <3>\n            \"window\": 10\n          }\n        }\n      }\n    }\n  }\n}\n--------------------------------------------------\n// TEST[setup:sales]\n\n<1> A `date_histogram` named \"my_date_histo\" is constructed on the \"timestamp\" field, with one-day intervals\n<2> A `percentile` metric is used to calculate the percentiles of a field.\n<3> Finally, we specify a `moving_percentiles` aggregation which uses \"the_percentile\" sketch as its input.\n\nMoving percentiles are built by first specifying a `histogram` or `date_histogram` over a field. You then add\na percentile metric inside of that histogram. Finally, the `moving_percentiles` is embedded inside the histogram.\nThe `buckets_path` parameter is then used to \"point\" at the percentiles aggregation inside of the histogram (see\n<<buckets-path-syntax>> for a description of the syntax for `buckets_path`).\n\nAnd the following may be the response:\n\n[source,console-result]\n--------------------------------------------------\n{\n   \"took\": 11,\n   \"timed_out\": false,\n   \"_shards\": ...,\n   \"hits\": ...,\n   \"aggregations\": {\n      \"my_date_histo\": {\n         \"buckets\": [\n             {\n                 \"key_as_string\": \"2015/01/01 00:00:00\",\n                 \"key\": 1420070400000,\n                 \"doc_count\": 3,\n                 \"the_percentile\": {\n                     \"values\": {\n                       \"1.0\": 151.0,\n                       \"99.0\": 200.0\n                     }\n                 }\n             },\n             {\n                 \"key_as_string\": \"2015/02/01 00:00:00\",\n                 \"key\": 1422748800000,\n                 \"doc_count\": 2,\n                 \"the_percentile\": {\n                     \"values\": {\n                       \"1.0\": 10.4,\n                       \"99.0\": 49.6\n                     }\n                 },\n                 \"the_movperc\": {\n                   \"values\": {\n                     \"1.0\": 151.0,\n                     \"99.0\": 200.0\n                   }\n                 }\n             },\n             {\n                 \"key_as_string\": \"2015/03/01 00:00:00\",\n                 \"key\": 1425168000000,\n                 \"doc_count\": 2,\n                 \"the_percentile\": {\n                    \"values\": {\n                      \"1.0\": 175.25,\n                      \"99.0\": 199.75\n                    }\n                 },\n                 \"the_movperc\": {\n                    \"values\": {\n                      \"1.0\": 11.6,\n                      \"99.0\": 200.0\n                    }\n                 }\n             }\n         ]\n      }\n   }\n}\n--------------------------------------------------\n// TESTRESPONSE[s/\"took\": 11/\"took\": $body.took/]\n// TESTRESPONSE[s/\"_shards\": \\.\\.\\./\"_shards\": $body._shards/]\n// TESTRESPONSE[s/\"hits\": \\.\\.\\./\"hits\": $body.hits/]\n\nThe output format of the `moving_percentiles` aggregation is inherited from the format of the referenced\n<<search-aggregations-metrics-percentile-aggregation,`percentiles`>> aggregation.\n\nMoving percentiles pipeline aggregations always run with `skip` gap policy.\n\n\n[[moving-percentiles-shift-parameter]]\n==== shift parameter\n\nBy default (with `shift = 0`), the window that is offered for calculation is the last `n` values excluding the current bucket.\nIncreasing `shift` by 1 moves starting window position by `1` to the right.\n\n- To include current bucket to the window, use `shift = 1`.\n- For center alignment (`n / 2` values before and after the current bucket), use `shift = window / 2`.\n- For right alignment (`n` values after the current bucket), use `shift = window`.\n\nIf either of window edges moves outside the borders of data series, the window shrinks to include available values only.\n"
}