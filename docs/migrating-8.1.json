{
    "meta": {
        "timestamp": "2024-11-01T03:02:52.931580",
        "size": 3506,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/migrating-8.1.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "migrating-8.1",
        "version": "8.15"
    },
    "doc": "[[migrating-8.1]]\n== Migrating to 8.1\n++++\n<titleabbrev>8.1</titleabbrev>\n++++\n\nThis section discusses the changes that you need to be aware of when migrating\nyour application to {es} 8.1.\n\nSee also <<release-highlights>> and <<es-release-notes>>.\n\n\n[discrete]\n[[breaking-changes-8.1]]\n=== Breaking changes\n\nThe following changes in {es} 8.1 might affect your applications\nand prevent them from operating normally.\nBefore upgrading to 8.1, review these changes and take the described steps\nto mitigate the impact.\n\n[discrete]\n[[breaking_81_rest_api_changes]]\n==== REST API changes\n\n[[search_apis_fields_parameter_normalizes_geometry_objects_cross_international_dateline]]\n.The search API's `fields` parameter now normalizes geometry objects that cross the international dateline\n[%collapsible]\n====\n*Details* +\nThe search API's `fields` parameter now normalizes `geo_shape` objects that\ncross the international dateline (+/-180\u00b0 longitude). For example, if a polygon\ncrosses the dateline, the `fields` parameter returns it as two polygons. You can\nstill retrieve original, unnormalized geometry objects from `_source`.\n\n*Impact* +\nIf your application requires unnormalized geometry objects, retrieve them from\n`_source` rather than using the `fields` parameter.\n====\n\n\n[discrete]\n[[deprecated-8.1]]\n=== Deprecations\n\nThe following functionality has been deprecated in {es} 8.1\nand will be removed in a future version.\nWhile this won't have an immediate impact on your applications,\nwe strongly encourage you take the described steps to update your code\nafter upgrading to 8.1.\n\nTo find out if you are using any deprecated functionality,\nenable <<deprecation-logging, deprecation logging>>.\n\n[discrete]\n[[deprecations_81_cluster_and_node_setting]]\n==== Cluster and node setting deprecations\n\n[[legacy_values_for_discovery_type_setting_are_deprecated]]\n.Legacy values for the `discovery.type` setting are deprecated\n[%collapsible]\n====\n*Details* +\nLegacy values for the `discovery.type` setting are deprecated and will be\nforbidden in a future version.\n\n*Impact* +\nDo not set `discovery.type` to any value except `single-node` or `multi-node`.\nAll other values are equivalent to the default discovery type which is\n`multi-node`. Where possible, omit this setting so that {es} uses the default\ndiscovery type.\n====\n\n[discrete]\n[[deprecations_81_rest_api]]\n==== REST API deprecations\n\n[[lenient_parsing_of_bulk_actions_deprecated]]\n.Lenient parsing of bulk actions is deprecated\n[%collapsible]\n====\n*Details* +\nOlder versions of {es} parse the action lines of bulk requests very permissively\nand would silently ignore invalid or malformed actions. This lenience is\ndeprecated and a future version will reject bulk requests containing invalid\nactions.\n\n*Impact* +\nEnsure that bulk actions are well-formed JSON objects containing a single entry\nwith the correct key.\n====\n\n[[deprecate_index_include_frozen_request_parameter_in_sql_api]]\n.Deprecate `index_include_frozen` request parameter in `_sql` API\n[%collapsible]\n====\n*Details* +\nFollowing the deprecation of frozen indices, the `index_include_frozen`\nparameter and `FROZEN` syntax is now also deprecated.\n\n*Impact* +\nYou should unfreeze frozen indices using the\n{ref}/unfreeze-index-api.html[unfreeze index API] and stop using the\n`index_include_frozen` parameter or the `FROZEN` keyword in SQL\nqueries. For some use cases, the frozen tier may be a suitable\nreplacement for frozen indices. See {ref}/data-tiers.html[data tiers]\nfor more information.\n====\n\n"
}