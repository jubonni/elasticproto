{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.164271",
        "size": 3287,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/search-settings.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "search-settings",
        "version": "8.15"
    },
    "doc": "[[search-settings]]\n=== Search settings\n\nThe following expert settings can be set to manage global search and aggregation\nlimits.\n\n[[indices-query-bool-max-clause-count]]\n`indices.query.bool.max_clause_count`::\ndeprecated:[8.0.0]\n(<<static-cluster-setting,Static>>, integer)\nThis deprecated setting has no effect.\n+\n{es} will now dynamically set the maximum number of allowed clauses in a query, using\na heuristic based on the size of the search thread pool and the size of the heap allocated to\nthe JVM. This limit has a minimum value of 1024 and will in most cases be larger (for example,\na node with 30Gb RAM and 48 CPUs will have a maximum clause count of around 27,000). Larger\nheaps lead to higher values, and larger thread pools result in lower values.\n+\nQueries with many clauses should be avoided whenever possible. If you previously bumped this\nsetting to accommodate heavy queries, you might need to increase the amount of memory available\nto {es}, or to reduce the size of your search thread pool so that more memory is\navailable to each concurrent search.\n+\nIn previous versions of Lucene you could get around this limit by nesting boolean queries\nwithin each other, but the limit is now based on the total number of leaf queries within the\nquery as a whole and this workaround will no longer help.\n\n[[search-settings-max-buckets]]\n`search.max_buckets`::\n(<<cluster-update-settings,Dynamic>>, integer)\nMaximum number of <<search-aggregations-bucket,aggregation buckets>> allowed in\na single response. Defaults to 65,536.\n+\nRequests that attempt to return more than this limit will return an error.\n\n[[search-settings-only-allowed-scripts]]\n`search.aggs.only_allowed_metric_scripts`::\n(<<cluster-update-settings,Dynamic>>, boolean)\nConfigures whether only explicitly allowed scripts can be used in\n<<search-aggregations-metrics-scripted-metric-aggregation,scripted metrics aggregations>>.\nDefaults to `false`.\n+\nRequests using scripts not contained in either\n<<search-settings-allowed-inline-scripts,`search.aggs.allowed_inline_metric_scripts`>>\nor\n<<search-settings-allowed-stored-scripts,`search.aggs.allowed_stored_metric_scripts`>>\nwill return an error.\n\n[[search-settings-allowed-inline-scripts]]\n`search.aggs.allowed_inline_metric_scripts`::\n(<<cluster-update-settings,Dynamic>>, list of strings)\nList of inline scripts that can be used in scripted metrics aggregations when\n<<search-settings-only-allowed-scripts,`search.aggs.only_allowed_metric_scripts`>>\nis set to `true`.\nDefaults to an empty list.\n+\nRequests using other inline scripts will return an error.\n\n[[search-settings-allowed-stored-scripts]]\n`search.aggs.allowed_stored_metric_scripts`::\n(<<cluster-update-settings,Dynamic>>, list of strings)\nList of ids of stored scripts that can be used in scripted metrics aggregations when\n<<search-settings-only-allowed-scripts,`search.aggs.only_allowed_metric_scripts`>>\nis set to `true`.\nDefaults to an empty list.\n+\nRequests using other stored scripts will return an error.\n\n[[indices-query-bool-max-nested-depth]]\n`indices.query.bool.max_nested_depth`::\n(<<static-cluster-setting,Static>>, integer) Maximum nested depth of queries. Defaults to `30`.\n+\nThis setting limits the nesting depth of queries. Deep nesting of queries may lead to\nstack overflow errors.\n"
}