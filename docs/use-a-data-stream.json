{
    "meta": {
        "timestamp": "2024-11-01T03:07:10.524271",
        "size": 9504,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/use-a-data-stream.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": false,
        "title": "use-a-data-stream",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[use-a-data-stream]]\n== Use a data stream\n\nAfter you <<set-up-a-data-stream,set up a data stream>>, you can do\nthe following:\n\n* <<add-documents-to-a-data-stream>>\n* <<search-a-data-stream>>\n* <<get-stats-for-a-data-stream>>\n* <<manually-roll-over-a-data-stream>>\n* <<open-closed-backing-indices>>\n* <<reindex-with-a-data-stream>>\n* <<update-docs-in-a-data-stream-by-query>>\n* <<delete-docs-in-a-data-stream-by-query>>\n* <<update-delete-docs-in-a-backing-index>>\n\n////\n[source,console]\n----\nPUT /_index_template/my-data-stream-template\n{\n  \"index_patterns\": [ \"my-data-stream*\" ],\n  \"data_stream\": { }\n}\n\nPUT /_data_stream/my-data-stream\n\nPOST /my-data-stream/_rollover/\n\nPOST /my-data-stream/_rollover/\n\nPUT /my-data-stream/_create/bfspvnIBr7VVZlfp2lqX?refresh=wait_for\n{\n  \"@timestamp\": \"2099-03-08T11:06:07.000Z\",\n  \"user\": {\n    \"id\": \"yWIumJd7\"\n  },\n  \"message\": \"Login successful\"\n}\n----\n// TESTSETUP\n\n[source,console]\n----\nDELETE /_data_stream/my-data-stream*\n\nDELETE /_index_template/my-data-stream-template\n----\n// TEARDOWN\n////\n\n[discrete]\n[[add-documents-to-a-data-stream]]\n=== Add documents to a data stream\n\nTo add an individual document, use the <<docs-index_,index API>>.\n<<ingest,Ingest pipelines>> are supported.\n\n[source,console]\n----\nPOST /my-data-stream/_doc/\n{\n  \"@timestamp\": \"2099-03-08T11:06:07.000Z\",\n  \"user\": {\n    \"id\": \"8a4f500d\"\n  },\n  \"message\": \"Login successful\"\n}\n----\n\nYou cannot add new documents to a data stream using the index API's `PUT\n/<target>/_doc/<_id>` request format. To specify a document ID, use the `PUT\n/<target>/_create/<_id>` format instead. Only an\n<<docs-index-api-op_type,`op_type`>> of `create` is supported.\n\nTo add multiple documents with a single request, use the <<docs-bulk,bulk API>>.\nOnly `create` actions are supported.\n\n[source,console]\n----\nPUT /my-data-stream/_bulk?refresh\n{\"create\":{ }}\n{ \"@timestamp\": \"2099-03-08T11:04:05.000Z\", \"user\": { \"id\": \"vlb44hny\" }, \"message\": \"Login attempt failed\" }\n{\"create\":{ }}\n{ \"@timestamp\": \"2099-03-08T11:06:07.000Z\", \"user\": { \"id\": \"8a4f500d\" }, \"message\": \"Login successful\" }\n{\"create\":{ }}\n{ \"@timestamp\": \"2099-03-09T11:07:08.000Z\", \"user\": { \"id\": \"l7gk7f82\" }, \"message\": \"Logout successful\" }\n----\n\n[discrete]\n[[search-a-data-stream]]\n=== Search a data stream\n\nThe following search APIs support data streams:\n\n* <<search-search, Search>>\n* <<async-search, Async search>>\n* <<search-multi-search, Multi search>>\n* <<search-field-caps, Field capabilities>>\n* <<eql-search-api, EQL search>>\n\n[discrete]\n[[get-stats-for-a-data-stream]]\n=== Get statistics for a data stream\n\nUse the <<data-stream-stats-api,data stream stats API>> to get\nstatistics for one or more data streams:\n\n[source,console]\n----\nGET /_data_stream/my-data-stream/_stats?human=true\n----\n\n[discrete]\n[[manually-roll-over-a-data-stream]]\n=== Manually roll over a data stream\n\nUse the <<indices-rollover-index,rollover API>> to manually\n<<data-streams-rollover,roll over>> a data stream. You have\ntwo options when manually rolling over:\n\n1. To immediately trigger a rollover:\n+\n[source,console]\n----\nPOST /my-data-stream/_rollover/\n----\n2. Or to postpone the rollover until the next indexing event occurs:\n+\n[source,console]\n----\nPOST /my-data-stream/_rollover?lazy\n----\n+\nUse the second to avoid having empty backing indices in data streams\nthat do not get updated often.\n\n[discrete]\n[[open-closed-backing-indices]]\n=== Open closed backing indices\n\nYou cannot search a <<indices-close,closed>> backing index, even by searching\nits data stream. You also cannot <<update-docs-in-a-data-stream-by-query,update>>\nor <<delete-docs-in-a-data-stream-by-query,delete>> documents in a closed index.\n\nTo re-open a closed backing index, submit an <<indices-open-close,open\nindex API request>> directly to the index:\n\n[source,console]\n----\nPOST /.ds-my-data-stream-2099.03.07-000001/_open/\n----\n// TEST[setup:my_index]\n// TEST[s/.ds-my-data-stream-2099.03.07-000001/my-index-000001/]\n\nTo re-open all closed backing indices for a data stream, submit an open index\nAPI request to the stream:\n\n[source,console]\n----\nPOST /my-data-stream/_open/\n----\n\n[discrete]\n[[reindex-with-a-data-stream]]\n=== Reindex with a data stream\n\nUse the <<docs-reindex,reindex API>> to copy documents from an existing index,\nalias, or data stream to a data stream. Because data streams are\n<<data-streams-append-only,append-only>>, a reindex into a data stream must use\nan `op_type` of `create`. A reindex cannot update existing documents in a data\nstream.\n\n////\n[source,console]\n----\nPUT /_bulk?refresh=wait_for\n{\"create\":{\"_index\" : \"archive_1\"}}\n{ \"@timestamp\": \"2099-03-08T11:04:05.000Z\" }\n{\"create\":{\"_index\" : \"archive_2\"}}\n{ \"@timestamp\": \"2099-03-08T11:06:07.000Z\" }\n{\"create\":{\"_index\" : \"archive_2\"}}\n{ \"@timestamp\": \"2099-03-09T11:07:08.000Z\" }\n{\"create\":{\"_index\" : \"archive_2\"}}\n{ \"@timestamp\": \"2099-03-09T11:07:08.000Z\" }\n\nPOST /_aliases\n{\n  \"actions\" : [\n    { \"add\" : { \"index\" : \"archive_1\", \"alias\" : \"archive\" } },\n    { \"add\" : { \"index\" : \"archive_2\", \"alias\" : \"archive\", \"is_write_index\" : true} }\n  ]\n}\n----\n////\n\n[source,console]\n----\nPOST /_reindex\n{\n  \"source\": {\n    \"index\": \"archive\"\n  },\n  \"dest\": {\n    \"index\": \"my-data-stream\",\n    \"op_type\": \"create\"\n  }\n}\n----\n// TEST[continued]\n\n[discrete]\n[[update-docs-in-a-data-stream-by-query]]\n=== Update documents in a data stream by query\n\nUse the <<docs-update-by-query,update by query API>> to update documents in a\ndata stream that match a provided query:\n\n[source,console]\n----\nPOST /my-data-stream/_update_by_query\n{\n  \"query\": {\n    \"match\": {\n      \"user.id\": \"l7gk7f82\"\n    }\n  },\n  \"script\": {\n    \"source\": \"ctx._source.user.id = params.new_id\",\n    \"params\": {\n      \"new_id\": \"XgdX0NoX\"\n    }\n  }\n}\n----\n\n[discrete]\n[[delete-docs-in-a-data-stream-by-query]]\n=== Delete documents in a data stream by query\n\nUse the <<docs-delete-by-query,delete by query API>> to delete documents in a\ndata stream that match a provided query:\n\n[source,console]\n----\nPOST /my-data-stream/_delete_by_query\n{\n  \"query\": {\n    \"match\": {\n      \"user.id\": \"vlb44hny\"\n    }\n  }\n}\n----\n\n[discrete]\n[[update-delete-docs-in-a-backing-index]]\n=== Update or delete documents in a backing index\n\nIf needed, you can update or delete documents in a data stream by sending\nrequests to the backing index containing the document. You'll need:\n\n* The <<mapping-id-field,document ID>>\n* The name of the backing index containing the document\n* If updating the document, its <<optimistic-concurrency-control,sequence number\nand primary term>>\n\nTo get this information, use a <<search-a-data-stream,search request>>:\n\n[source,console]\n----\nGET /my-data-stream/_search\n{\n  \"seq_no_primary_term\": true,\n  \"query\": {\n    \"match\": {\n      \"user.id\": \"yWIumJd7\"\n    }\n  }\n}\n----\n\nResponse:\n\n[source,console-result]\n----\n{\n  \"took\": 20,\n  \"timed_out\": false,\n  \"_shards\": {\n    \"total\": 3,\n    \"successful\": 3,\n    \"skipped\": 0,\n    \"failed\": 0\n  },\n  \"hits\": {\n    \"total\": {\n      \"value\": 1,\n      \"relation\": \"eq\"\n    },\n    \"max_score\": 0.2876821,\n    \"hits\": [\n      {\n        \"_index\": \".ds-my-data-stream-2099.03.08-000003\",      <1>\n        \"_id\": \"bfspvnIBr7VVZlfp2lqX\",              <2>\n        \"_seq_no\": 0,                               <3>\n        \"_primary_term\": 1,                         <4>\n        \"_score\": 0.2876821,\n        \"_source\": {\n          \"@timestamp\": \"2099-03-08T11:06:07.000Z\",\n          \"user\": {\n            \"id\": \"yWIumJd7\"\n          },\n          \"message\": \"Login successful\"\n        }\n      }\n    ]\n  }\n}\n----\n// TESTRESPONSE[s/\"took\": 20/\"took\": $body.took/]\n// TESTRESPONSE[s/\"max_score\": 0.2876821/\"max_score\": $body.hits.max_score/]\n// TESTRESPONSE[s/\"_index\": \".ds-my-data-stream-2099.03.08-000003\"/\"_index\": $body.hits.hits.0._index/]\n// TESTRESPONSE[s/\"_score\": 0.2876821/\"_score\": $body.hits.hits.0._score/]\n\n<1> Backing index containing the matching document\n<2> Document ID for the document\n<3> Current sequence number for the document\n<4> Primary term for the document\n\nTo update the document, use an <<docs-index_,index API>> request with valid\n`if_seq_no` and `if_primary_term` arguments:\n\n[source,console]\n----\nPUT /.ds-my-data-stream-2099-03-08-000003/_doc/bfspvnIBr7VVZlfp2lqX?if_seq_no=0&if_primary_term=1\n{\n  \"@timestamp\": \"2099-03-08T11:06:07.000Z\",\n  \"user\": {\n    \"id\": \"8a4f500d\"\n  },\n  \"message\": \"Login successful\"\n}\n----\n// TEST[setup:my_index]\n// TEST[s/.ds-my-data-stream-2099.03.08-000003/my-index-000001/]\n// TEST[s/bfspvnIBr7VVZlfp2lqX/1/]\n// TEST[s/if_seq_no=0/if_seq_no=1/]\n\nTo delete the document, use the <<docs-delete,delete API>>:\n\n[source,console]\n----\nDELETE /.ds-my-data-stream-2099.03.08-000003/_doc/bfspvnIBr7VVZlfp2lqX\n----\n// TEST[setup:my_index]\n// TEST[s/.ds-my-data-stream-2099.03.08-000003/my-index-000001/]\n// TEST[s/bfspvnIBr7VVZlfp2lqX/1/]\n\nTo delete or update multiple documents with a single request, use the\n<<docs-bulk,bulk API>>'s `delete`, `index`, and `update` actions. For `index`\nactions, include valid <<bulk-optimistic-concurrency-control,`if_seq_no` and\n`if_primary_term`>> arguments.\n\n[source,console]\n----\nPUT /_bulk?refresh\n{ \"index\": { \"_index\": \".ds-my-data-stream-2099.03.08-000003\", \"_id\": \"bfspvnIBr7VVZlfp2lqX\", \"if_seq_no\": 0, \"if_primary_term\": 1 } }\n{ \"@timestamp\": \"2099-03-08T11:06:07.000Z\", \"user\": { \"id\": \"8a4f500d\" }, \"message\": \"Login successful\" }\n----\n// TEST[setup:my_index]\n// TEST[s/.ds-my-data-stream-2099.03.08-000003/my-index-000001/]\n// TEST[s/bfspvnIBr7VVZlfp2lqX/1/]\n\n"
}