{
    "meta": {
        "size": 9974,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/security-api-create-cross-cluster-api-key.html",
        "type": "documentation",
        "role": [
            "xpack"
        ],
        "has_code": true,
        "title": "security-api-create-cross-cluster-api-key",
        "version": "8.15"
    },
    "doc": "[role=\"xpack\"]\n[[security-api-create-cross-cluster-api-key]]\n=== Create Cross-Cluster API key API\n\n++++\n<titleabbrev>Create Cross-Cluster API key</titleabbrev>\n++++\n\nCreates an API key of the `cross_cluster` type for the <<remote-clusters-api-key,API key based remote cluster>> access.\nA `cross_cluster` API key cannot be used to authenticate through the REST interface.\nOn the contrary, a <<security-api-create-api-key,REST API key>> is meant to be used through the REST interface\nand cannot be used for the API key based remote cluster access.\n\n[[security-api-create-cross-cluster-api-key-request]]\n==== {api-request-title}\n\n`POST /_security/cross_cluster/api_key`\n\n[[security-api-create-cross-cluster-api-key-prereqs]]\n==== {api-prereq-title}\n\n* To use this API, you must have at least the `manage_security` cluster privilege.\n\nIMPORTANT: To authenticate this request you must use a credential that is *not* an API key. Even if you use an API key that has the required privilege, the API returns an error.\n\n[[security-api-create-cross-cluster-api-key-desc]]\n==== {api-description-title}\n\nCross-cluster API keys are created by the {es} API key service, which is automatically enabled.\nFor instructions on disabling the API key service, refer to <<api-key-service-settings>>.\n\nA successful request returns a JSON structure that contains the\nAPI key, its unique ID, and its name. If applicable, it also returns expiration\ninformation for the API key in milliseconds.\n\nNOTE: By default, API keys never expire. You can specify expiration information\nwhen you create the API keys.\n\nRefer to <<api-key-service-settings>> for configuration settings related to API key\nservice.\n\nCross-cluster API keys can only be updated with the\n<<security-api-update-cross-cluster-api-key,Update Cross-Cluster API key API>>.\nAttempting to update them with the <<security-api-update-api-key,Update REST API key API>>\nor the <<security-api-bulk-update-api-keys,Bulk Update REST API Keys API>> will result\ninto an error. They can be retrieved and invalidated using\n<<security-api-get-api-key,Get API keys API>>, <<security-api-query-api-key,Query API keys API>>\nand <<security-api-invalidate-api-key,Invalidate API keys API>>.\n\n\n[[security-api-create-cross-cluster-api-key-request-body]]\n==== {api-request-body-title}\n\nThe following parameters can be specified in the body of a POST request:\n\n`name`::\n(Required, string) Specifies the name for this API key.\n\n[[cross-cluster-api-key-access]]\n`access`::\n(required, object) The access to be granted to this API key. The access is\ncomposed of permissions for cross-cluster search and cross-cluster replication.\nAt least one of them must be specified.\n`search`::: (optional, list) A list of indices permission entries for cross-cluster search.\n`names`:::: (required, list) A list of indices or name patterns to which the\npermissions in this entry apply.\n`field_security`:::: (optional, object) The document fields that the owners of the role have\nread access to. This may not be set when the `replication` field is also defined. For more information,\nsee <<ccx-apikeys-dls-fls, Field and document level security with cross-cluster API keys>>.\n`query`:::: (optional) A search query that defines the documents the owners of the role have\nread access to. A document within the specified indices must match this query to be accessible by the\nowners of the role. This may not be set when the `replication` field is also defined. For more information,\nsee <<ccx-apikeys-dls-fls, Field and document level security with cross-cluster API keys>>.\n`allow_restricted_indices`:::: (optional, boolean) This needs to be set to `true` (default\nis `false`) if the patterns in the `names` field should cover <<system-indices,system indices>>.\n`replication`::: (optional, list) A list of indices permission entries for cross-cluster replication.\n`names`:::: (required, list) A list of indices or name patterns to which the\npermissions in this entry apply.\n\nNOTE: No explicit <<security-privileges,privileges>> should be specified for either search\nor replication access. The creation process automatically converts the `access` specification\nto a <<api-key-role-descriptors,role descriptor>> which has relevant privileges assigned accordingly.\nThe `access` value as well as its corresponding `role_descriptors` are returned in responses of\n<<security-api-get-api-key,Get API keys API>> and <<security-api-query-api-key,Query API keys API>>.\n\nNOTE: Unlike <<api-key-role-descriptors,REST API keys>>, a cross-cluster API key\ndoes not capture permissions of the authenticated user. The API key's effective\npermission is exactly as specified with the `access` parameter.\n\n`expiration`::\n(optional, string) Expiration time for the API key. By default, API keys never\nexpire.\n\n`metadata`::\n(optional, object) Arbitrary metadata that you want to associate with the API key.\nIt supports nested data structure.\nWithin the `metadata` object, keys beginning with `_` are reserved for\nsystem usage.\n\n[[security-api-create-cross-cluster-api-key-example]]\n==== {api-examples-title}\n\nThe following example creates a cross-cluster API key:\n\n[source,console]\n----\nPOST /_security/cross_cluster/api_key\n{\n  \"name\": \"my-cross-cluster-api-key\",\n  \"expiration\": \"1d\",   <1>\n  \"access\": {\n    \"search\": [  <2>\n      {\n        \"names\": [\"logs*\"]\n      }\n    ],\n    \"replication\": [  <3>\n      {\n        \"names\": [\"archive*\"]\n      }\n    ]\n  },\n  \"metadata\": {\n    \"description\": \"phase one\",\n    \"environment\": {\n       \"level\": 1,\n       \"trusted\": true,\n       \"tags\": [\"dev\", \"staging\"]\n    }\n  }\n}\n----\n<1> Optional expiration for the API key being generated. If expiration is not\nprovided then the API key does not expire.\n<2> Cross-cluster search access to be granted to the API key.\n<3> Cross-cluster replication access to be granted to the API key.\n\nA successful call returns a JSON structure that provides API key information.\n\n[source,console-result]\n----\n{\n  \"id\": \"VuaCfGcBCdbkQm-e5aOx\",        <1>\n  \"name\": \"my-cross-cluster-api-key\",\n  \"expiration\": 1544068612110,         <2>\n  \"api_key\": \"ui2lp2axTNmsyakw9tvNnw\", <3>\n  \"encoded\": \"VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==\"  <4>\n}\n----\n// TESTRESPONSE[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n// TESTRESPONSE[s/1544068612110/$body.expiration/]\n// TESTRESPONSE[s/ui2lp2axTNmsyakw9tvNnw/$body.api_key/]\n// TESTRESPONSE[s/VnVhQ2ZHY0JDZGJrUW0tZTVhT3g6dWkybHAyYXhUTm1zeWFrdzl0dk5udw==/$body.encoded/]\n<1> Unique `id` for this API key\n<2> Optional expiration in milliseconds for this API key\n<3> Generated API key secret\n<4> API key credentials which is the Base64-encoding of the UTF-8\nrepresentation of the `id` and `api_key` joined by a colon (`:`)\n\nThe API key information can be retrieved with the <<security-api-get-api-key,Get API key API>>.\n\n[source,console]\n--------------------------------------------------\nGET /_security/api_key?id=VuaCfGcBCdbkQm-e5aOx\n--------------------------------------------------\n// TEST[s/VuaCfGcBCdbkQm-e5aOx/$body.id/]\n// TEST[continued]\n\nA successful call returns a JSON structure that contains the information of the API key:\n\n[source,js]\n--------------------------------------------------\n{\n  \"api_keys\": [\n    {\n      \"id\": \"VuaCfGcBCdbkQm-e5aOx\", <1>\n      \"name\": \"my-cross-cluster-api-key\", <2>\n      \"type\": \"cross_cluster\", <3>\n      \"creation\": 1548550550158,\n      \"expiration\": 1548551550158,\n      \"invalidated\": false,\n      \"username\": \"myuser\",\n      \"realm\": \"native1\",\n      \"metadata\": {\n        \"description\": \"phase one\",\n          \"environment\": {\n             \"level\": 1,\n             \"trusted\": true,\n             \"tags\": [\"dev\", \"staging\"]\n          }\n      },\n      \"role_descriptors\": {  <4>\n        \"cross_cluster\": {\n          \"cluster\": [  <5>\n              \"cross_cluster_search\", \"cross_cluster_replication\"\n          ],\n          \"indices\": [\n            {  <6>\n              \"names\": [\n                \"logs*\"\n              ],\n              \"privileges\": [\n                \"read\", \"read_cross_cluster\", \"view_index_metadata\"\n              ],\n              \"allow_restricted_indices\": false\n            },\n            {  <7>\n              \"names\": [\n                \"archive*\"\n              ],\n              \"privileges\": [\n                \"cross_cluster_replication\", \"cross_cluster_replication_internal\"\n              ],\n              \"allow_restricted_indices\": false\n            }\n          ],\n          \"applications\": [ ],\n          \"run_as\": [ ],\n          \"metadata\": { },\n          \"transient_metadata\": {\n            \"enabled\": true\n          }\n        }\n      },\n      \"access\": {  <8>\n        \"search\": [\n          {\n            \"names\": [\n              \"logs*\"\n            ],\n            \"allow_restricted_indices\": false\n          }\n        ],\n        \"replication\": [\n          {\n            \"names\": [\n              \"archive*\"\n            ],\n            \"allow_restricted_indices\": false\n          }\n        ]\n      }\n    }\n  ]\n}\n--------------------------------------------------\n// NOTCONSOLE\n<1> ID for the API key\n<2> Name of the API key\n<3> Type of the API key\n<4> The role descriptors generated for the cross-cluster API key. It always\ncontains exactly one role descriptor named `cross_cluster`.\nA cross-cluster API key has no limited-by role descriptors.\n<5> The cluster privileges necessary for the required cross-cluster access.\nThe value is `cross_cluster_search` if only cross-cluster search is required.\nIt is `cross_cluster_replication` if only cross-cluster replication is required.\nOr both, if search and replication are required.\n<6> The indices privileges corresponding to the required cross-cluster search access.\n<7> The indices privileges corresponding to the required cross-cluster replication access.\n<8> The `access` corresponds to the value specified at API key creation time.\n\n\nTo use the generated API key, configure it as the cluster credential as part of an API key based remote cluster configuration.\n"
}