{
    "meta": {
        "size": 8897,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/analysis-keyword-marker-tokenfilter.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "analysis-keyword-marker-tokenfilter",
        "version": "8.15"
    },
    "doc": "[[analysis-keyword-marker-tokenfilter]]\n=== Keyword marker token filter\n++++\n<titleabbrev>Keyword marker</titleabbrev>\n++++\n\nMarks specified tokens as keywords, which are not stemmed.\n\nThe `keyword_marker` filter assigns specified tokens a `keyword` attribute of\n`true`. Stemmer token filters, such as\n<<analysis-stemmer-tokenfilter,`stemmer`>> or\n<<analysis-porterstem-tokenfilter,`porter_stem`>>, skip tokens with a `keyword`\nattribute of `true`.\n\n[IMPORTANT]\n====\nTo work properly, the `keyword_marker` filter must be listed before any stemmer\ntoken filters in the <<analysis-custom-analyzer,analyzer configuration>>.\n====\n\nThe `keyword_marker` filter uses Lucene's\n{lucene-analysis-docs}/miscellaneous/KeywordMarkerFilter.html[KeywordMarkerFilter].\n\n[[analysis-keyword-marker-tokenfilter-analyze-ex]]\n==== Example\n\nTo see how the `keyword_marker` filter works, you first need to produce a token\nstream containing stemmed tokens.\n\nThe following <<indices-analyze,analyze API>> request uses the\n<<analysis-stemmer-tokenfilter,`stemmer`>> filter to create stemmed tokens for\n`fox running and jumping`.\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"whitespace\",\n  \"filter\": [ \"stemmer\" ],\n  \"text\": \"fox running and jumping\"\n}\n----\n\nThe request produces the following tokens. Note that `running` was stemmed to\n`run` and `jumping` was stemmed to `jump`.\n\n[source,text]\n----\n[ fox, run, and, jump ]\n----\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"fox\",\n      \"start_offset\": 0,\n      \"end_offset\": 3,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"run\",\n      \"start_offset\": 4,\n      \"end_offset\": 11,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"and\",\n      \"start_offset\": 12,\n      \"end_offset\": 15,\n      \"type\": \"word\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"jump\",\n      \"start_offset\": 16,\n      \"end_offset\": 23,\n      \"type\": \"word\",\n      \"position\": 3\n    }\n  ]\n}\n----\n////\n\nTo prevent `jumping` from being stemmed, add the `keyword_marker` filter before\nthe `stemmer` filter in the previous analyze API request. Specify `jumping` in\nthe `keywords` parameter of the `keyword_marker` filter.\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"whitespace\",\n  \"filter\": [\n    {\n      \"type\": \"keyword_marker\",\n      \"keywords\": [ \"jumping\" ]\n    },\n    \"stemmer\"\n  ],\n  \"text\": \"fox running and jumping\"\n}\n----\n\nThe request produces the following tokens. `running` is still stemmed to `run`,\nbut `jumping` is not stemmed.\n\n[source,text]\n----\n[ fox, run, and, jumping ]\n----\n\n////\n[source,console-result]\n----\n{\n  \"tokens\": [\n    {\n      \"token\": \"fox\",\n      \"start_offset\": 0,\n      \"end_offset\": 3,\n      \"type\": \"word\",\n      \"position\": 0\n    },\n    {\n      \"token\": \"run\",\n      \"start_offset\": 4,\n      \"end_offset\": 11,\n      \"type\": \"word\",\n      \"position\": 1\n    },\n    {\n      \"token\": \"and\",\n      \"start_offset\": 12,\n      \"end_offset\": 15,\n      \"type\": \"word\",\n      \"position\": 2\n    },\n    {\n      \"token\": \"jumping\",\n      \"start_offset\": 16,\n      \"end_offset\": 23,\n      \"type\": \"word\",\n      \"position\": 3\n    }\n  ]\n}\n----\n////\n\nTo see the `keyword` attribute for these tokens, add the following arguments to\nthe analyze API request:\n\n* `explain`: `true`\n* `attributes`: `keyword`\n\n[source,console]\n----\nGET /_analyze\n{\n  \"tokenizer\": \"whitespace\",\n  \"filter\": [\n    {\n      \"type\": \"keyword_marker\",\n      \"keywords\": [ \"jumping\" ]\n    },\n    \"stemmer\"\n  ],\n  \"text\": \"fox running and jumping\",\n  \"explain\": true,\n  \"attributes\": \"keyword\"\n}\n----\n\nThe API returns the following response. Note the `jumping` token has a\n`keyword` attribute of `true`.\n\n[source,console-result]\n----\n{\n  \"detail\": {\n    \"custom_analyzer\": true,\n    \"charfilters\": [],\n    \"tokenizer\": {\n      \"name\": \"whitespace\",\n      \"tokens\": [\n        {\n          \"token\": \"fox\",\n          \"start_offset\": 0,\n          \"end_offset\": 3,\n          \"type\": \"word\",\n          \"position\": 0\n        },\n        {\n          \"token\": \"running\",\n          \"start_offset\": 4,\n          \"end_offset\": 11,\n          \"type\": \"word\",\n          \"position\": 1\n        },\n        {\n          \"token\": \"and\",\n          \"start_offset\": 12,\n          \"end_offset\": 15,\n          \"type\": \"word\",\n          \"position\": 2\n        },\n        {\n          \"token\": \"jumping\",\n          \"start_offset\": 16,\n          \"end_offset\": 23,\n          \"type\": \"word\",\n          \"position\": 3\n        }\n      ]\n    },\n    \"tokenfilters\": [\n      {\n        \"name\": \"__anonymous__keyword_marker\",\n        \"tokens\": [\n          {\n            \"token\": \"fox\",\n            \"start_offset\": 0,\n            \"end_offset\": 3,\n            \"type\": \"word\",\n            \"position\": 0,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"running\",\n            \"start_offset\": 4,\n            \"end_offset\": 11,\n            \"type\": \"word\",\n            \"position\": 1,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"and\",\n            \"start_offset\": 12,\n            \"end_offset\": 15,\n            \"type\": \"word\",\n            \"position\": 2,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"jumping\",\n            \"start_offset\": 16,\n            \"end_offset\": 23,\n            \"type\": \"word\",\n            \"position\": 3,\n            \"keyword\": true\n          }\n        ]\n      },\n      {\n        \"name\": \"stemmer\",\n        \"tokens\": [\n          {\n            \"token\": \"fox\",\n            \"start_offset\": 0,\n            \"end_offset\": 3,\n            \"type\": \"word\",\n            \"position\": 0,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"run\",\n            \"start_offset\": 4,\n            \"end_offset\": 11,\n            \"type\": \"word\",\n            \"position\": 1,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"and\",\n            \"start_offset\": 12,\n            \"end_offset\": 15,\n            \"type\": \"word\",\n            \"position\": 2,\n            \"keyword\": false\n          },\n          {\n            \"token\": \"jumping\",\n            \"start_offset\": 16,\n            \"end_offset\": 23,\n            \"type\": \"word\",\n            \"position\": 3,\n            \"keyword\": true\n          }\n        ]\n      }\n    ]\n  }\n}\n----\n\n[[analysis-keyword-marker-tokenfilter-configure-parms]]\n==== Configurable parameters\n\n`ignore_case`::\n(Optional, Boolean)\nIf `true`, matching for the `keywords` and `keywords_path` parameters ignores\nletter case. Defaults to `false`.\n\n`keywords`::\n(Required*, array of strings)\nArray of keywords. Tokens that match these keywords are not stemmed.\n+\nThis parameter, `keywords_path`, or `keywords_pattern` must be specified.\nYou cannot specify this parameter and `keywords_pattern`.\n\n`keywords_path`::\n+\n--\n(Required*, string)\nPath to a file that contains a list of keywords. Tokens that match these\nkeywords are not stemmed.\n\nThis path must be absolute or relative to the `config` location, and the file\nmust be UTF-8 encoded. Each word in the file must be separated by a line break.\n\nThis parameter, `keywords`, or `keywords_pattern` must be specified.\nYou cannot specify this parameter and `keywords_pattern`.\n--\n\n`keywords_pattern`::\n+\n--\n(Required*, string)\nhttps://docs.oracle.com/javase/8/docs/api/java/util/regex/Pattern.html[Java\nregular expression] used to match tokens. Tokens that match this expression are\nmarked as keywords and not stemmed.\n\nThis parameter, `keywords`, or `keywords_path` must be specified. You\ncannot specify this parameter and `keywords` or `keywords_pattern`.\n\n[WARNING]\n====\nPoorly written regular expressions can cause {es} to run slowly or result\nin stack overflow errors, causing the running node to suddenly exit.\n====\n--\n\n[[analysis-keyword-marker-tokenfilter-customize]]\n==== Customize and add to an analyzer\n\nTo customize the `keyword_marker` filter, duplicate it to create the basis for a\nnew custom token filter. You can modify the filter using its configurable\nparameters.\n\nFor example, the following <<indices-create-index,create index API>> request\nuses a custom `keyword_marker` filter and the `porter_stem`\nfilter to configure a new <<analysis-custom-analyzer,custom analyzer>>.\n\nThe custom `keyword_marker` filter marks tokens specified in the\n`analysis/example_word_list.txt` file as keywords. The `porter_stem` filter does\nnot stem these tokens.\n\n[source,console]\n----\nPUT /my-index-000001\n{\n  \"settings\": {\n    \"analysis\": {\n      \"analyzer\": {\n        \"my_custom_analyzer\": {\n          \"type\": \"custom\",\n          \"tokenizer\": \"standard\",\n          \"filter\": [\n            \"my_custom_keyword_marker_filter\",\n            \"porter_stem\"\n          ]\n        }\n      },\n      \"filter\": {\n        \"my_custom_keyword_marker_filter\": {\n          \"type\": \"keyword_marker\",\n          \"keywords_path\": \"analysis/example_word_list.txt\"\n        }\n      }\n    }\n  }\n}\n----\n"
}