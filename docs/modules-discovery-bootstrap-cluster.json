{
    "meta": {
        "size": 8265,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/modules-discovery-bootstrap-cluster.html",
        "type": "documentation",
        "role": [],
        "has_code": true,
        "title": "modules-discovery-bootstrap-cluster",
        "version": "8.15"
    },
    "doc": "[[modules-discovery-bootstrap-cluster]]\n=== Bootstrapping a cluster\n\nStarting an Elasticsearch cluster for the very first time requires the initial\nset of <<master-node,master-eligible nodes>> to be explicitly defined on one or\nmore of the master-eligible nodes in the cluster. This is known as _cluster\nbootstrapping_. This is only required the first time a cluster starts up.\nFreshly-started nodes that are joining a running cluster obtain this\ninformation from the cluster's elected master.\n\nThe initial set of master-eligible nodes is defined in the\n<<initial_master_nodes,`cluster.initial_master_nodes` setting>>. This should be\nset to a list containing one of the following items for each master-eligible\nnode:\n\n- The <<node-name,node name>> of the node.\n- The node's hostname if `node.name` is not set, because `node.name` defaults\n  to the node's hostname. You must use either the fully-qualified hostname or\n  the bare hostname <<modules-discovery-bootstrap-cluster-fqdns,depending on\n  your system configuration>>.\n- The IP address of the node's <<modules-network-binding-publishing,transport\n  publish address>>, if it is not possible to use the `node.name` of the node.\n  This is normally the IP address to which\n  <<common-network-settings,`network.host`>> resolves but\n  <<advanced-network-settings,this can be overridden>>.\n- The IP address and port of the node's publish address, in the form `IP:PORT`,\n  if it is not possible to use the `node.name` of the node and there are\n  multiple nodes sharing a single IP address.\n\nDo not set `cluster.initial_master_nodes` on master-ineligible nodes.\n\n[IMPORTANT]\n====\nAfter the cluster has formed, remove the `cluster.initial_master_nodes` setting\nfrom each node's configuration and never set it again for this cluster. Do not\nconfigure this setting on nodes joining an existing cluster. Do not configure\nthis setting on nodes which are restarting. Do not configure this setting when\nperforming a full-cluster restart.\n\nIf you leave `cluster.initial_master_nodes` in place once the cluster has formed\nthen there is a risk that a future misconfiguration may result in bootstrapping\na new cluster alongside your existing cluster. It may not be possible to recover\nfrom this situation without losing data.\n====\n\nThe simplest way to create a new cluster is for you to select one of your\nmaster-eligible nodes that will bootstrap itself into a single-node cluster,\nwhich all the other nodes will then join. This simple approach is not resilient\nto failures until the other master-eligible nodes have joined the cluster. For\nexample, if you have a master-eligible node with <<node-name,node name>>\n`master-a` then configure it as follows (omitting\n`cluster.initial_master_nodes` from the configuration of all other nodes):\n\n[source,yaml]\n--------------------------------------------------\ncluster.initial_master_nodes: master-a\n--------------------------------------------------\n\nFor fault-tolerant cluster bootstrapping, use all the master-eligible nodes.\nFor instance, if your cluster has 3 master-eligible nodes with <<node-name,node\nnames>> `master-a`, `master-b` and `master-c` then configure them all as\nfollows:\n\n[source,yaml]\n--------------------------------------------------\ncluster.initial_master_nodes:\n  - master-a\n  - master-b\n  - master-c\n--------------------------------------------------\n\nIMPORTANT: You must set `cluster.initial_master_nodes` to the same list of\nnodes on each node on which it is set in order to be sure that only a single\ncluster forms during bootstrapping. If `cluster.initial_master_nodes` varies\nacross the nodes on which it is set then you may bootstrap multiple clusters.\nIt is usually not possible to recover from this situation without losing data.\n\n[[modules-discovery-bootstrap-cluster-fqdns]]\n.Node name formats must match\n****\nThe node names used in the\n`cluster.initial_master_nodes` list must exactly match the `node.name`\nproperties of the nodes. By default the node name is set to the machine's\nhostname which may or may not be fully-qualified depending on your system\nconfiguration. If each node name is a fully-qualified domain name such as\n`master-a.example.com` then you must use fully-qualified domain names in the\n`cluster.initial_master_nodes` list too; conversely if your node names are bare\nhostnames (without the `.example.com` suffix) then you must use bare hostnames\nin the `cluster.initial_master_nodes` list. If you use a mix of fully-qualified\nand bare hostnames, or there is some other mismatch between `node.name` and\n`cluster.initial_master_nodes`, then the cluster will not form successfully and\nyou will see log messages like the following.\n\n[source,text]\n--------------------------------------------------\n[master-a.example.com] master not discovered yet, this node has\nnot previously joined a bootstrapped (v7+) cluster, and this\nnode must discover master-eligible nodes [master-a, master-b] to\nbootstrap a cluster: have discovered [{master-b.example.com}{...\n--------------------------------------------------\n\nThis message shows the node names `master-a.example.com` and\n`master-b.example.com` as well as the `cluster.initial_master_nodes` entries\n`master-a` and `master-b`, and it is clear from this message that they do not\nmatch exactly.\n\n****\n\n[[bootstrap-cluster-name]]\n==== Choosing a cluster name\n\nThe <<cluster-name,`cluster.name`>> setting enables you to create multiple\nclusters which are separated from each other. Nodes verify that they agree on\ntheir cluster name when they first connect to each other, and Elasticsearch\nwill only form a cluster from nodes that all have the same cluster name. The\ndefault value for the cluster name is `elasticsearch`, but it is recommended to\nchange this to reflect the logical name of the cluster.\n\n[[bootstrap-auto-bootstrap]]\n==== Auto-bootstrapping in development mode\n\nBy default each node will automatically bootstrap itself into a single-node\ncluster the first time it starts. If any of the following settings are\nconfigured then auto-bootstrapping will not take place:\n\n* `discovery.seed_providers`\n* `discovery.seed_hosts`\n* `cluster.initial_master_nodes`\n\nTo add a new node into an existing cluster, configure `discovery.seed_hosts` or\nother relevant discovery settings so that the new node can discover the\nexisting master-eligible nodes in the cluster. To bootstrap a new multi-node\ncluster, configure `cluster.initial_master_nodes` as described in the\n<<modules-discovery-bootstrap-cluster,section on cluster bootstrapping>> as\nwell as `discovery.seed_hosts` or other relevant discovery settings.\n\n[[modules-discovery-bootstrap-cluster-joining]]\n.Forming a single cluster\n****\nOnce an {es} node has joined an existing cluster, or bootstrapped a new\ncluster, it will not join a different cluster. {es} will not merge separate\nclusters together after they have formed, even if you subsequently try and\nconfigure all the nodes into a single cluster. This is because there is no way\nto merge these separate clusters together without a risk of data loss. You can\ntell that you have formed separate clusters by checking the cluster UUID\nreported by `GET /` on each node.\n\nIf you intended to add a node into an existing cluster but instead bootstrapped\na separate single-node cluster then you must start again:\n\n. Shut down the node.\n\n. Completely wipe the node by deleting the contents of its <<data-path,data\nfolder>>.\n\n. Configure `discovery.seed_hosts` or `discovery.seed_providers` and other\nrelevant discovery settings. Ensure `cluster.initial_master_nodes` is not set\non any node.\n\n. Restart the node and verify that it joins the existing cluster rather than\nforming its own one-node cluster.\n\nIf you intended to form a new multi-node cluster but instead bootstrapped a\ncollection of single-node clusters then you must start again:\n\n. Shut down all the nodes.\n\n. Completely wipe each node by deleting the contents of their <<data-path,data\nfolders>>.\n\n. Configure `cluster.initial_master_nodes` as described above.\n\n. Configure `discovery.seed_hosts` or `discovery.seed_providers` and other\nrelevant discovery settings.\n\n. Restart all the nodes and verify that they have formed a single cluster.\n\n. Remove `cluster.initial_master_nodes` from every node's configuration.\n\n****\n"
}