{
    "meta": {
        "timestamp": "2024-11-01T02:49:25.738077",
        "size": 5422,
        "url": "https://www.elastic.co/guide/en/elasticsearch/reference/current/esql-multivalued-fields.html",
        "type": "documentation",
        "role": [],
        "has_code": false,
        "title": "esql-multivalued-fields",
        "version": "8.15"
    },
    "doc": "[[esql-multivalued-fields]]\n=== {esql} multivalued fields\n\n++++\n<titleabbrev>Multivalued fields</titleabbrev>\n++++\n\n{esql} is fine reading from multivalued fields:\n\n[source,console,id=esql-multivalued-fields-reorders]\n----\nPOST /mv/_bulk?refresh\n{ \"index\" : {} }\n{ \"a\": 1, \"b\": [2, 1] }\n{ \"index\" : {} }\n{ \"a\": 2, \"b\": 3 }\n\nPOST /_query\n{\n  \"query\": \"FROM mv | LIMIT 2\"\n}\n----\n\nMultivalued fields come back as a JSON array:\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\", \"type\": \"long\"},\n    { \"name\": \"b\", \"type\": \"long\"}\n  ],\n  \"values\": [\n    [1, [1, 2]],\n    [2,      3]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\n\nThe relative order of values in a multivalued field is undefined. They'll frequently be in\nascending order but don't rely on that.\n\n[discrete]\n[[esql-multivalued-fields-dups]]\n==== Duplicate values\n\nSome field types, like <<keyword-field-type,`keyword`>> remove duplicate values on write:\n\n[source,console,id=esql-multivalued-fields-kwdups]\n----\nPUT /mv\n{\n  \"mappings\": {\n    \"properties\": {\n      \"b\": {\"type\": \"keyword\"}\n    }\n  }\n}\n\nPOST /mv/_bulk?refresh\n{ \"index\" : {} }\n{ \"a\": 1, \"b\": [\"foo\", \"foo\", \"bar\"] }\n{ \"index\" : {} }\n{ \"a\": 2, \"b\": [\"bar\", \"bar\"] }\n\nPOST /_query\n{\n  \"query\": \"FROM mv | LIMIT 2\"\n}\n----\n\nAnd {esql} sees that removal:\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\", \"type\": \"long\"},\n    { \"name\": \"b\", \"type\": \"keyword\"}\n  ],\n  \"values\": [\n    [1, [\"bar\", \"foo\"]],\n    [2,          \"bar\"]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\n\nBut other types, like `long` don't remove duplicates.\n\n[source,console,id=esql-multivalued-fields-longdups]\n----\nPUT /mv\n{\n  \"mappings\": {\n    \"properties\": {\n      \"b\": {\"type\": \"long\"}\n    }\n  }\n}\n\nPOST /mv/_bulk?refresh\n{ \"index\" : {} }\n{ \"a\": 1, \"b\": [2, 2, 1] }\n{ \"index\" : {} }\n{ \"a\": 2, \"b\": [1, 1] }\n\nPOST /_query\n{\n  \"query\": \"FROM mv | LIMIT 2\"\n}\n----\n\nAnd {esql} also sees that:\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\", \"type\": \"long\"},\n    { \"name\": \"b\", \"type\": \"long\"}\n  ],\n  \"values\": [\n    [1, [1, 2, 2]],\n    [2,    [1, 1]]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\n\nThis is all at the storage layer. If you store duplicate `long`s and then\nconvert them to strings the duplicates will stay:\n\n[source,console,id=esql-multivalued-fields-longdups-tostring]\n----\nPUT /mv\n{\n  \"mappings\": {\n    \"properties\": {\n      \"b\": {\"type\": \"long\"}\n    }\n  }\n}\n\nPOST /mv/_bulk?refresh\n{ \"index\" : {} }\n{ \"a\": 1, \"b\": [2, 2, 1] }\n{ \"index\" : {} }\n{ \"a\": 2, \"b\": [1, 1] }\n\nPOST /_query\n{\n  \"query\": \"FROM mv | EVAL b=TO_STRING(b) | LIMIT 2\"\n}\n----\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\", \"type\": \"long\"},\n    { \"name\": \"b\", \"type\": \"keyword\"}\n  ],\n  \"values\": [\n    [1, [\"1\", \"2\", \"2\"]],\n    [2,      [\"1\", \"1\"]]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\n[discrete]\n[[esql-multivalued-nulls]]\n==== `null` in a list\n\n`null` values in a list are not preserved at the storage layer:\n\n[source,console,id=esql-multivalued-fields-multivalued-nulls]\n----\nPOST /mv/_doc?refresh\n{ \"a\": [2, null, 1] }\n\nPOST /_query\n{\n  \"query\": \"FROM mv | LIMIT 1\"\n}\n----\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\", \"type\": \"long\"},\n  ],\n  \"values\": [\n    [[1, 2]],\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\n[discrete]\n[[esql-multivalued-fields-functions]]\n==== Functions\n\nUnless otherwise documented functions will return `null` when applied to a multivalued\nfield.\n\n[source,console,id=esql-multivalued-fields-mv-into-null]\n----\nPOST /mv/_bulk?refresh\n{ \"index\" : {} }\n{ \"a\": 1, \"b\": [2, 1] }\n{ \"index\" : {} }\n{ \"a\": 2, \"b\": 3 }\n----\n\n[source,console]\n----\nPOST /_query\n{\n  \"query\": \"FROM mv | EVAL b + 2, a + b | LIMIT 4\"\n}\n----\n// TEST[continued]\n// TEST[warning:Line 1:16: evaluation of [b + 2] failed, treating result as null. Only first 20 failures recorded.]\n// TEST[warning:Line 1:16: java.lang.IllegalArgumentException: single-value function encountered multi-value]\n// TEST[warning:Line 1:23: evaluation of [a + b] failed, treating result as null. Only first 20 failures recorded.]\n// TEST[warning:Line 1:23: java.lang.IllegalArgumentException: single-value function encountered multi-value]\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\",   \"type\": \"long\"},\n    { \"name\": \"b\",   \"type\": \"long\"},\n    { \"name\": \"b + 2\", \"type\": \"long\"},\n    { \"name\": \"a + b\", \"type\": \"long\"}\n  ],\n  \"values\": [\n    [1, [1, 2], null, null],\n    [2,      3,    5,    5]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n\nWork around this limitation by converting the field to single value with one of:\n\n* <<esql-mv_avg>>\n* <<esql-mv_concat>>\n* <<esql-mv_count>>\n* <<esql-mv_max>>\n* <<esql-mv_median>>\n* <<esql-mv_min>>\n* <<esql-mv_sum>>\n\n[source,console,esql-multivalued-fields-mv-into-null]\n----\nPOST /_query\n{\n  \"query\": \"FROM mv | EVAL b=MV_MIN(b) | EVAL b + 2, a + b | LIMIT 4\"\n}\n----\n// TEST[continued]\n\n[source,console-result]\n----\n{\n  \"took\": 28,\n  \"columns\": [\n    { \"name\": \"a\",   \"type\": \"long\"},\n    { \"name\": \"b\",   \"type\": \"long\"},\n    { \"name\": \"b + 2\", \"type\": \"long\"},\n    { \"name\": \"a + b\", \"type\": \"long\"}\n  ],\n  \"values\": [\n    [1, 1, 3, 2],\n    [2, 3, 5, 5]\n  ]\n}\n----\n// TESTRESPONSE[s/\"took\": 28/\"took\": \"$body.took\"/]\n"
}